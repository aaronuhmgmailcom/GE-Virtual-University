/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file VwTrainingUserLog.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace GE.MyLearning.BL
{
	///<summary>
	/// An object representation of the 'VW_TrainingUserLog' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("VwTrainingUserLogBase")]
	public abstract partial class VwTrainingUserLogBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// TrainUserID : 
		/// </summary>
		private System.Int32		  _trainUserId = (int)0;
		
		/// <summary>
		/// UserID : 
		/// </summary>
		private System.String		  _userId = string.Empty;
		
		/// <summary>
		/// GroupID : 
		/// </summary>
		private System.String		  _groupId = null;
		
		/// <summary>
		/// TrainingUserType : 
		/// </summary>
		private System.Int32		  _trainingUserType = (int)0;
		
		/// <summary>
		/// TrainUserStatus : 
		/// </summary>
		private System.Int32		  _trainUserStatus = (int)0;
		
		/// <summary>
		/// TrainAuditingStatus : 
		/// </summary>
		private System.Int32?		  _trainAuditingStatus = null;
		
		/// <summary>
		/// TrainAuditingMan : 
		/// </summary>
		private System.String		  _trainAuditingMan = null;
		
		/// <summary>
		/// TrainAuditingDate : 
		/// </summary>
		private System.DateTime?		  _trainAuditingDate = null;
		
		/// <summary>
		/// CreateTime : 
		/// </summary>
		private System.DateTime?		  _createTime = null;
		
		/// <summary>
		/// TrainAuditingDescription : 
		/// </summary>
		private System.String		  _trainAuditingDescription = null;
		
		/// <summary>
		/// TrainingFinishTime : 
		/// </summary>
		private System.DateTime?		  _trainingFinishTime = null;
		
		/// <summary>
		/// TestFinishTime : 
		/// </summary>
		private System.DateTime?		  _testFinishTime = null;
		
		/// <summary>
		/// InvestigationFinishTime : 
		/// </summary>
		private System.DateTime?		  _investigationFinishTime = null;
		
		/// <summary>
		/// StudyFinishTime : 
		/// </summary>
		private System.DateTime?		  _studyFinishTime = null;
		
		/// <summary>
		/// TrainingLogID : 
		/// </summary>
		private System.Int64		  _trainingLogId = (long)0;
		
		/// <summary>
		/// LogBeginTime : 
		/// </summary>
		private System.DateTime		  _logBeginTime = DateTime.MinValue;
		
		/// <summary>
		/// LogEndTime : 
		/// </summary>
		private System.DateTime		  _logEndTime = DateTime.MinValue;
		
		/// <summary>
		/// TrainingTime : 
		/// </summary>
		private System.Int32		  _trainingTime = (int)0;
		
		/// <summary>
		/// MachineIP : 
		/// </summary>
		private System.String		  _machineIp = null;
		
		/// <summary>
		/// SessionID : 
		/// </summary>
		private System.String		  _sessionId = null;
		
		/// <summary>
		/// CourseWareID : 
		/// </summary>
		private System.String		  _courseWareId = string.Empty;
		
		/// <summary>
		/// CourseID : 
		/// </summary>
		private System.String		  _courseId = string.Empty;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="VwTrainingUserLogBase"/> instance.
		///</summary>
		public VwTrainingUserLogBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="VwTrainingUserLogBase"/> instance.
		///</summary>
		///<param name="_trainUserId"></param>
		///<param name="_userId"></param>
		///<param name="_groupId"></param>
		///<param name="_trainingUserType"></param>
		///<param name="_trainUserStatus"></param>
		///<param name="_trainAuditingStatus"></param>
		///<param name="_trainAuditingMan"></param>
		///<param name="_trainAuditingDate"></param>
		///<param name="_createTime"></param>
		///<param name="_trainAuditingDescription"></param>
		///<param name="_trainingFinishTime"></param>
		///<param name="_testFinishTime"></param>
		///<param name="_investigationFinishTime"></param>
		///<param name="_studyFinishTime"></param>
		///<param name="_trainingLogId"></param>
		///<param name="_logBeginTime"></param>
		///<param name="_logEndTime"></param>
		///<param name="_trainingTime"></param>
		///<param name="_machineIp"></param>
		///<param name="_sessionId"></param>
		///<param name="_courseWareId"></param>
		///<param name="_courseId"></param>
		public VwTrainingUserLogBase(System.Int32 _trainUserId, System.String _userId, System.String _groupId, System.Int32 _trainingUserType, System.Int32 _trainUserStatus, System.Int32? _trainAuditingStatus, System.String _trainAuditingMan, System.DateTime? _trainAuditingDate, System.DateTime? _createTime, System.String _trainAuditingDescription, System.DateTime? _trainingFinishTime, System.DateTime? _testFinishTime, System.DateTime? _investigationFinishTime, System.DateTime? _studyFinishTime, System.Int64 _trainingLogId, System.DateTime _logBeginTime, System.DateTime _logEndTime, System.Int32 _trainingTime, System.String _machineIp, System.String _sessionId, System.String _courseWareId, System.String _courseId)
		{
			this._trainUserId = _trainUserId;
			this._userId = _userId;
			this._groupId = _groupId;
			this._trainingUserType = _trainingUserType;
			this._trainUserStatus = _trainUserStatus;
			this._trainAuditingStatus = _trainAuditingStatus;
			this._trainAuditingMan = _trainAuditingMan;
			this._trainAuditingDate = _trainAuditingDate;
			this._createTime = _createTime;
			this._trainAuditingDescription = _trainAuditingDescription;
			this._trainingFinishTime = _trainingFinishTime;
			this._testFinishTime = _testFinishTime;
			this._investigationFinishTime = _investigationFinishTime;
			this._studyFinishTime = _studyFinishTime;
			this._trainingLogId = _trainingLogId;
			this._logBeginTime = _logBeginTime;
			this._logEndTime = _logEndTime;
			this._trainingTime = _trainingTime;
			this._machineIp = _machineIp;
			this._sessionId = _sessionId;
			this._courseWareId = _courseWareId;
			this._courseId = _courseId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="VwTrainingUserLog"/> instance.
		///</summary>
		///<param name="_trainUserId"></param>
		///<param name="_userId"></param>
		///<param name="_groupId"></param>
		///<param name="_trainingUserType"></param>
		///<param name="_trainUserStatus"></param>
		///<param name="_trainAuditingStatus"></param>
		///<param name="_trainAuditingMan"></param>
		///<param name="_trainAuditingDate"></param>
		///<param name="_createTime"></param>
		///<param name="_trainAuditingDescription"></param>
		///<param name="_trainingFinishTime"></param>
		///<param name="_testFinishTime"></param>
		///<param name="_investigationFinishTime"></param>
		///<param name="_studyFinishTime"></param>
		///<param name="_trainingLogId"></param>
		///<param name="_logBeginTime"></param>
		///<param name="_logEndTime"></param>
		///<param name="_trainingTime"></param>
		///<param name="_machineIp"></param>
		///<param name="_sessionId"></param>
		///<param name="_courseWareId"></param>
		///<param name="_courseId"></param>
		public static VwTrainingUserLog CreateVwTrainingUserLog(System.Int32 _trainUserId, System.String _userId, System.String _groupId, System.Int32 _trainingUserType, System.Int32 _trainUserStatus, System.Int32? _trainAuditingStatus, System.String _trainAuditingMan, System.DateTime? _trainAuditingDate, System.DateTime? _createTime, System.String _trainAuditingDescription, System.DateTime? _trainingFinishTime, System.DateTime? _testFinishTime, System.DateTime? _investigationFinishTime, System.DateTime? _studyFinishTime, System.Int64 _trainingLogId, System.DateTime _logBeginTime, System.DateTime _logEndTime, System.Int32 _trainingTime, System.String _machineIp, System.String _sessionId, System.String _courseWareId, System.String _courseId)
		{
			VwTrainingUserLog newVwTrainingUserLog = new VwTrainingUserLog();
			newVwTrainingUserLog.TrainUserId = _trainUserId;
			newVwTrainingUserLog.UserId = _userId;
			newVwTrainingUserLog.GroupId = _groupId;
			newVwTrainingUserLog.TrainingUserType = _trainingUserType;
			newVwTrainingUserLog.TrainUserStatus = _trainUserStatus;
			newVwTrainingUserLog.TrainAuditingStatus = _trainAuditingStatus;
			newVwTrainingUserLog.TrainAuditingMan = _trainAuditingMan;
			newVwTrainingUserLog.TrainAuditingDate = _trainAuditingDate;
			newVwTrainingUserLog.CreateTime = _createTime;
			newVwTrainingUserLog.TrainAuditingDescription = _trainAuditingDescription;
			newVwTrainingUserLog.TrainingFinishTime = _trainingFinishTime;
			newVwTrainingUserLog.TestFinishTime = _testFinishTime;
			newVwTrainingUserLog.InvestigationFinishTime = _investigationFinishTime;
			newVwTrainingUserLog.StudyFinishTime = _studyFinishTime;
			newVwTrainingUserLog.TrainingLogId = _trainingLogId;
			newVwTrainingUserLog.LogBeginTime = _logBeginTime;
			newVwTrainingUserLog.LogEndTime = _logEndTime;
			newVwTrainingUserLog.TrainingTime = _trainingTime;
			newVwTrainingUserLog.MachineIp = _machineIp;
			newVwTrainingUserLog.SessionId = _sessionId;
			newVwTrainingUserLog.CourseWareId = _courseWareId;
			newVwTrainingUserLog.CourseId = _courseId;
			return newVwTrainingUserLog;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the TrainUserID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 TrainUserId
		{
			get
			{
				return this._trainUserId; 
			}
			set
			{
				if (_trainUserId == value)
					return;
					
				this._trainUserId = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UserID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String UserId
		{
			get
			{
				return this._userId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "UserId does not allow null values.");
				if (_userId == value)
					return;
					
				this._userId = value;
				this._isDirty = true;
				
				OnPropertyChanged("UserId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GroupID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GroupId
		{
			get
			{
				return this._groupId; 
			}
			set
			{
				if (_groupId == value)
					return;
					
				this._groupId = value;
				this._isDirty = true;
				
				OnPropertyChanged("GroupId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainingUserType property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 TrainingUserType
		{
			get
			{
				return this._trainingUserType; 
			}
			set
			{
				if (_trainingUserType == value)
					return;
					
				this._trainingUserType = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainingUserType");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainUserStatus property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 TrainUserStatus
		{
			get
			{
				return this._trainUserStatus; 
			}
			set
			{
				if (_trainUserStatus == value)
					return;
					
				this._trainUserStatus = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainUserStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainAuditingStatus property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsTrainAuditingStatusNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? TrainAuditingStatus
		{
			get
			{
				return this._trainAuditingStatus; 
			}
			set
			{
				if (_trainAuditingStatus == value && TrainAuditingStatus != null )
					return;
					
				this._trainAuditingStatus = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainAuditingStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainAuditingMan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TrainAuditingMan
		{
			get
			{
				return this._trainAuditingMan; 
			}
			set
			{
				if (_trainAuditingMan == value)
					return;
					
				this._trainAuditingMan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainAuditingMan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainAuditingDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsTrainAuditingDateNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? TrainAuditingDate
		{
			get
			{
				return this._trainAuditingDate; 
			}
			set
			{
				if (_trainAuditingDate == value && TrainAuditingDate != null )
					return;
					
				this._trainAuditingDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainAuditingDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreateTime property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsCreateTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? CreateTime
		{
			get
			{
				return this._createTime; 
			}
			set
			{
				if (_createTime == value && CreateTime != null )
					return;
					
				this._createTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreateTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainAuditingDescription property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TrainAuditingDescription
		{
			get
			{
				return this._trainAuditingDescription; 
			}
			set
			{
				if (_trainAuditingDescription == value)
					return;
					
				this._trainAuditingDescription = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainAuditingDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainingFinishTime property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsTrainingFinishTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? TrainingFinishTime
		{
			get
			{
				return this._trainingFinishTime; 
			}
			set
			{
				if (_trainingFinishTime == value && TrainingFinishTime != null )
					return;
					
				this._trainingFinishTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainingFinishTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TestFinishTime property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsTestFinishTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? TestFinishTime
		{
			get
			{
				return this._testFinishTime; 
			}
			set
			{
				if (_testFinishTime == value && TestFinishTime != null )
					return;
					
				this._testFinishTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("TestFinishTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the InvestigationFinishTime property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsInvestigationFinishTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? InvestigationFinishTime
		{
			get
			{
				return this._investigationFinishTime; 
			}
			set
			{
				if (_investigationFinishTime == value && InvestigationFinishTime != null )
					return;
					
				this._investigationFinishTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("InvestigationFinishTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the StudyFinishTime property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsStudyFinishTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? StudyFinishTime
		{
			get
			{
				return this._studyFinishTime; 
			}
			set
			{
				if (_studyFinishTime == value && StudyFinishTime != null )
					return;
					
				this._studyFinishTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("StudyFinishTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainingLogID property. 
		///		
		/// </summary>
		/// <value>This type is bigint</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int64 TrainingLogId
		{
			get
			{
				return this._trainingLogId; 
			}
			set
			{
				if (_trainingLogId == value)
					return;
					
				this._trainingLogId = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainingLogId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LogBeginTime property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime LogBeginTime
		{
			get
			{
				return this._logBeginTime; 
			}
			set
			{
				if (_logBeginTime == value)
					return;
					
				this._logBeginTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("LogBeginTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the LogEndTime property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime LogEndTime
		{
			get
			{
				return this._logEndTime; 
			}
			set
			{
				if (_logEndTime == value)
					return;
					
				this._logEndTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("LogEndTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainingTime property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 TrainingTime
		{
			get
			{
				return this._trainingTime; 
			}
			set
			{
				if (_trainingTime == value)
					return;
					
				this._trainingTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainingTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MachineIP property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String MachineIp
		{
			get
			{
				return this._machineIp; 
			}
			set
			{
				if (_machineIp == value)
					return;
					
				this._machineIp = value;
				this._isDirty = true;
				
				OnPropertyChanged("MachineIp");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SessionID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String SessionId
		{
			get
			{
				return this._sessionId; 
			}
			set
			{
				if (_sessionId == value)
					return;
					
				this._sessionId = value;
				this._isDirty = true;
				
				OnPropertyChanged("SessionId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CourseWareID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CourseWareId
		{
			get
			{
				return this._courseWareId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "CourseWareId does not allow null values.");
				if (_courseWareId == value)
					return;
					
				this._courseWareId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CourseWareId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CourseID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CourseId
		{
			get
			{
				return this._courseId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "CourseId does not allow null values.");
				if (_courseId == value)
					return;
					
				this._courseId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CourseId");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "VW_TrainingUserLog"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed VwTrainingUserLogBase Entity 
		///</summary>
		public virtual VwTrainingUserLogBase Copy()
		{
			//shallow copy entity
			VwTrainingUserLog copy = new VwTrainingUserLog();
				copy.TrainUserId = this.TrainUserId;
				copy.UserId = this.UserId;
				copy.GroupId = this.GroupId;
				copy.TrainingUserType = this.TrainingUserType;
				copy.TrainUserStatus = this.TrainUserStatus;
				copy.TrainAuditingStatus = this.TrainAuditingStatus;
				copy.TrainAuditingMan = this.TrainAuditingMan;
				copy.TrainAuditingDate = this.TrainAuditingDate;
				copy.CreateTime = this.CreateTime;
				copy.TrainAuditingDescription = this.TrainAuditingDescription;
				copy.TrainingFinishTime = this.TrainingFinishTime;
				copy.TestFinishTime = this.TestFinishTime;
				copy.InvestigationFinishTime = this.InvestigationFinishTime;
				copy.StudyFinishTime = this.StudyFinishTime;
				copy.TrainingLogId = this.TrainingLogId;
				copy.LogBeginTime = this.LogBeginTime;
				copy.LogEndTime = this.LogEndTime;
				copy.TrainingTime = this.TrainingTime;
				copy.MachineIp = this.MachineIp;
				copy.SessionId = this.SessionId;
				copy.CourseWareId = this.CourseWareId;
				copy.CourseId = this.CourseId;
			copy.AcceptChanges();
			return (VwTrainingUserLog)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="VwTrainingUserLogBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(VwTrainingUserLogBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="VwTrainingUserLogBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="VwTrainingUserLogBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="VwTrainingUserLogBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(VwTrainingUserLogBase Object1, VwTrainingUserLogBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.TrainUserId != Object2.TrainUserId)
				equal = false;
			if (Object1.UserId != Object2.UserId)
				equal = false;
			if (Object1.GroupId != null && Object2.GroupId != null )
			{
				if (Object1.GroupId != Object2.GroupId)
					equal = false;
			}
			else if (Object1.GroupId == null ^ Object1.GroupId == null )
			{
				equal = false;
			}
			if (Object1.TrainingUserType != Object2.TrainingUserType)
				equal = false;
			if (Object1.TrainUserStatus != Object2.TrainUserStatus)
				equal = false;
			if (Object1.TrainAuditingStatus != null && Object2.TrainAuditingStatus != null )
			{
				if (Object1.TrainAuditingStatus != Object2.TrainAuditingStatus)
					equal = false;
			}
			else if (Object1.TrainAuditingStatus == null ^ Object1.TrainAuditingStatus == null )
			{
				equal = false;
			}
			if (Object1.TrainAuditingMan != null && Object2.TrainAuditingMan != null )
			{
				if (Object1.TrainAuditingMan != Object2.TrainAuditingMan)
					equal = false;
			}
			else if (Object1.TrainAuditingMan == null ^ Object1.TrainAuditingMan == null )
			{
				equal = false;
			}
			if (Object1.TrainAuditingDate != null && Object2.TrainAuditingDate != null )
			{
				if (Object1.TrainAuditingDate != Object2.TrainAuditingDate)
					equal = false;
			}
			else if (Object1.TrainAuditingDate == null ^ Object1.TrainAuditingDate == null )
			{
				equal = false;
			}
			if (Object1.CreateTime != null && Object2.CreateTime != null )
			{
				if (Object1.CreateTime != Object2.CreateTime)
					equal = false;
			}
			else if (Object1.CreateTime == null ^ Object1.CreateTime == null )
			{
				equal = false;
			}
			if (Object1.TrainAuditingDescription != null && Object2.TrainAuditingDescription != null )
			{
				if (Object1.TrainAuditingDescription != Object2.TrainAuditingDescription)
					equal = false;
			}
			else if (Object1.TrainAuditingDescription == null ^ Object1.TrainAuditingDescription == null )
			{
				equal = false;
			}
			if (Object1.TrainingFinishTime != null && Object2.TrainingFinishTime != null )
			{
				if (Object1.TrainingFinishTime != Object2.TrainingFinishTime)
					equal = false;
			}
			else if (Object1.TrainingFinishTime == null ^ Object1.TrainingFinishTime == null )
			{
				equal = false;
			}
			if (Object1.TestFinishTime != null && Object2.TestFinishTime != null )
			{
				if (Object1.TestFinishTime != Object2.TestFinishTime)
					equal = false;
			}
			else if (Object1.TestFinishTime == null ^ Object1.TestFinishTime == null )
			{
				equal = false;
			}
			if (Object1.InvestigationFinishTime != null && Object2.InvestigationFinishTime != null )
			{
				if (Object1.InvestigationFinishTime != Object2.InvestigationFinishTime)
					equal = false;
			}
			else if (Object1.InvestigationFinishTime == null ^ Object1.InvestigationFinishTime == null )
			{
				equal = false;
			}
			if (Object1.StudyFinishTime != null && Object2.StudyFinishTime != null )
			{
				if (Object1.StudyFinishTime != Object2.StudyFinishTime)
					equal = false;
			}
			else if (Object1.StudyFinishTime == null ^ Object1.StudyFinishTime == null )
			{
				equal = false;
			}
			if (Object1.TrainingLogId != Object2.TrainingLogId)
				equal = false;
			if (Object1.LogBeginTime != Object2.LogBeginTime)
				equal = false;
			if (Object1.LogEndTime != Object2.LogEndTime)
				equal = false;
			if (Object1.TrainingTime != Object2.TrainingTime)
				equal = false;
			if (Object1.MachineIp != null && Object2.MachineIp != null )
			{
				if (Object1.MachineIp != Object2.MachineIp)
					equal = false;
			}
			else if (Object1.MachineIp == null ^ Object1.MachineIp == null )
			{
				equal = false;
			}
			if (Object1.SessionId != null && Object2.SessionId != null )
			{
				if (Object1.SessionId != Object2.SessionId)
					equal = false;
			}
			else if (Object1.SessionId == null ^ Object1.SessionId == null )
			{
				equal = false;
			}
			if (Object1.CourseWareId != Object2.CourseWareId)
				equal = false;
			if (Object1.CourseId != Object2.CourseId)
				equal = false;
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(VwTrainingUserLog entity, string propertyName)
		{
			switch (propertyName)
			{
				case "TrainUserId":
					return entity.TrainUserId;
				case "UserId":
					return entity.UserId;
				case "GroupId":
					return entity.GroupId;
				case "TrainingUserType":
					return entity.TrainingUserType;
				case "TrainUserStatus":
					return entity.TrainUserStatus;
				case "TrainAuditingStatus":
					return entity.TrainAuditingStatus;
				case "TrainAuditingMan":
					return entity.TrainAuditingMan;
				case "TrainAuditingDate":
					return entity.TrainAuditingDate;
				case "CreateTime":
					return entity.CreateTime;
				case "TrainAuditingDescription":
					return entity.TrainAuditingDescription;
				case "TrainingFinishTime":
					return entity.TrainingFinishTime;
				case "TestFinishTime":
					return entity.TestFinishTime;
				case "InvestigationFinishTime":
					return entity.InvestigationFinishTime;
				case "StudyFinishTime":
					return entity.StudyFinishTime;
				case "TrainingLogId":
					return entity.TrainingLogId;
				case "LogBeginTime":
					return entity.LogBeginTime;
				case "LogEndTime":
					return entity.LogEndTime;
				case "TrainingTime":
					return entity.TrainingTime;
				case "MachineIp":
					return entity.MachineIp;
				case "SessionId":
					return entity.SessionId;
				case "CourseWareId":
					return entity.CourseWareId;
				case "CourseId":
					return entity.CourseId;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as VwTrainingUserLog, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{23}{22}- TrainUserId: {0}{22}- UserId: {1}{22}- GroupId: {2}{22}- TrainingUserType: {3}{22}- TrainUserStatus: {4}{22}- TrainAuditingStatus: {5}{22}- TrainAuditingMan: {6}{22}- TrainAuditingDate: {7}{22}- CreateTime: {8}{22}- TrainAuditingDescription: {9}{22}- TrainingFinishTime: {10}{22}- TestFinishTime: {11}{22}- InvestigationFinishTime: {12}{22}- StudyFinishTime: {13}{22}- TrainingLogId: {14}{22}- LogBeginTime: {15}{22}- LogEndTime: {16}{22}- TrainingTime: {17}{22}- MachineIp: {18}{22}- SessionId: {19}{22}- CourseWareId: {20}{22}- CourseId: {21}{22}", 
				this.TrainUserId,
				this.UserId,
				(this.GroupId == null) ? string.Empty : this.GroupId.ToString(),
			     
				this.TrainingUserType,
				this.TrainUserStatus,
				(this.TrainAuditingStatus == null) ? string.Empty : this.TrainAuditingStatus.ToString(),
			     
				(this.TrainAuditingMan == null) ? string.Empty : this.TrainAuditingMan.ToString(),
			     
				(this.TrainAuditingDate == null) ? string.Empty : this.TrainAuditingDate.ToString(),
			     
				(this.CreateTime == null) ? string.Empty : this.CreateTime.ToString(),
			     
				(this.TrainAuditingDescription == null) ? string.Empty : this.TrainAuditingDescription.ToString(),
			     
				(this.TrainingFinishTime == null) ? string.Empty : this.TrainingFinishTime.ToString(),
			     
				(this.TestFinishTime == null) ? string.Empty : this.TestFinishTime.ToString(),
			     
				(this.InvestigationFinishTime == null) ? string.Empty : this.InvestigationFinishTime.ToString(),
			     
				(this.StudyFinishTime == null) ? string.Empty : this.StudyFinishTime.ToString(),
			     
				this.TrainingLogId,
				this.LogBeginTime,
				this.LogEndTime,
				this.TrainingTime,
				(this.MachineIp == null) ? string.Empty : this.MachineIp.ToString(),
			     
				(this.SessionId == null) ? string.Empty : this.SessionId.ToString(),
			     
				this.CourseWareId,
				this.CourseId,
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the VwTrainingUserLog columns.
	/// </summary>
	[Serializable]
	public enum VwTrainingUserLogColumn
	{
		/// <summary>
		/// TrainUserID : 
		/// </summary>
		[EnumTextValue("TrainUserID")]
		[ColumnEnum("TrainUserID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		TrainUserId,
		/// <summary>
		/// UserID : 
		/// </summary>
		[EnumTextValue("UserID")]
		[ColumnEnum("UserID", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		UserId,
		/// <summary>
		/// GroupID : 
		/// </summary>
		[EnumTextValue("GroupID")]
		[ColumnEnum("GroupID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		GroupId,
		/// <summary>
		/// TrainingUserType : 
		/// </summary>
		[EnumTextValue("TrainingUserType")]
		[ColumnEnum("TrainingUserType", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		TrainingUserType,
		/// <summary>
		/// TrainUserStatus : 
		/// </summary>
		[EnumTextValue("TrainUserStatus")]
		[ColumnEnum("TrainUserStatus", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		TrainUserStatus,
		/// <summary>
		/// TrainAuditingStatus : 
		/// </summary>
		[EnumTextValue("TrainAuditingStatus")]
		[ColumnEnum("TrainAuditingStatus", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TrainAuditingStatus,
		/// <summary>
		/// TrainAuditingMan : 
		/// </summary>
		[EnumTextValue("TrainAuditingMan")]
		[ColumnEnum("TrainAuditingMan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		TrainAuditingMan,
		/// <summary>
		/// TrainAuditingDate : 
		/// </summary>
		[EnumTextValue("TrainAuditingDate")]
		[ColumnEnum("TrainAuditingDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		TrainAuditingDate,
		/// <summary>
		/// CreateTime : 
		/// </summary>
		[EnumTextValue("CreateTime")]
		[ColumnEnum("CreateTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		CreateTime,
		/// <summary>
		/// TrainAuditingDescription : 
		/// </summary>
		[EnumTextValue("TrainAuditingDescription")]
		[ColumnEnum("TrainAuditingDescription", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 500)]
		TrainAuditingDescription,
		/// <summary>
		/// TrainingFinishTime : 
		/// </summary>
		[EnumTextValue("TrainingFinishTime")]
		[ColumnEnum("TrainingFinishTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		TrainingFinishTime,
		/// <summary>
		/// TestFinishTime : 
		/// </summary>
		[EnumTextValue("TestFinishTime")]
		[ColumnEnum("TestFinishTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		TestFinishTime,
		/// <summary>
		/// InvestigationFinishTime : 
		/// </summary>
		[EnumTextValue("InvestigationFinishTime")]
		[ColumnEnum("InvestigationFinishTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		InvestigationFinishTime,
		/// <summary>
		/// StudyFinishTime : 
		/// </summary>
		[EnumTextValue("StudyFinishTime")]
		[ColumnEnum("StudyFinishTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		StudyFinishTime,
		/// <summary>
		/// TrainingLogID : 
		/// </summary>
		[EnumTextValue("TrainingLogID")]
		[ColumnEnum("TrainingLogID", typeof(System.Int64), System.Data.DbType.Int64, false, false, false)]
		TrainingLogId,
		/// <summary>
		/// LogBeginTime : 
		/// </summary>
		[EnumTextValue("LogBeginTime")]
		[ColumnEnum("LogBeginTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		LogBeginTime,
		/// <summary>
		/// LogEndTime : 
		/// </summary>
		[EnumTextValue("LogEndTime")]
		[ColumnEnum("LogEndTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		LogEndTime,
		/// <summary>
		/// TrainingTime : 
		/// </summary>
		[EnumTextValue("TrainingTime")]
		[ColumnEnum("TrainingTime", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		TrainingTime,
		/// <summary>
		/// MachineIP : 
		/// </summary>
		[EnumTextValue("MachineIP")]
		[ColumnEnum("MachineIP", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		MachineIp,
		/// <summary>
		/// SessionID : 
		/// </summary>
		[EnumTextValue("SessionID")]
		[ColumnEnum("SessionID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		SessionId,
		/// <summary>
		/// CourseWareID : 
		/// </summary>
		[EnumTextValue("CourseWareID")]
		[ColumnEnum("CourseWareID", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		CourseWareId,
		/// <summary>
		/// CourseID : 
		/// </summary>
		[EnumTextValue("CourseID")]
		[ColumnEnum("CourseID", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		CourseId
	}//End enum

} // end namespace
