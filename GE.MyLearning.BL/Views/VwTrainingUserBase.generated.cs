/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file VwTrainingUser.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace GE.MyLearning.BL
{
	///<summary>
	/// An object representation of the 'VW_TrainingUser' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("VwTrainingUserBase")]
	public abstract partial class VwTrainingUserBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// TrainUserID : 
		/// </summary>
		private System.Int32		  _trainUserId = (int)0;
		
		/// <summary>
		/// TrainingUserType : 
		/// </summary>
		private System.Int32		  _trainingUserType = (int)0;
		
		/// <summary>
		/// TrainUserStatus : 
		/// </summary>
		private System.Int32		  _trainUserStatus = (int)0;
		
		/// <summary>
		/// TrainAuditingStatus : 
		/// </summary>
		private System.Int32?		  _trainAuditingStatus = null;
		
		/// <summary>
		/// TrainAuditingMan : 
		/// </summary>
		private System.String		  _trainAuditingMan = null;
		
		/// <summary>
		/// TrainAuditingDate : 
		/// </summary>
		private System.DateTime?		  _trainAuditingDate = null;
		
		/// <summary>
		/// CreateTime : 
		/// </summary>
		private System.DateTime?		  _createTime = null;
		
		/// <summary>
		/// TrainAuditingDescription : 
		/// </summary>
		private System.String		  _trainAuditingDescription = null;
		
		/// <summary>
		/// UserID : 
		/// </summary>
		private System.String		  _userId = string.Empty;
		
		/// <summary>
		/// UserName : 
		/// </summary>
		private System.String		  _userName = null;
		
		/// <summary>
		/// UserCNName : 
		/// </summary>
		private System.String		  _userCnName = string.Empty;
		
		/// <summary>
		/// Email : 
		/// </summary>
		private System.String		  _email = string.Empty;
		
		/// <summary>
		/// FEBadgeID : 
		/// </summary>
		private System.String		  _feBadgeId = string.Empty;
		
		/// <summary>
		/// GroupID : 
		/// </summary>
		private System.String		  _groupId = null;
		
		/// <summary>
		/// TrainingFinishTime : 
		/// </summary>
		private System.DateTime?		  _trainingFinishTime = null;
		
		/// <summary>
		/// TestFinishTime : 
		/// </summary>
		private System.DateTime?		  _testFinishTime = null;
		
		/// <summary>
		/// InvestigationFinishTime : 
		/// </summary>
		private System.DateTime?		  _investigationFinishTime = null;
		
		/// <summary>
		/// StudyFinishTime : 
		/// </summary>
		private System.DateTime?		  _studyFinishTime = null;
		
		/// <summary>
		/// TrainTimeUseCredit : 
		/// </summary>
		private System.Int32?		  _trainTimeUseCredit = null;
		
		/// <summary>
		/// TrainTimeAddPoint : 
		/// </summary>
		private System.Int32?		  _trainTimeAddPoint = null;
		
		/// <summary>
		/// CourseID : 
		/// </summary>
		private System.String		  _courseId = string.Empty;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="VwTrainingUserBase"/> instance.
		///</summary>
		public VwTrainingUserBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="VwTrainingUserBase"/> instance.
		///</summary>
		///<param name="_trainUserId"></param>
		///<param name="_trainingUserType"></param>
		///<param name="_trainUserStatus"></param>
		///<param name="_trainAuditingStatus"></param>
		///<param name="_trainAuditingMan"></param>
		///<param name="_trainAuditingDate"></param>
		///<param name="_createTime"></param>
		///<param name="_trainAuditingDescription"></param>
		///<param name="_userId"></param>
		///<param name="_userName"></param>
		///<param name="_userCnName"></param>
		///<param name="_email"></param>
		///<param name="_feBadgeId"></param>
		///<param name="_groupId"></param>
		///<param name="_trainingFinishTime"></param>
		///<param name="_testFinishTime"></param>
		///<param name="_investigationFinishTime"></param>
		///<param name="_studyFinishTime"></param>
		///<param name="_trainTimeUseCredit"></param>
		///<param name="_trainTimeAddPoint"></param>
		///<param name="_courseId"></param>
		public VwTrainingUserBase(System.Int32 _trainUserId, System.Int32 _trainingUserType, System.Int32 _trainUserStatus, System.Int32? _trainAuditingStatus, System.String _trainAuditingMan, System.DateTime? _trainAuditingDate, System.DateTime? _createTime, System.String _trainAuditingDescription, System.String _userId, System.String _userName, System.String _userCnName, System.String _email, System.String _feBadgeId, System.String _groupId, System.DateTime? _trainingFinishTime, System.DateTime? _testFinishTime, System.DateTime? _investigationFinishTime, System.DateTime? _studyFinishTime, System.Int32? _trainTimeUseCredit, System.Int32? _trainTimeAddPoint, System.String _courseId)
		{
			this._trainUserId = _trainUserId;
			this._trainingUserType = _trainingUserType;
			this._trainUserStatus = _trainUserStatus;
			this._trainAuditingStatus = _trainAuditingStatus;
			this._trainAuditingMan = _trainAuditingMan;
			this._trainAuditingDate = _trainAuditingDate;
			this._createTime = _createTime;
			this._trainAuditingDescription = _trainAuditingDescription;
			this._userId = _userId;
			this._userName = _userName;
			this._userCnName = _userCnName;
			this._email = _email;
			this._feBadgeId = _feBadgeId;
			this._groupId = _groupId;
			this._trainingFinishTime = _trainingFinishTime;
			this._testFinishTime = _testFinishTime;
			this._investigationFinishTime = _investigationFinishTime;
			this._studyFinishTime = _studyFinishTime;
			this._trainTimeUseCredit = _trainTimeUseCredit;
			this._trainTimeAddPoint = _trainTimeAddPoint;
			this._courseId = _courseId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="VwTrainingUser"/> instance.
		///</summary>
		///<param name="_trainUserId"></param>
		///<param name="_trainingUserType"></param>
		///<param name="_trainUserStatus"></param>
		///<param name="_trainAuditingStatus"></param>
		///<param name="_trainAuditingMan"></param>
		///<param name="_trainAuditingDate"></param>
		///<param name="_createTime"></param>
		///<param name="_trainAuditingDescription"></param>
		///<param name="_userId"></param>
		///<param name="_userName"></param>
		///<param name="_userCnName"></param>
		///<param name="_email"></param>
		///<param name="_feBadgeId"></param>
		///<param name="_groupId"></param>
		///<param name="_trainingFinishTime"></param>
		///<param name="_testFinishTime"></param>
		///<param name="_investigationFinishTime"></param>
		///<param name="_studyFinishTime"></param>
		///<param name="_trainTimeUseCredit"></param>
		///<param name="_trainTimeAddPoint"></param>
		///<param name="_courseId"></param>
		public static VwTrainingUser CreateVwTrainingUser(System.Int32 _trainUserId, System.Int32 _trainingUserType, System.Int32 _trainUserStatus, System.Int32? _trainAuditingStatus, System.String _trainAuditingMan, System.DateTime? _trainAuditingDate, System.DateTime? _createTime, System.String _trainAuditingDescription, System.String _userId, System.String _userName, System.String _userCnName, System.String _email, System.String _feBadgeId, System.String _groupId, System.DateTime? _trainingFinishTime, System.DateTime? _testFinishTime, System.DateTime? _investigationFinishTime, System.DateTime? _studyFinishTime, System.Int32? _trainTimeUseCredit, System.Int32? _trainTimeAddPoint, System.String _courseId)
		{
			VwTrainingUser newVwTrainingUser = new VwTrainingUser();
			newVwTrainingUser.TrainUserId = _trainUserId;
			newVwTrainingUser.TrainingUserType = _trainingUserType;
			newVwTrainingUser.TrainUserStatus = _trainUserStatus;
			newVwTrainingUser.TrainAuditingStatus = _trainAuditingStatus;
			newVwTrainingUser.TrainAuditingMan = _trainAuditingMan;
			newVwTrainingUser.TrainAuditingDate = _trainAuditingDate;
			newVwTrainingUser.CreateTime = _createTime;
			newVwTrainingUser.TrainAuditingDescription = _trainAuditingDescription;
			newVwTrainingUser.UserId = _userId;
			newVwTrainingUser.UserName = _userName;
			newVwTrainingUser.UserCnName = _userCnName;
			newVwTrainingUser.Email = _email;
			newVwTrainingUser.FeBadgeId = _feBadgeId;
			newVwTrainingUser.GroupId = _groupId;
			newVwTrainingUser.TrainingFinishTime = _trainingFinishTime;
			newVwTrainingUser.TestFinishTime = _testFinishTime;
			newVwTrainingUser.InvestigationFinishTime = _investigationFinishTime;
			newVwTrainingUser.StudyFinishTime = _studyFinishTime;
			newVwTrainingUser.TrainTimeUseCredit = _trainTimeUseCredit;
			newVwTrainingUser.TrainTimeAddPoint = _trainTimeAddPoint;
			newVwTrainingUser.CourseId = _courseId;
			return newVwTrainingUser;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the TrainUserID property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 TrainUserId
		{
			get
			{
				return this._trainUserId; 
			}
			set
			{
				if (_trainUserId == value)
					return;
					
				this._trainUserId = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainingUserType property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 TrainingUserType
		{
			get
			{
				return this._trainingUserType; 
			}
			set
			{
				if (_trainingUserType == value)
					return;
					
				this._trainingUserType = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainingUserType");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainUserStatus property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32 TrainUserStatus
		{
			get
			{
				return this._trainUserStatus; 
			}
			set
			{
				if (_trainUserStatus == value)
					return;
					
				this._trainUserStatus = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainUserStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainAuditingStatus property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsTrainAuditingStatusNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? TrainAuditingStatus
		{
			get
			{
				return this._trainAuditingStatus; 
			}
			set
			{
				if (_trainAuditingStatus == value && TrainAuditingStatus != null )
					return;
					
				this._trainAuditingStatus = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainAuditingStatus");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainAuditingMan property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TrainAuditingMan
		{
			get
			{
				return this._trainAuditingMan; 
			}
			set
			{
				if (_trainAuditingMan == value)
					return;
					
				this._trainAuditingMan = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainAuditingMan");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainAuditingDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsTrainAuditingDateNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? TrainAuditingDate
		{
			get
			{
				return this._trainAuditingDate; 
			}
			set
			{
				if (_trainAuditingDate == value && TrainAuditingDate != null )
					return;
					
				this._trainAuditingDate = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainAuditingDate");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CreateTime property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsCreateTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? CreateTime
		{
			get
			{
				return this._createTime; 
			}
			set
			{
				if (_createTime == value && CreateTime != null )
					return;
					
				this._createTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("CreateTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainAuditingDescription property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TrainAuditingDescription
		{
			get
			{
				return this._trainAuditingDescription; 
			}
			set
			{
				if (_trainAuditingDescription == value)
					return;
					
				this._trainAuditingDescription = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainAuditingDescription");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UserID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String UserId
		{
			get
			{
				return this._userId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "UserId does not allow null values.");
				if (_userId == value)
					return;
					
				this._userId = value;
				this._isDirty = true;
				
				OnPropertyChanged("UserId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UserName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String UserName
		{
			get
			{
				return this._userName; 
			}
			set
			{
				if (_userName == value)
					return;
					
				this._userName = value;
				this._isDirty = true;
				
				OnPropertyChanged("UserName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the UserCNName property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String UserCnName
		{
			get
			{
				return this._userCnName; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "UserCnName does not allow null values.");
				if (_userCnName == value)
					return;
					
				this._userCnName = value;
				this._isDirty = true;
				
				OnPropertyChanged("UserCnName");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String Email
		{
			get
			{
				return this._email; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "Email does not allow null values.");
				if (_email == value)
					return;
					
				this._email = value;
				this._isDirty = true;
				
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the FEBadgeID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String FeBadgeId
		{
			get
			{
				return this._feBadgeId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "FeBadgeId does not allow null values.");
				if (_feBadgeId == value)
					return;
					
				this._feBadgeId = value;
				this._isDirty = true;
				
				OnPropertyChanged("FeBadgeId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GroupID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GroupId
		{
			get
			{
				return this._groupId; 
			}
			set
			{
				if (_groupId == value)
					return;
					
				this._groupId = value;
				this._isDirty = true;
				
				OnPropertyChanged("GroupId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainingFinishTime property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsTrainingFinishTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? TrainingFinishTime
		{
			get
			{
				return this._trainingFinishTime; 
			}
			set
			{
				if (_trainingFinishTime == value && TrainingFinishTime != null )
					return;
					
				this._trainingFinishTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainingFinishTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TestFinishTime property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsTestFinishTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? TestFinishTime
		{
			get
			{
				return this._testFinishTime; 
			}
			set
			{
				if (_testFinishTime == value && TestFinishTime != null )
					return;
					
				this._testFinishTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("TestFinishTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the InvestigationFinishTime property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsInvestigationFinishTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? InvestigationFinishTime
		{
			get
			{
				return this._investigationFinishTime; 
			}
			set
			{
				if (_investigationFinishTime == value && InvestigationFinishTime != null )
					return;
					
				this._investigationFinishTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("InvestigationFinishTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the StudyFinishTime property. 
		///		
		/// </summary>
		/// <value>This type is smalldatetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsStudyFinishTimeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? StudyFinishTime
		{
			get
			{
				return this._studyFinishTime; 
			}
			set
			{
				if (_studyFinishTime == value && StudyFinishTime != null )
					return;
					
				this._studyFinishTime = value;
				this._isDirty = true;
				
				OnPropertyChanged("StudyFinishTime");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainTimeUseCredit property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsTrainTimeUseCreditNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? TrainTimeUseCredit
		{
			get
			{
				return this._trainTimeUseCredit; 
			}
			set
			{
				if (_trainTimeUseCredit == value && TrainTimeUseCredit != null )
					return;
					
				this._trainTimeUseCredit = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainTimeUseCredit");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TrainTimeAddPoint property. 
		///		
		/// </summary>
		/// <value>This type is int</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsTrainTimeAddPointNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Int32? TrainTimeAddPoint
		{
			get
			{
				return this._trainTimeAddPoint; 
			}
			set
			{
				if (_trainTimeAddPoint == value && TrainTimeAddPoint != null )
					return;
					
				this._trainTimeAddPoint = value;
				this._isDirty = true;
				
				OnPropertyChanged("TrainTimeAddPoint");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CourseID property. 
		///		
		/// </summary>
		/// <value>This type is varchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CourseId
		{
			get
			{
				return this._courseId; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "CourseId does not allow null values.");
				if (_courseId == value)
					return;
					
				this._courseId = value;
				this._isDirty = true;
				
				OnPropertyChanged("CourseId");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "VW_TrainingUser"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed VwTrainingUserBase Entity 
		///</summary>
		public virtual VwTrainingUserBase Copy()
		{
			//shallow copy entity
			VwTrainingUser copy = new VwTrainingUser();
				copy.TrainUserId = this.TrainUserId;
				copy.TrainingUserType = this.TrainingUserType;
				copy.TrainUserStatus = this.TrainUserStatus;
				copy.TrainAuditingStatus = this.TrainAuditingStatus;
				copy.TrainAuditingMan = this.TrainAuditingMan;
				copy.TrainAuditingDate = this.TrainAuditingDate;
				copy.CreateTime = this.CreateTime;
				copy.TrainAuditingDescription = this.TrainAuditingDescription;
				copy.UserId = this.UserId;
				copy.UserName = this.UserName;
				copy.UserCnName = this.UserCnName;
				copy.Email = this.Email;
				copy.FeBadgeId = this.FeBadgeId;
				copy.GroupId = this.GroupId;
				copy.TrainingFinishTime = this.TrainingFinishTime;
				copy.TestFinishTime = this.TestFinishTime;
				copy.InvestigationFinishTime = this.InvestigationFinishTime;
				copy.StudyFinishTime = this.StudyFinishTime;
				copy.TrainTimeUseCredit = this.TrainTimeUseCredit;
				copy.TrainTimeAddPoint = this.TrainTimeAddPoint;
				copy.CourseId = this.CourseId;
			copy.AcceptChanges();
			return (VwTrainingUser)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="VwTrainingUserBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(VwTrainingUserBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="VwTrainingUserBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="VwTrainingUserBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="VwTrainingUserBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(VwTrainingUserBase Object1, VwTrainingUserBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.TrainUserId != Object2.TrainUserId)
				equal = false;
			if (Object1.TrainingUserType != Object2.TrainingUserType)
				equal = false;
			if (Object1.TrainUserStatus != Object2.TrainUserStatus)
				equal = false;
			if (Object1.TrainAuditingStatus != null && Object2.TrainAuditingStatus != null )
			{
				if (Object1.TrainAuditingStatus != Object2.TrainAuditingStatus)
					equal = false;
			}
			else if (Object1.TrainAuditingStatus == null ^ Object1.TrainAuditingStatus == null )
			{
				equal = false;
			}
			if (Object1.TrainAuditingMan != null && Object2.TrainAuditingMan != null )
			{
				if (Object1.TrainAuditingMan != Object2.TrainAuditingMan)
					equal = false;
			}
			else if (Object1.TrainAuditingMan == null ^ Object1.TrainAuditingMan == null )
			{
				equal = false;
			}
			if (Object1.TrainAuditingDate != null && Object2.TrainAuditingDate != null )
			{
				if (Object1.TrainAuditingDate != Object2.TrainAuditingDate)
					equal = false;
			}
			else if (Object1.TrainAuditingDate == null ^ Object1.TrainAuditingDate == null )
			{
				equal = false;
			}
			if (Object1.CreateTime != null && Object2.CreateTime != null )
			{
				if (Object1.CreateTime != Object2.CreateTime)
					equal = false;
			}
			else if (Object1.CreateTime == null ^ Object1.CreateTime == null )
			{
				equal = false;
			}
			if (Object1.TrainAuditingDescription != null && Object2.TrainAuditingDescription != null )
			{
				if (Object1.TrainAuditingDescription != Object2.TrainAuditingDescription)
					equal = false;
			}
			else if (Object1.TrainAuditingDescription == null ^ Object1.TrainAuditingDescription == null )
			{
				equal = false;
			}
			if (Object1.UserId != Object2.UserId)
				equal = false;
			if (Object1.UserName != null && Object2.UserName != null )
			{
				if (Object1.UserName != Object2.UserName)
					equal = false;
			}
			else if (Object1.UserName == null ^ Object1.UserName == null )
			{
				equal = false;
			}
			if (Object1.UserCnName != Object2.UserCnName)
				equal = false;
			if (Object1.Email != Object2.Email)
				equal = false;
			if (Object1.FeBadgeId != Object2.FeBadgeId)
				equal = false;
			if (Object1.GroupId != null && Object2.GroupId != null )
			{
				if (Object1.GroupId != Object2.GroupId)
					equal = false;
			}
			else if (Object1.GroupId == null ^ Object1.GroupId == null )
			{
				equal = false;
			}
			if (Object1.TrainingFinishTime != null && Object2.TrainingFinishTime != null )
			{
				if (Object1.TrainingFinishTime != Object2.TrainingFinishTime)
					equal = false;
			}
			else if (Object1.TrainingFinishTime == null ^ Object1.TrainingFinishTime == null )
			{
				equal = false;
			}
			if (Object1.TestFinishTime != null && Object2.TestFinishTime != null )
			{
				if (Object1.TestFinishTime != Object2.TestFinishTime)
					equal = false;
			}
			else if (Object1.TestFinishTime == null ^ Object1.TestFinishTime == null )
			{
				equal = false;
			}
			if (Object1.InvestigationFinishTime != null && Object2.InvestigationFinishTime != null )
			{
				if (Object1.InvestigationFinishTime != Object2.InvestigationFinishTime)
					equal = false;
			}
			else if (Object1.InvestigationFinishTime == null ^ Object1.InvestigationFinishTime == null )
			{
				equal = false;
			}
			if (Object1.StudyFinishTime != null && Object2.StudyFinishTime != null )
			{
				if (Object1.StudyFinishTime != Object2.StudyFinishTime)
					equal = false;
			}
			else if (Object1.StudyFinishTime == null ^ Object1.StudyFinishTime == null )
			{
				equal = false;
			}
			if (Object1.TrainTimeUseCredit != null && Object2.TrainTimeUseCredit != null )
			{
				if (Object1.TrainTimeUseCredit != Object2.TrainTimeUseCredit)
					equal = false;
			}
			else if (Object1.TrainTimeUseCredit == null ^ Object1.TrainTimeUseCredit == null )
			{
				equal = false;
			}
			if (Object1.TrainTimeAddPoint != null && Object2.TrainTimeAddPoint != null )
			{
				if (Object1.TrainTimeAddPoint != Object2.TrainTimeAddPoint)
					equal = false;
			}
			else if (Object1.TrainTimeAddPoint == null ^ Object1.TrainTimeAddPoint == null )
			{
				equal = false;
			}
			if (Object1.CourseId != Object2.CourseId)
				equal = false;
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(VwTrainingUser entity, string propertyName)
		{
			switch (propertyName)
			{
				case "TrainUserId":
					return entity.TrainUserId;
				case "TrainingUserType":
					return entity.TrainingUserType;
				case "TrainUserStatus":
					return entity.TrainUserStatus;
				case "TrainAuditingStatus":
					return entity.TrainAuditingStatus;
				case "TrainAuditingMan":
					return entity.TrainAuditingMan;
				case "TrainAuditingDate":
					return entity.TrainAuditingDate;
				case "CreateTime":
					return entity.CreateTime;
				case "TrainAuditingDescription":
					return entity.TrainAuditingDescription;
				case "UserId":
					return entity.UserId;
				case "UserName":
					return entity.UserName;
				case "UserCnName":
					return entity.UserCnName;
				case "Email":
					return entity.Email;
				case "FeBadgeId":
					return entity.FeBadgeId;
				case "GroupId":
					return entity.GroupId;
				case "TrainingFinishTime":
					return entity.TrainingFinishTime;
				case "TestFinishTime":
					return entity.TestFinishTime;
				case "InvestigationFinishTime":
					return entity.InvestigationFinishTime;
				case "StudyFinishTime":
					return entity.StudyFinishTime;
				case "TrainTimeUseCredit":
					return entity.TrainTimeUseCredit;
				case "TrainTimeAddPoint":
					return entity.TrainTimeAddPoint;
				case "CourseId":
					return entity.CourseId;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as VwTrainingUser, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{22}{21}- TrainUserId: {0}{21}- TrainingUserType: {1}{21}- TrainUserStatus: {2}{21}- TrainAuditingStatus: {3}{21}- TrainAuditingMan: {4}{21}- TrainAuditingDate: {5}{21}- CreateTime: {6}{21}- TrainAuditingDescription: {7}{21}- UserId: {8}{21}- UserName: {9}{21}- UserCnName: {10}{21}- Email: {11}{21}- FeBadgeId: {12}{21}- GroupId: {13}{21}- TrainingFinishTime: {14}{21}- TestFinishTime: {15}{21}- InvestigationFinishTime: {16}{21}- StudyFinishTime: {17}{21}- TrainTimeUseCredit: {18}{21}- TrainTimeAddPoint: {19}{21}- CourseId: {20}{21}", 
				this.TrainUserId,
				this.TrainingUserType,
				this.TrainUserStatus,
				(this.TrainAuditingStatus == null) ? string.Empty : this.TrainAuditingStatus.ToString(),
			     
				(this.TrainAuditingMan == null) ? string.Empty : this.TrainAuditingMan.ToString(),
			     
				(this.TrainAuditingDate == null) ? string.Empty : this.TrainAuditingDate.ToString(),
			     
				(this.CreateTime == null) ? string.Empty : this.CreateTime.ToString(),
			     
				(this.TrainAuditingDescription == null) ? string.Empty : this.TrainAuditingDescription.ToString(),
			     
				this.UserId,
				(this.UserName == null) ? string.Empty : this.UserName.ToString(),
			     
				this.UserCnName,
				this.Email,
				this.FeBadgeId,
				(this.GroupId == null) ? string.Empty : this.GroupId.ToString(),
			     
				(this.TrainingFinishTime == null) ? string.Empty : this.TrainingFinishTime.ToString(),
			     
				(this.TestFinishTime == null) ? string.Empty : this.TestFinishTime.ToString(),
			     
				(this.InvestigationFinishTime == null) ? string.Empty : this.InvestigationFinishTime.ToString(),
			     
				(this.StudyFinishTime == null) ? string.Empty : this.StudyFinishTime.ToString(),
			     
				(this.TrainTimeUseCredit == null) ? string.Empty : this.TrainTimeUseCredit.ToString(),
			     
				(this.TrainTimeAddPoint == null) ? string.Empty : this.TrainTimeAddPoint.ToString(),
			     
				this.CourseId,
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the VwTrainingUser columns.
	/// </summary>
	[Serializable]
	public enum VwTrainingUserColumn
	{
		/// <summary>
		/// TrainUserID : 
		/// </summary>
		[EnumTextValue("TrainUserID")]
		[ColumnEnum("TrainUserID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		TrainUserId,
		/// <summary>
		/// TrainingUserType : 
		/// </summary>
		[EnumTextValue("TrainingUserType")]
		[ColumnEnum("TrainingUserType", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		TrainingUserType,
		/// <summary>
		/// TrainUserStatus : 
		/// </summary>
		[EnumTextValue("TrainUserStatus")]
		[ColumnEnum("TrainUserStatus", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		TrainUserStatus,
		/// <summary>
		/// TrainAuditingStatus : 
		/// </summary>
		[EnumTextValue("TrainAuditingStatus")]
		[ColumnEnum("TrainAuditingStatus", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TrainAuditingStatus,
		/// <summary>
		/// TrainAuditingMan : 
		/// </summary>
		[EnumTextValue("TrainAuditingMan")]
		[ColumnEnum("TrainAuditingMan", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		TrainAuditingMan,
		/// <summary>
		/// TrainAuditingDate : 
		/// </summary>
		[EnumTextValue("TrainAuditingDate")]
		[ColumnEnum("TrainAuditingDate", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		TrainAuditingDate,
		/// <summary>
		/// CreateTime : 
		/// </summary>
		[EnumTextValue("CreateTime")]
		[ColumnEnum("CreateTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		CreateTime,
		/// <summary>
		/// TrainAuditingDescription : 
		/// </summary>
		[EnumTextValue("TrainAuditingDescription")]
		[ColumnEnum("TrainAuditingDescription", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 500)]
		TrainAuditingDescription,
		/// <summary>
		/// UserID : 
		/// </summary>
		[EnumTextValue("UserID")]
		[ColumnEnum("UserID", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		UserId,
		/// <summary>
		/// UserName : 
		/// </summary>
		[EnumTextValue("UserName")]
		[ColumnEnum("UserName", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		UserName,
		/// <summary>
		/// UserCNName : 
		/// </summary>
		[EnumTextValue("UserCNName")]
		[ColumnEnum("UserCNName", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		UserCnName,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 50)]
		Email,
		/// <summary>
		/// FEBadgeID : 
		/// </summary>
		[EnumTextValue("FEBadgeID")]
		[ColumnEnum("FEBadgeID", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		FeBadgeId,
		/// <summary>
		/// GroupID : 
		/// </summary>
		[EnumTextValue("GroupID")]
		[ColumnEnum("GroupID", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 20)]
		GroupId,
		/// <summary>
		/// TrainingFinishTime : 
		/// </summary>
		[EnumTextValue("TrainingFinishTime")]
		[ColumnEnum("TrainingFinishTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		TrainingFinishTime,
		/// <summary>
		/// TestFinishTime : 
		/// </summary>
		[EnumTextValue("TestFinishTime")]
		[ColumnEnum("TestFinishTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		TestFinishTime,
		/// <summary>
		/// InvestigationFinishTime : 
		/// </summary>
		[EnumTextValue("InvestigationFinishTime")]
		[ColumnEnum("InvestigationFinishTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		InvestigationFinishTime,
		/// <summary>
		/// StudyFinishTime : 
		/// </summary>
		[EnumTextValue("StudyFinishTime")]
		[ColumnEnum("StudyFinishTime", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		StudyFinishTime,
		/// <summary>
		/// TrainTimeUseCredit : 
		/// </summary>
		[EnumTextValue("TrainTimeUseCredit")]
		[ColumnEnum("TrainTimeUseCredit", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TrainTimeUseCredit,
		/// <summary>
		/// TrainTimeAddPoint : 
		/// </summary>
		[EnumTextValue("TrainTimeAddPoint")]
		[ColumnEnum("TrainTimeAddPoint", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TrainTimeAddPoint,
		/// <summary>
		/// CourseID : 
		/// </summary>
		[EnumTextValue("CourseID")]
		[ColumnEnum("CourseID", typeof(System.String), System.Data.DbType.AnsiString, false, false, false, 20)]
		CourseId
	}//End enum

} // end namespace
