<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GE.MyLearning.BL</name>
    </assembly>
    <members>
        <member name="T:GE.MyLearning.BL.GenericTypeConverter">
            <summary>
            Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.
            Used by the nettiers strongly typed collection, so they can be saved in ViewState.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GenericTypeConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.GenericTypeConverter"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GenericTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GenericTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EntityKeyBase">
            <summary>
            The base object for each database table's unique identifier.
            </summary>
            <remarks>
            This file is generated once and will never be overwritten.
            </remarks>
        </member>
        <member name="T:GE.MyLearning.BL.EntityKeyBaseCore">
            <summary>
            The base object for each database table's unique identifier.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEntityKey">
            <summary>
            Defines a method that allows setting of property values
            based on the key/value pairs of an IDictionary object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.IEntityKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied IDictionary object into
            properties of the current object.
            </summary>
            <param name="values">An IDictionary instance that contains the key/value
            pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.IEntityKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityKeyBaseCore.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied IDictionary object into
            properties of the current object.
            </summary>
            <param name="values">An IDictionary instance that contains the key/value
            pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityKeyBaseCore.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityKeyBaseCore.Equals(System.Object)">
            <summary>
            Determines whether the specified System.Object is equal to the current object.
            </summary>
            <param name="obj">The System.Object to compare with the current object.</param>
            <returns>Returns true if the specified System.Object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityKeyBaseCore.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. GetHashCode() is suitable
            for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:GE.MyLearning.BL.IEntityId`1">
            <summary>
            Defines a common property which represents the
            unique identifier for a business object.
            </summary>
            <typeparam name="EntityKey">The value type or
            class to be used for the EntityId property.</typeparam>
        </member>
        <member name="T:GE.MyLearning.BL.IEntity">
            <summary>
            The interface that each business object of the model implements.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.IEntity.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.IEntity.MarkToDelete">
            <summary>
            Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.IEntity.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.TableName">
            <summary>
            The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.IsDirty">
             <summary>
            	Indicates if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.IsNew">
             <summary>
            	Indicates if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.IsDeleted">
            <summary>
            True if object has been marked as deleted. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.IsValid">
            <summary>
            Indicates if the object is in a valid state
            </summary>
            <value>True if object is valid; otherwise False.</value>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.EntityState">
            <summary>
            Returns one of EntityState enum values - intended to replace IsNew, IsDirty, IsDeleted.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.ParentCollection">
            <summary>
            Gets or sets the parent collection.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
            <value>A string array that holds the columns names.</value>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="E:GE.MyLearning.BL.IEntity.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.IsEntityTracked">
            <summary>
            Determines whether this entity is being tracked.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEntity.EntityTrackingKey">
            <summary>
             The tracking key used to with the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEntityId`1.EntityId">
            <summary>
            Gets or sets the value of the unique identifier
            for the current business object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Coursewares">
            <summary>
             An object representation of the 'Coursewares' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.CoursewaresBase">
            <summary>
             An object representation of the 'Coursewares' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EntityBase">
            <summary>
            The base object for each database table entity.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EntityBaseCore">
            <summary>
            The base object for each database table entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EntityBaseCore"/> class.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityBaseCore.isEntityTracked">
            <summary>
            Determines whether the entity is being tracked by the Locator.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityBaseCore.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityBaseCore.bindingIsNew">
            <summary>
             Used by in place editing of databinding features for new inserted row.
            Indicates that we are in the middle of an IBinding insert transaction.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityBaseCore.entityHashCode">
            <summary>
              The actual hashcode of the entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method <see cref="P:GE.MyLearning.BL.EntityBaseCore.IsDirty"/> and <see cref="P:GE.MyLearning.BL.EntityBaseCore.IsNew"/> are false. <see cref="P:GE.MyLearning.BL.EntityBaseCore.IsDeleted"/> flag remain unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.CancelChanges">
            <summary>
              Revert all changes and restore original values.  To be implemented in concrete class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.RemoveDeleteMark">
            <summary>
               Remove the "isDeleted" mark from the entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="F:GE.MyLearning.BL.EntityBaseCore.tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.GetHashCode">
            <summary>
             Provides a unique HashCode throughout the lifetime of the entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.Validate">
            <summary>
            Force this object to validate itself using the assigned business rules.
            </summary>
            <remarks>Validates all properties.</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.Validate(System.String)">
            <summary>
            Force the object to validate itself using the assigned business rules.
            </summary>
            <param name="propertyName">Name of the property to validate.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.Validate(System.Enum)">
            <summary>
            Force the object to validate itself using the assigned business rules.
            </summary>
            <param name="column">Column enumeration representing the column to validate.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityBaseCore.OnDeserialization(System.Object)">
            <summary>
            Runs when the entire object graph has been deserialized.
            </summary>
            <param name="sender">The object that initiated the callback. The functionality for this parameter is not currently implemented.</param>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.TableName">
            <summary>
            The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
            <value>A string array that holds the columns names.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.IsDeleted">
            <summary>
            	True if object has been <see cref="M:GE.MyLearning.BL.EntityBaseCore.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.IsDirty">
            <summary>
            	Indicates if the object has been modified from its original state.
            </summary>
            <remarks>True if object has been modified from its original state; otherwise False;</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.IsNew">
            <summary>
            	Indicates if the object is new.
            </summary>
            <remarks>True if objectis new; otherwise False;</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.ParentCollection">
            <summary>
            Gets or sets the parent collection.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.IsEntityTracked">
            <summary>
            Determines whether this entity is being tracked.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EntityBaseCore.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.Error">
            <summary>
            Gets an error message indicating what is wrong with this object.
            </summary>
            <value></value>
            <returns>An error message indicating what is wrong with this object. The default is an empty string ("").</returns>      
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.Item(System.String)">
            <summary>
            Gets the <see cref="T:String"/> with the specified column name.
            </summary>
            <value></value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.Validator">
            <summary>
            <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Validator"/> associated with this object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.ValidationResults">
            <summary>
            Returns a list of all the validation rules that failed.
            </summary>
            <returns><see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults"/></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EntityBaseCore.IsValid">
            <summary>
            Returns <see langword="true" /> if the object is valid, 
            <see langword="false" /> if the object validation rules that have indicated failure. 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ICoursewares">
            <summary>
            	The data structure representation of the 'Coursewares' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ICoursewares.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.CoursewareId">
            <summary>			
            CoursewareID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Coursewares"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.OriginalCoursewareId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.CoursewareName">
            <summary>
            CoursewareName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.CoursewareFileName">
            <summary>
            CoursewareFileName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.CoursewareFilePath">
            <summary>
            CoursewareFilePath : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.CoursewareDifficulty">
            <summary>
            CoursewareDifficulty : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.CoursewareOrder">
            <summary>
            CoursewareOrder : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.CoursewareType">
            <summary>
            CoursewareType : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.CourseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICoursewares.ResourceType">
            <summary>
            ResourceType : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ICloneableEx">
            <summary>
                Interface that TList and every entity implements to support
            	cloning of an object tree.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ICloneableEx.Clone(System.Collections.IDictionary)">
            <summary>
             The tracking key used to with the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
            <param name="existingCopies">A list containing references to all objects already copied.</param>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.CoursewaresBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.CoursewaresBase"/> instance.
            </summary>
            <param name="_coursewareId"></param>
            <param name="_coursewareName"></param>
            <param name="_createTime"></param>
            <param name="_createUserId"></param>
            <param name="_coursewareFileName"></param>
            <param name="_coursewareFilePath"></param>
            <param name="_coursewareDifficulty"></param>
            <param name="_description"></param>
            <param name="_coursewareOrder"></param>
            <param name="_coursewareType"></param>
            <param name="_status"></param>
            <param name="_courseId"></param>
            <param name="_resourceType"></param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.CreateCoursewares(System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Coursewares"/> instance.
            </summary>
            <param name="_coursewareId"></param>
            <param name="_coursewareName"></param>
            <param name="_createTime"></param>
            <param name="_createUserId"></param>
            <param name="_coursewareFileName"></param>
            <param name="_coursewareFilePath"></param>
            <param name="_coursewareDifficulty"></param>
            <param name="_description"></param>
            <param name="_coursewareOrder"></param>
            <param name="_coursewareType"></param>
            <param name="_status"></param>
            <param name="_courseId"></param>
            <param name="_resourceType"></param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Coursewares Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.Copy">
            <summary>
              Returns a Typed Coursewares Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.DeepCopy">
            <summary>
              Returns a Typed Coursewares Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.IsPropertyChanged(GE.MyLearning.BL.CoursewaresColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.GetOriginalEntity">
            <summary>
              Returns a Coursewares Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.CoursewaresBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.CoursewaresBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.Equals(GE.MyLearning.BL.CoursewaresBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.CoursewaresBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.ValueEquals(GE.MyLearning.BL.CoursewaresBase,GE.MyLearning.BL.CoursewaresBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.CoursewaresBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.CoursewaresBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.CoursewaresBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.OnColumnChanging(GE.MyLearning.BL.CoursewaresColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CoursewaresBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CoursewaresColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.OnColumnChanged(GE.MyLearning.BL.CoursewaresColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CoursewaresBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CoursewaresColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.OnColumnChanging(GE.MyLearning.BL.CoursewaresColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CoursewaresBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CoursewaresColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.OnColumnChanged(GE.MyLearning.BL.CoursewaresColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CoursewaresBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CoursewaresColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.CoursewaresBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CoursewaresBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CoursewareId">
            <summary>
            	Gets or sets the CoursewareId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.OriginalCoursewareId">
            <summary>
            	Get the original value of the CoursewareID property.
            	
            </summary>
            <remarks>This is the original value of the CoursewareID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CoursewareName">
            <summary>
            	Gets or sets the CoursewareName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CreateTime">
            <summary>
            	Gets or sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreateTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CreateUserId">
            <summary>
            	Gets or sets the CreateUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CoursewareFileName">
            <summary>
            	Gets or sets the CoursewareFileName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CoursewareFilePath">
            <summary>
            	Gets or sets the CoursewareFilePath property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CoursewareDifficulty">
            <summary>
            	Gets or sets the CoursewareDifficulty property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCoursewareDifficultyNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CoursewareOrder">
            <summary>
            	Gets or sets the CoursewareOrder property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCoursewareOrderNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CoursewareType">
            <summary>
            	Gets or sets the CoursewareType property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CourseId">
            <summary>
            	Gets or sets the CourseId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.ResourceType">
            <summary>
            	Gets or sets the ResourceType property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CoursewaresBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CoursewaresBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CoursewaresBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData">
            <summary>
            	The data structure representation of the 'Coursewares' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.CoursewareId">
            <summary>			
            CoursewareID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Coursewares"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.OriginalCoursewareId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.CoursewareName">
            <summary>
            CoursewareName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.CoursewareFileName">
            <summary>
            CoursewareFileName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.CoursewareFilePath">
            <summary>
            CoursewareFilePath : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.CoursewareDifficulty">
            <summary>
            CoursewareDifficulty : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.CoursewareOrder">
            <summary>
            CoursewareOrder : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.CoursewareType">
            <summary>
            CoursewareType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.CourseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.ResourceType">
            <summary>
            ResourceType : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresBase.CoursewaresEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.Coursewares.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Coursewares"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CourseIdea">
            <summary>
             An object representation of the 'CourseIdea' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.CourseIdeaBase">
            <summary>
             An object representation of the 'CourseIdea' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ICourseIdea">
            <summary>
            	The data structure representation of the 'CourseIdea' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ICourseIdea.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.CourseideaId">
            <summary>			
            CourseideaID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "CourseIdea"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.CourseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.CourseUserId">
            <summary>
            CourseUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.CourseUserDate">
            <summary>
            CourseUserDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.CourseKnowledge">
            <summary>
            CourseKnowledge : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.Courseinstance">
            <summary>
            Courseinstance : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.CourseUserIdea">
            <summary>
            CourseUserIdea : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.CheckUserId">
            <summary>
            CheckUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.CheckUserDate">
            <summary>
            CheckUserDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.CheckUserIdea">
            <summary>
            CheckUserIdea : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourseIdea.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.CourseIdeaBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.CourseIdeaBase"/> instance.
            </summary>
            <param name="_courseId"></param>
            <param name="_courseUserId"></param>
            <param name="_courseUserDate"></param>
            <param name="_courseKnowledge"></param>
            <param name="_courseinstance"></param>
            <param name="_courseUserIdea"></param>
            <param name="_checkUserId"></param>
            <param name="_checkUserDate"></param>
            <param name="_checkUserIdea"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.CreateCourseIdea(System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.CourseIdea"/> instance.
            </summary>
            <param name="_courseId"></param>
            <param name="_courseUserId"></param>
            <param name="_courseUserDate"></param>
            <param name="_courseKnowledge"></param>
            <param name="_courseinstance"></param>
            <param name="_courseUserIdea"></param>
            <param name="_checkUserId"></param>
            <param name="_checkUserDate"></param>
            <param name="_checkUserIdea"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed CourseIdea Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.Copy">
            <summary>
              Returns a Typed CourseIdea Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.DeepCopy">
            <summary>
              Returns a Typed CourseIdea Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.IsPropertyChanged(GE.MyLearning.BL.CourseIdeaColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.GetOriginalEntity">
            <summary>
              Returns a CourseIdea Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.CourseIdeaBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.CourseIdeaBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.Equals(GE.MyLearning.BL.CourseIdeaBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.CourseIdeaBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.ValueEquals(GE.MyLearning.BL.CourseIdeaBase,GE.MyLearning.BL.CourseIdeaBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.CourseIdeaBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.CourseIdeaBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.CourseIdeaBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.OnColumnChanging(GE.MyLearning.BL.CourseIdeaColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CourseIdeaBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CourseIdeaColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.OnColumnChanged(GE.MyLearning.BL.CourseIdeaColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CourseIdeaBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CourseIdeaColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.OnColumnChanging(GE.MyLearning.BL.CourseIdeaColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CourseIdeaBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CourseIdeaColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.OnColumnChanged(GE.MyLearning.BL.CourseIdeaColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CourseIdeaBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CourseIdeaColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.CourseIdeaBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CourseIdeaBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.CourseideaId">
            <summary>
            	Gets or sets the CourseideaId property. 
            	
            </summary>
            <value>This type is bigint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.CourseId">
            <summary>
            	Gets or sets the CourseId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.CourseUserId">
            <summary>
            	Gets or sets the CourseUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.CourseUserDate">
            <summary>
            	Gets or sets the CourseUserDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCourseUserDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.CourseKnowledge">
            <summary>
            	Gets or sets the CourseKnowledge property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.Courseinstance">
            <summary>
            	Gets or sets the Courseinstance property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.CourseUserIdea">
            <summary>
            	Gets or sets the CourseUserIdea property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.CheckUserId">
            <summary>
            	Gets or sets the CheckUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.CheckUserDate">
            <summary>
            	Gets or sets the CheckUserDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCheckUserDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.CheckUserIdea">
            <summary>
            	Gets or sets the CheckUserIdea property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CourseIdeaBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CourseIdeaBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CourseIdeaBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData">
            <summary>
            	The data structure representation of the 'CourseIdea' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.CourseideaId">
            <summary>			
            CourseideaID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "CourseIdea"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.CourseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.CourseUserId">
            <summary>
            CourseUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.CourseUserDate">
            <summary>
            CourseUserDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.CourseKnowledge">
            <summary>
            CourseKnowledge : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.Courseinstance">
            <summary>
            Courseinstance : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.CourseUserIdea">
            <summary>
            CourseUserIdea : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.CheckUserId">
            <summary>
            CheckUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.CheckUserDate">
            <summary>
            CheckUserDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.CheckUserIdea">
            <summary>
            CheckUserIdea : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaBase.CourseIdeaEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdea.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.CourseIdea"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviorBase">
            <summary>
             An object representation of the 'evl_Behavior' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlBehavior">
            <summary>
            	The data structure representation of the 'evl_Behavior' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlBehavior.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlBehavior.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_Behavior"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlBehavior.Subject">
            <summary>
            subject : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlBehavior.CatelogId">
            <summary>
            catelog_id : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlBehavior.Weight">
            <summary>
            Weight : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlBehavior.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlBehaviorBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlBehaviorBase"/> instance.
            </summary>
            <param name="_subject"></param>
            <param name="_catelogId"></param>
            <param name="_weight"></param>
            <param name="_modelId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.CreateEvlBehavior(System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlBehavior"/> instance.
            </summary>
            <param name="_subject"></param>
            <param name="_catelogId"></param>
            <param name="_weight"></param>
            <param name="_modelId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlBehavior Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.Copy">
            <summary>
              Returns a Typed EvlBehavior Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.DeepCopy">
            <summary>
              Returns a Typed EvlBehavior Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.IsPropertyChanged(GE.MyLearning.BL.EvlBehaviorColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.GetOriginalEntity">
            <summary>
              Returns a EvlBehavior Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlBehaviorBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlBehaviorBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.Equals(GE.MyLearning.BL.EvlBehaviorBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlBehaviorBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.ValueEquals(GE.MyLearning.BL.EvlBehaviorBase,GE.MyLearning.BL.EvlBehaviorBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlBehaviorBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlBehaviorBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlBehaviorBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.OnColumnChanging(GE.MyLearning.BL.EvlBehaviorColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlBehaviorBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlBehaviorColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.OnColumnChanged(GE.MyLearning.BL.EvlBehaviorColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlBehaviorBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlBehaviorColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.OnColumnChanging(GE.MyLearning.BL.EvlBehaviorColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlBehaviorBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlBehaviorColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.OnColumnChanged(GE.MyLearning.BL.EvlBehaviorColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlBehaviorBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlBehaviorColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlBehaviorBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlBehaviorBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.Subject">
            <summary>
            	Gets or sets the Subject property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.CatelogId">
            <summary>
            	Gets or sets the CatelogId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCatelogIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.Weight">
            <summary>
            	Gets or sets the Weight property. 
            	
            </summary>
            <value>This type is numeric.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsWeightNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.ModelId">
            <summary>
            	Gets or sets the ModelId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsModelIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlBehaviorBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlBehaviorBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviorBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviorBase.EvlBehaviorEntityData">
            <summary>
            	The data structure representation of the 'evl_Behavior' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorBase.EvlBehaviorEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_Behavior"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorBase.EvlBehaviorEntityData.Subject">
            <summary>
            subject : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorBase.EvlBehaviorEntityData.CatelogId">
            <summary>
            catelog_id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorBase.EvlBehaviorEntityData.Weight">
            <summary>
            Weight : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorBase.EvlBehaviorEntityData.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.EvlBehaviorEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorBase.EvlBehaviorEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorBase.EvlBehaviorEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviorEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorEventArgs.#ctor(GE.MyLearning.BL.EvlBehaviorColumn)">
            <summary>
             Initalizes a new Instance of the EvlBehaviorEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorEventArgs.#ctor(GE.MyLearning.BL.EvlBehaviorColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlBehaviorEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorEventArgs.Column">
            <summary>
             The EvlBehaviorColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlBehaviorColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviorEventHandler">
            <summary>
             Define a delegate for all EvlBehavior related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviorComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlBehaviorComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorComparer.#ctor(GE.MyLearning.BL.EvlBehaviorColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlBehaviorComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorComparer.Equals(GE.MyLearning.BL.EvlBehavior,GE.MyLearning.BL.EvlBehavior)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlBehavior"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlBehavior"/> to compare.</param>
            <param name="b">The second <c>EvlBehavior</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorComparer.GetHashCode(GE.MyLearning.BL.EvlBehavior)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorComparer.Compare(GE.MyLearning.BL.EvlBehavior,GE.MyLearning.BL.EvlBehavior)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviorKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorKey.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviorKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorKey.#ctor(GE.MyLearning.BL.EvlBehaviorBase)">
            <summary>
            Initializes a new instance of the EvlBehaviorKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlBehaviorKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviorKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviorKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviorColumn">
            <summary>
            Enumerate the EvlBehavior columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorColumn.Subject">
            <summary>
            Subject : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorColumn.CatelogId">
            <summary>
            CatelogId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorColumn.Weight">
            <summary>
            Weight : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviorColumn.ModelId">
            <summary>
            ModelId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DepartmentBase">
            <summary>
             An object representation of the 'Department' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IDepartment">
            <summary>
            	The data structure representation of the 'Department' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IDepartment.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IDepartment.DepartmentName">
            <summary>			
            DepartmentName : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Department"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IDepartment.OriginalDepartmentName">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDepartment.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDepartment.UpdatedDate">
            <summary>
            UpdatedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.DepartmentBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.DepartmentBase"/> instance.
            </summary>
            <param name="_departmentName"></param>
            <param name="_createdDate"></param>
            <param name="_updatedDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.CreateDepartment(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Department"/> instance.
            </summary>
            <param name="_departmentName"></param>
            <param name="_createdDate"></param>
            <param name="_updatedDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Department Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.Copy">
            <summary>
              Returns a Typed Department Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.DeepCopy">
            <summary>
              Returns a Typed Department Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.IsPropertyChanged(GE.MyLearning.BL.DepartmentColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.GetOriginalEntity">
            <summary>
              Returns a Department Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.DepartmentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.DepartmentBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.Equals(GE.MyLearning.BL.DepartmentBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.DepartmentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.ValueEquals(GE.MyLearning.BL.DepartmentBase,GE.MyLearning.BL.DepartmentBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.DepartmentBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.DepartmentBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.DepartmentBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.OnColumnChanging(GE.MyLearning.BL.DepartmentColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DepartmentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DepartmentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.OnColumnChanged(GE.MyLearning.BL.DepartmentColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DepartmentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DepartmentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.OnColumnChanging(GE.MyLearning.BL.DepartmentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DepartmentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DepartmentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.OnColumnChanged(GE.MyLearning.BL.DepartmentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DepartmentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DepartmentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.DepartmentBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DepartmentBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.DepartmentName">
            <summary>
            	Gets or sets the DepartmentName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.OriginalDepartmentName">
            <summary>
            	Get the original value of the DepartmentName property.
            	
            </summary>
            <remarks>This is the original value of the DepartmentName property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.CreatedDate">
            <summary>
            	Gets or sets the CreatedDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreatedDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.UpdatedDate">
            <summary>
            	Gets or sets the UpdatedDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsUpdatedDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DepartmentBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DepartmentBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DepartmentBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.DepartmentBase.DepartmentEntityData">
            <summary>
            	The data structure representation of the 'Department' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentBase.DepartmentEntityData.DepartmentName">
            <summary>			
            DepartmentName : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Department"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentBase.DepartmentEntityData.OriginalDepartmentName">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentBase.DepartmentEntityData.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentBase.DepartmentEntityData.UpdatedDate">
            <summary>
            UpdatedDate : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.DepartmentEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentBase.DepartmentEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentBase.DepartmentEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.DepartmentEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Department"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentEventArgs.#ctor(GE.MyLearning.BL.DepartmentColumn)">
            <summary>
             Initalizes a new Instance of the DepartmentEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentEventArgs.#ctor(GE.MyLearning.BL.DepartmentColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the DepartmentEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentEventArgs.Column">
            <summary>
             The DepartmentColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.DepartmentColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.DepartmentEventHandler">
            <summary>
             Define a delegate for all Department related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DepartmentComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DepartmentComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentComparer.#ctor(GE.MyLearning.BL.DepartmentColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:DepartmentComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentComparer.Equals(GE.MyLearning.BL.Department,GE.MyLearning.BL.Department)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Department"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Department"/> to compare.</param>
            <param name="b">The second <c>Department</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentComparer.GetHashCode(GE.MyLearning.BL.Department)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentComparer.Compare(GE.MyLearning.BL.Department,GE.MyLearning.BL.Department)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.DepartmentKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Department"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentKey.#ctor">
            <summary>
            Initializes a new instance of the DepartmentKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentKey.#ctor(GE.MyLearning.BL.DepartmentBase)">
            <summary>
            Initializes a new instance of the DepartmentKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the DepartmentKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DepartmentKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DepartmentKey.DepartmentName">
            <summary>
            Gets or sets the DepartmentName property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DepartmentColumn">
            <summary>
            Enumerate the Department columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentColumn.DepartmentName">
            <summary>
            DepartmentName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentColumn.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DepartmentColumn.UpdatedDate">
            <summary>
            UpdatedDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.MenusBase">
            <summary>
             An object representation of the 'Menus' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IMenus">
            <summary>
            	The data structure representation of the 'Menus' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IMenus.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IMenus.MenuId">
            <summary>			
            MenuID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Menus"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IMenus.OriginalMenuId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IMenus.ParentMenuId">
            <summary>
            ParentMenuID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IMenus.MenuName">
            <summary>
            MenuName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IMenus.ShowOrder">
            <summary>
            ShowOrder : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IMenus.PermissionId">
            <summary>
            PermissionID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IMenus.PageUrl">
            <summary>
            PageUrl : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IMenus.HelpInfo">
            <summary>
            HelpInfo : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IMenus.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.MenusBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.MenusBase"/> instance.
            </summary>
            <param name="_menuId"></param>
            <param name="_parentMenuId"></param>
            <param name="_menuName"></param>
            <param name="_showOrder"></param>
            <param name="_permissionId"></param>
            <param name="_pageUrl"></param>
            <param name="_helpInfo"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.CreateMenus(System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.Int32)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Menus"/> instance.
            </summary>
            <param name="_menuId"></param>
            <param name="_parentMenuId"></param>
            <param name="_menuName"></param>
            <param name="_showOrder"></param>
            <param name="_permissionId"></param>
            <param name="_pageUrl"></param>
            <param name="_helpInfo"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Menus Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.Copy">
            <summary>
              Returns a Typed Menus Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.DeepCopy">
            <summary>
              Returns a Typed Menus Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.IsPropertyChanged(GE.MyLearning.BL.MenusColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.GetOriginalEntity">
            <summary>
              Returns a Menus Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.MenusBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.MenusBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.Equals(GE.MyLearning.BL.MenusBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.MenusBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.ValueEquals(GE.MyLearning.BL.MenusBase,GE.MyLearning.BL.MenusBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.MenusBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.MenusBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.MenusBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.OnColumnChanging(GE.MyLearning.BL.MenusColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.MenusBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.MenusColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.OnColumnChanged(GE.MyLearning.BL.MenusColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.MenusBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.MenusColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.OnColumnChanging(GE.MyLearning.BL.MenusColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.MenusBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.MenusColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.OnColumnChanged(GE.MyLearning.BL.MenusColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.MenusBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.MenusColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.MenusBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.MenusBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.MenuId">
            <summary>
            	Gets or sets the MenuId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.OriginalMenuId">
            <summary>
            	Get the original value of the MenuID property.
            	
            </summary>
            <remarks>This is the original value of the MenuID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.ParentMenuId">
            <summary>
            	Gets or sets the ParentMenuId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.MenuName">
            <summary>
            	Gets or sets the MenuName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.ShowOrder">
            <summary>
            	Gets or sets the ShowOrder property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsShowOrderNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.PermissionId">
            <summary>
            	Gets or sets the PermissionId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.PageUrl">
            <summary>
            	Gets or sets the PageUrl property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.HelpInfo">
            <summary>
            	Gets or sets the HelpInfo property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.MenusBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.MenusBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.MenusBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.MenusBase.MenusEntityData">
            <summary>
            	The data structure representation of the 'Menus' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.MenusEntityData.MenuId">
            <summary>			
            MenuID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Menus"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.MenusEntityData.OriginalMenuId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.MenusEntityData.ParentMenuId">
            <summary>
            ParentMenuID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.MenusEntityData.MenuName">
            <summary>
            MenuName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.MenusEntityData.ShowOrder">
            <summary>
            ShowOrder : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.MenusEntityData.PermissionId">
            <summary>
            PermissionID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.MenusEntityData.PageUrl">
            <summary>
            PageUrl : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.MenusEntityData.HelpInfo">
            <summary>
            HelpInfo : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusBase.MenusEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.MenusEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusBase.MenusEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.MenusBase.MenusEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.MenusEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Menus"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.MenusEventArgs.#ctor(GE.MyLearning.BL.MenusColumn)">
            <summary>
             Initalizes a new Instance of the MenusEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusEventArgs.#ctor(GE.MyLearning.BL.MenusColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the MenusEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.MenusEventArgs.Column">
            <summary>
             The MenusColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.MenusColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.MenusEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.MenusEventHandler">
            <summary>
             Define a delegate for all Menus related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.MenusComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MenusComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusComparer.#ctor(GE.MyLearning.BL.MenusColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:MenusComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.MenusComparer.Equals(GE.MyLearning.BL.Menus,GE.MyLearning.BL.Menus)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Menus"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Menus"/> to compare.</param>
            <param name="b">The second <c>Menus</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusComparer.GetHashCode(GE.MyLearning.BL.Menus)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusComparer.Compare(GE.MyLearning.BL.Menus,GE.MyLearning.BL.Menus)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.MenusComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.MenusKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Menus"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusKey.#ctor">
            <summary>
            Initializes a new instance of the MenusKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusKey.#ctor(GE.MyLearning.BL.MenusBase)">
            <summary>
            Initializes a new instance of the MenusKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MenusKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.MenusKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.MenusKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.MenusKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.MenusKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.MenusKey.MenuId">
            <summary>
            Gets or sets the MenuId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.MenusColumn">
            <summary>
            Enumerate the Menus columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusColumn.MenuId">
            <summary>
            MenuId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusColumn.ParentMenuId">
            <summary>
            ParentMenuId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusColumn.MenuName">
            <summary>
            MenuName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusColumn.ShowOrder">
            <summary>
            ShowOrder : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusColumn.PermissionId">
            <summary>
            PermissionId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusColumn.PageUrl">
            <summary>
            PageUrl : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusColumn.HelpInfo">
            <summary>
            HelpInfo : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.MenusColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuClassInfo">
            <summary>
             An object representation of the 'VU_ClassInfo' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.VuClassInfoBase">
            <summary>
             An object representation of the 'VU_ClassInfo' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuClassInfo">
            <summary>
            	The data structure representation of the 'VU_ClassInfo' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuClassInfo.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuClassInfo.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_ClassInfo"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuClassInfo.ClassId">
            <summary>
            ClassID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuClassInfo.FuId">
            <summary>
            FuID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuClassInfo.ClassName">
            <summary>
            ClassName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuClassInfo.CreatDate">
            <summary>
            CreatDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuClassInfo.ClassOwner">
            <summary>
            ClassOwner : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuClassInfo.ClassDesc">
            <summary>
            ClassDESC : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuClassInfo.Counter">
            <summary>
            counter : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuClassInfo.Closed">
            <summary>
            Closed : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuClassInfoBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.#ctor(System.String,System.Nullable{System.Int32},System.String,System.DateTime,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuClassInfoBase"/> instance.
            </summary>
            <param name="_classId"></param>
            <param name="_fuId"></param>
            <param name="_className"></param>
            <param name="_creatDate"></param>
            <param name="_classOwner"></param>
            <param name="_classDesc"></param>
            <param name="_counter"></param>
            <param name="_closed"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.CreateVuClassInfo(System.String,System.Nullable{System.Int32},System.String,System.DateTime,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuClassInfo"/> instance.
            </summary>
            <param name="_classId"></param>
            <param name="_fuId"></param>
            <param name="_className"></param>
            <param name="_creatDate"></param>
            <param name="_classOwner"></param>
            <param name="_classDesc"></param>
            <param name="_counter"></param>
            <param name="_closed"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuClassInfo Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.Copy">
            <summary>
              Returns a Typed VuClassInfo Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.DeepCopy">
            <summary>
              Returns a Typed VuClassInfo Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.IsPropertyChanged(GE.MyLearning.BL.VuClassInfoColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.GetOriginalEntity">
            <summary>
              Returns a VuClassInfo Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuClassInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuClassInfoBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.Equals(GE.MyLearning.BL.VuClassInfoBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuClassInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.ValueEquals(GE.MyLearning.BL.VuClassInfoBase,GE.MyLearning.BL.VuClassInfoBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuClassInfoBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuClassInfoBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuClassInfoBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.OnColumnChanging(GE.MyLearning.BL.VuClassInfoColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuClassInfoBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuClassInfoColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.OnColumnChanged(GE.MyLearning.BL.VuClassInfoColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuClassInfoBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuClassInfoColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.OnColumnChanging(GE.MyLearning.BL.VuClassInfoColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuClassInfoBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuClassInfoColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.OnColumnChanged(GE.MyLearning.BL.VuClassInfoColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuClassInfoBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuClassInfoColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuClassInfoBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuClassInfoBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.ClassId">
            <summary>
            	Gets or sets the ClassId property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.FuId">
            <summary>
            	Gets or sets the FuId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsFuIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.ClassName">
            <summary>
            	Gets or sets the ClassName property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.CreatDate">
            <summary>
            	Gets or sets the CreatDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.ClassOwner">
            <summary>
            	Gets or sets the ClassOwner property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.ClassDesc">
            <summary>
            	Gets or sets the ClassDesc property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.Counter">
            <summary>
            	Gets or sets the Counter property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCounterNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.Closed">
            <summary>
            	Gets or sets the Closed property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsClosedNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuClassInfoBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuClassInfoBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuClassInfoBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData">
            <summary>
            	The data structure representation of the 'VU_ClassInfo' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_ClassInfo"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.ClassId">
            <summary>
            ClassID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.FuId">
            <summary>
            FuID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.ClassName">
            <summary>
            ClassName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.CreatDate">
            <summary>
            CreatDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.ClassOwner">
            <summary>
            ClassOwner : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.ClassDesc">
            <summary>
            ClassDESC : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.Counter">
            <summary>
            counter : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.Closed">
            <summary>
            Closed : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoBase.VuClassInfoEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfo.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuClassInfo"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuGroupList">
            <summary>
            	The data structure representation of the 'VU_GroupList' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuGroupList.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuGroupList.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_GroupList"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuGroupList.Groupname">
            <summary>
            Groupname : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuGroupList.ExeSso">
            <summary>
            ExeSSO : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuGroupList.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuArticle">
            <summary>
             An object representation of the 'VU_article' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.VuArticleBase">
            <summary>
             An object representation of the 'VU_article' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuArticle">
            <summary>
            	The data structure representation of the 'VU_article' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuArticle.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuArticle.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_article"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuArticle.Classid">
            <summary>
            classid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuArticle.Biaoti">
            <summary>
            biaoti : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuArticle.Lianjie">
            <summary>
            lianjie : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuArticle.Neirong">
            <summary>
            neirong : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuArticle.Today">
            <summary>
            today : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuArticle.Sorts">
            <summary>
            sorts : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuArticle.Closed">
            <summary>
            closed : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuArticleBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuArticleBase"/> instance.
            </summary>
            <param name="_classid"></param>
            <param name="_biaoti"></param>
            <param name="_lianjie"></param>
            <param name="_neirong"></param>
            <param name="_today"></param>
            <param name="_sorts"></param>
            <param name="_closed"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.CreateVuArticle(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuArticle"/> instance.
            </summary>
            <param name="_classid"></param>
            <param name="_biaoti"></param>
            <param name="_lianjie"></param>
            <param name="_neirong"></param>
            <param name="_today"></param>
            <param name="_sorts"></param>
            <param name="_closed"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuArticle Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.Copy">
            <summary>
              Returns a Typed VuArticle Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.DeepCopy">
            <summary>
              Returns a Typed VuArticle Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.IsPropertyChanged(GE.MyLearning.BL.VuArticleColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.GetOriginalEntity">
            <summary>
              Returns a VuArticle Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuArticleBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuArticleBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.Equals(GE.MyLearning.BL.VuArticleBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuArticleBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.ValueEquals(GE.MyLearning.BL.VuArticleBase,GE.MyLearning.BL.VuArticleBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuArticleBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuArticleBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuArticleBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.OnColumnChanging(GE.MyLearning.BL.VuArticleColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuArticleBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuArticleColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.OnColumnChanged(GE.MyLearning.BL.VuArticleColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuArticleBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuArticleColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.OnColumnChanging(GE.MyLearning.BL.VuArticleColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuArticleBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuArticleColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.OnColumnChanged(GE.MyLearning.BL.VuArticleColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuArticleBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuArticleColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuArticleBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuArticleBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.Classid">
            <summary>
            	Gets or sets the Classid property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.Biaoti">
            <summary>
            	Gets or sets the Biaoti property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.Lianjie">
            <summary>
            	Gets or sets the Lianjie property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.Neirong">
            <summary>
            	Gets or sets the Neirong property. 
            	
            </summary>
            <value>This type is text.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.Today">
            <summary>
            	Gets or sets the Today property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTodayNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.Sorts">
            <summary>
            	Gets or sets the Sorts property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsSortsNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.Closed">
            <summary>
            	Gets or sets the Closed property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsClosedNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuArticleBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuArticleBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuArticleBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData">
            <summary>
            	The data structure representation of the 'VU_article' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_article"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.Classid">
            <summary>
            classid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.Biaoti">
            <summary>
            biaoti : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.Lianjie">
            <summary>
            lianjie : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.Neirong">
            <summary>
            neirong : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.Today">
            <summary>
            today : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.Sorts">
            <summary>
            sorts : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.Closed">
            <summary>
            closed : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleBase.VuArticleEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticle.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuArticle"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Permission">
            <summary>
             An object representation of the 'Permission' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.PermissionBase">
            <summary>
             An object representation of the 'Permission' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IPermission">
            <summary>
            	The data structure representation of the 'Permission' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IPermission.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IPermission.PermissionId">
            <summary>			
            PermissionID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Permission"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IPermission.OriginalPermissionId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IPermission.PermissionName">
            <summary>
            PermissionName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IPermission.PermissionUrl">
            <summary>
            PermissionURL : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IPermission.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IPermission.MenuId">
            <summary>
            MenuID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.PermissionBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.#ctor(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.PermissionBase"/> instance.
            </summary>
            <param name="_permissionId"></param>
            <param name="_permissionName"></param>
            <param name="_permissionUrl"></param>
            <param name="_status"></param>
            <param name="_menuId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.CreatePermission(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Permission"/> instance.
            </summary>
            <param name="_permissionId"></param>
            <param name="_permissionName"></param>
            <param name="_permissionUrl"></param>
            <param name="_status"></param>
            <param name="_menuId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Permission Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.Copy">
            <summary>
              Returns a Typed Permission Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.DeepCopy">
            <summary>
              Returns a Typed Permission Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.IsPropertyChanged(GE.MyLearning.BL.PermissionColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.GetOriginalEntity">
            <summary>
              Returns a Permission Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.PermissionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.PermissionBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.Equals(GE.MyLearning.BL.PermissionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.PermissionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.ValueEquals(GE.MyLearning.BL.PermissionBase,GE.MyLearning.BL.PermissionBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.PermissionBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.PermissionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.PermissionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.OnColumnChanging(GE.MyLearning.BL.PermissionColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.PermissionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.PermissionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.OnColumnChanged(GE.MyLearning.BL.PermissionColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.PermissionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.PermissionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.OnColumnChanging(GE.MyLearning.BL.PermissionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.PermissionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.PermissionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.OnColumnChanged(GE.MyLearning.BL.PermissionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.PermissionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.PermissionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.PermissionBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.PermissionBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.PermissionId">
            <summary>
            	Gets or sets the PermissionId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.OriginalPermissionId">
            <summary>
            	Get the original value of the PermissionID property.
            	
            </summary>
            <remarks>This is the original value of the PermissionID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.PermissionName">
            <summary>
            	Gets or sets the PermissionName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.PermissionUrl">
            <summary>
            	Gets or sets the PermissionUrl property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.MenuId">
            <summary>
            	Gets or sets the MenuId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.PermissionBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.PermissionBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.PermissionBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.PermissionBase.PermissionEntityData">
            <summary>
            	The data structure representation of the 'Permission' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase.PermissionEntityData.PermissionId">
            <summary>			
            PermissionID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Permission"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase.PermissionEntityData.OriginalPermissionId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase.PermissionEntityData.PermissionName">
            <summary>
            PermissionName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase.PermissionEntityData.PermissionUrl">
            <summary>
            PermissionURL : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase.PermissionEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionBase.PermissionEntityData.MenuId">
            <summary>
            MenuID : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.PermissionEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionBase.PermissionEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionBase.PermissionEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.Permission.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Permission"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IStudents">
            <summary>
            	The data structure representation of the 'Students' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IStudents.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IStudents.StudentId">
            <summary>			
            StudentID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Students"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IStudents.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudents.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudents.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudents.DegreeId">
            <summary>
            DegreeID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudents.Notes">
            <summary>
            Notes : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudents.Studies">
            <summary>
            studies : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudents.ApplyDate">
            <summary>
            ApplyDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudents.ApprovalofHuman">
            <summary>
            ApprovalofHuman : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudents.ApproveofDate">
            <summary>
            ApproveofDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.SysLogBase">
            <summary>
             An object representation of the 'SysLog' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ISysLog">
            <summary>
            	The data structure representation of the 'SysLog' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ISysLog.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ISysLog.LogId">
            <summary>			
            LogId : 
            </summary>
            <remarks>Member of the primary key of the underlying table "SysLog"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.ISysLog.LogClass">
            <summary>
            LogClass : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ISysLog.LogDescribe">
            <summary>
            LogDescribe : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ISysLog.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ISysLog.LogDate">
            <summary>
            LogDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.SysLogBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.SysLogBase"/> instance.
            </summary>
            <param name="_logClass"></param>
            <param name="_logDescribe"></param>
            <param name="_userId"></param>
            <param name="_logDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.CreateSysLog(System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.SysLog"/> instance.
            </summary>
            <param name="_logClass"></param>
            <param name="_logDescribe"></param>
            <param name="_userId"></param>
            <param name="_logDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed SysLog Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.Copy">
            <summary>
              Returns a Typed SysLog Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.DeepCopy">
            <summary>
              Returns a Typed SysLog Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.IsPropertyChanged(GE.MyLearning.BL.SysLogColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.GetOriginalEntity">
            <summary>
              Returns a SysLog Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.SysLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.SysLogBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.Equals(GE.MyLearning.BL.SysLogBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.SysLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.ValueEquals(GE.MyLearning.BL.SysLogBase,GE.MyLearning.BL.SysLogBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.SysLogBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.SysLogBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.SysLogBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.OnColumnChanging(GE.MyLearning.BL.SysLogColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.SysLogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.SysLogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.OnColumnChanged(GE.MyLearning.BL.SysLogColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.SysLogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.SysLogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.OnColumnChanging(GE.MyLearning.BL.SysLogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.SysLogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.SysLogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.OnColumnChanged(GE.MyLearning.BL.SysLogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.SysLogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.SysLogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.SysLogBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.SysLogBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.LogId">
            <summary>
            	Gets or sets the LogId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.LogClass">
            <summary>
            	Gets or sets the LogClass property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.LogDescribe">
            <summary>
            	Gets or sets the LogDescribe property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.UserId">
            <summary>
            	Gets or sets the UserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.LogDate">
            <summary>
            	Gets or sets the LogDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsLogDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.SysLogBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.SysLogBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.SysLogBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.SysLogBase.SysLogEntityData">
            <summary>
            	The data structure representation of the 'SysLog' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogBase.SysLogEntityData.LogId">
            <summary>			
            LogId : 
            </summary>
            <remarks>Member of the primary key of the underlying table "SysLog"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogBase.SysLogEntityData.LogClass">
            <summary>
            LogClass : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogBase.SysLogEntityData.LogDescribe">
            <summary>
            LogDescribe : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogBase.SysLogEntityData.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogBase.SysLogEntityData.LogDate">
            <summary>
            LogDate : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.SysLogEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogBase.SysLogEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogBase.SysLogEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.SysLogEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.SysLog"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogEventArgs.#ctor(GE.MyLearning.BL.SysLogColumn)">
            <summary>
             Initalizes a new Instance of the SysLogEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogEventArgs.#ctor(GE.MyLearning.BL.SysLogColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the SysLogEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogEventArgs.Column">
            <summary>
             The SysLogColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.SysLogColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.SysLogEventHandler">
            <summary>
             Define a delegate for all SysLog related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.SysLogComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SysLogComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogComparer.#ctor(GE.MyLearning.BL.SysLogColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:SysLogComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogComparer.Equals(GE.MyLearning.BL.SysLog,GE.MyLearning.BL.SysLog)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.SysLog"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.SysLog"/> to compare.</param>
            <param name="b">The second <c>SysLog</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogComparer.GetHashCode(GE.MyLearning.BL.SysLog)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogComparer.Compare(GE.MyLearning.BL.SysLog,GE.MyLearning.BL.SysLog)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.SysLogKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.SysLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogKey.#ctor">
            <summary>
            Initializes a new instance of the SysLogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogKey.#ctor(GE.MyLearning.BL.SysLogBase)">
            <summary>
            Initializes a new instance of the SysLogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the SysLogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.SysLogKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.SysLogKey.LogId">
            <summary>
            Gets or sets the LogId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.SysLogColumn">
            <summary>
            Enumerate the SysLog columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogColumn.LogId">
            <summary>
            LogId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogColumn.LogClass">
            <summary>
            LogClass : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogColumn.LogDescribe">
            <summary>
            LogDescribe : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogColumn.UserId">
            <summary>
            UserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SysLogColumn.LogDate">
            <summary>
            LogDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IInstitutes">
            <summary>
            	The data structure representation of the 'Institutes' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IInstitutes.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IInstitutes.InstituteId">
            <summary>			
            InstituteID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Institutes"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IInstitutes.OriginalInstituteId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IInstitutes.InstituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IInstitutes.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IInstitutes.InstituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IInstitutes.Createtime">
            <summary>
            Createtime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IInstitutes.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IInstitutes.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CoursesBase">
            <summary>
             An object representation of the 'Courses' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ICourses">
            <summary>
            	The data structure representation of the 'Courses' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ICourses.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.CourseId">
            <summary>			
            CourseID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Courses"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.OriginalCourseId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.CourseCredit">
            <summary>
            CourseCredit : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.CourseHour">
            <summary>
            CourseHour : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.IsExperience">
            <summary>
            IsExperience : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICourses.CourseUrl">
            <summary>
            CourseUrl : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.CoursesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.CoursesBase"/> instance.
            </summary>
            <param name="_courseId"></param>
            <param name="_courseName"></param>
            <param name="_createUserId"></param>
            <param name="_courseCredit"></param>
            <param name="_createTime"></param>
            <param name="_description"></param>
            <param name="_courseHour"></param>
            <param name="_status"></param>
            <param name="_isExperience"></param>
            <param name="_courseUrl"></param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.CreateCourses(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Int32,System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Courses"/> instance.
            </summary>
            <param name="_courseId"></param>
            <param name="_courseName"></param>
            <param name="_createUserId"></param>
            <param name="_courseCredit"></param>
            <param name="_createTime"></param>
            <param name="_description"></param>
            <param name="_courseHour"></param>
            <param name="_status"></param>
            <param name="_isExperience"></param>
            <param name="_courseUrl"></param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Courses Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.Copy">
            <summary>
              Returns a Typed Courses Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.DeepCopy">
            <summary>
              Returns a Typed Courses Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.IsPropertyChanged(GE.MyLearning.BL.CoursesColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.GetOriginalEntity">
            <summary>
              Returns a Courses Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.CoursesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.CoursesBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.Equals(GE.MyLearning.BL.CoursesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.CoursesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.ValueEquals(GE.MyLearning.BL.CoursesBase,GE.MyLearning.BL.CoursesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.CoursesBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.CoursesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.CoursesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.OnColumnChanging(GE.MyLearning.BL.CoursesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CoursesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CoursesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.OnColumnChanged(GE.MyLearning.BL.CoursesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CoursesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CoursesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.OnColumnChanging(GE.MyLearning.BL.CoursesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CoursesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CoursesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.OnColumnChanged(GE.MyLearning.BL.CoursesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CoursesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CoursesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.CoursesBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CoursesBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.CourseId">
            <summary>
            	Gets or sets the CourseId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.OriginalCourseId">
            <summary>
            	Get the original value of the CourseID property.
            	
            </summary>
            <remarks>This is the original value of the CourseID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.CourseName">
            <summary>
            	Gets or sets the CourseName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.CreateUserId">
            <summary>
            	Gets or sets the CreateUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.CourseCredit">
            <summary>
            	Gets or sets the CourseCredit property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCourseCreditNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.CreateTime">
            <summary>
            	Gets or sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreateTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.CourseHour">
            <summary>
            	Gets or sets the CourseHour property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCourseHourNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.IsExperience">
            <summary>
            	Gets or sets the IsExperience property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIsExperienceNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.CourseUrl">
            <summary>
            	Gets or sets the CourseUrl property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CoursesBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CoursesBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CoursesBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.CoursesBase.CoursesEntityData">
            <summary>
            	The data structure representation of the 'Courses' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.CourseId">
            <summary>			
            CourseID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Courses"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.OriginalCourseId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.CourseCredit">
            <summary>
            CourseCredit : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.CourseHour">
            <summary>
            CourseHour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.IsExperience">
            <summary>
            IsExperience : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesBase.CoursesEntityData.CourseUrl">
            <summary>
            CourseUrl : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.CoursesEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesBase.CoursesEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesBase.CoursesEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.CoursesEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Courses"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesEventArgs.#ctor(GE.MyLearning.BL.CoursesColumn)">
            <summary>
             Initalizes a new Instance of the CoursesEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesEventArgs.#ctor(GE.MyLearning.BL.CoursesColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CoursesEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesEventArgs.Column">
            <summary>
             The CoursesColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.CoursesColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.CoursesEventHandler">
            <summary>
             Define a delegate for all Courses related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CoursesComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CoursesComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesComparer.#ctor(GE.MyLearning.BL.CoursesColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CoursesComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesComparer.Equals(GE.MyLearning.BL.Courses,GE.MyLearning.BL.Courses)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Courses"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Courses"/> to compare.</param>
            <param name="b">The second <c>Courses</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesComparer.GetHashCode(GE.MyLearning.BL.Courses)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesComparer.Compare(GE.MyLearning.BL.Courses,GE.MyLearning.BL.Courses)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.CoursesKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Courses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesKey.#ctor">
            <summary>
            Initializes a new instance of the CoursesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesKey.#ctor(GE.MyLearning.BL.CoursesBase)">
            <summary>
            Initializes a new instance of the CoursesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CoursesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursesKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursesKey.CourseId">
            <summary>
            Gets or sets the CourseId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CoursesColumn">
            <summary>
            Enumerate the Courses columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesColumn.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesColumn.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesColumn.CreateUserId">
            <summary>
            CreateUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesColumn.CourseCredit">
            <summary>
            CourseCredit : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesColumn.CourseHour">
            <summary>
            CourseHour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesColumn.IsExperience">
            <summary>
            IsExperience : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursesColumn.CourseUrl">
            <summary>
            CourseUrl : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LoginLogBase">
            <summary>
             An object representation of the 'LoginLog' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ILoginLog">
            <summary>
            	The data structure representation of the 'LoginLog' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ILoginLog.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ILoginLog.LoginLogId">
            <summary>			
            LoginLogID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "LoginLog"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.ILoginLog.LogBeginTime">
            <summary>
            LogBeginTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILoginLog.LogEndTime">
            <summary>
            LogEndTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILoginLog.MachineIp">
            <summary>
            MachineIP : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILoginLog.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILoginLog.Demo">
            <summary>
            Demo : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.LoginLogBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.#ctor(System.DateTime,System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.LoginLogBase"/> instance.
            </summary>
            <param name="_logBeginTime"></param>
            <param name="_logEndTime"></param>
            <param name="_machineIp"></param>
            <param name="_userId"></param>
            <param name="_demo"></param>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.CreateLoginLog(System.DateTime,System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.LoginLog"/> instance.
            </summary>
            <param name="_logBeginTime"></param>
            <param name="_logEndTime"></param>
            <param name="_machineIp"></param>
            <param name="_userId"></param>
            <param name="_demo"></param>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed LoginLog Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.Copy">
            <summary>
              Returns a Typed LoginLog Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.DeepCopy">
            <summary>
              Returns a Typed LoginLog Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.IsPropertyChanged(GE.MyLearning.BL.LoginLogColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.GetOriginalEntity">
            <summary>
              Returns a LoginLog Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.LoginLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.LoginLogBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.Equals(GE.MyLearning.BL.LoginLogBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.LoginLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.ValueEquals(GE.MyLearning.BL.LoginLogBase,GE.MyLearning.BL.LoginLogBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.LoginLogBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.LoginLogBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.LoginLogBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.OnColumnChanging(GE.MyLearning.BL.LoginLogColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LoginLogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LoginLogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.OnColumnChanged(GE.MyLearning.BL.LoginLogColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LoginLogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LoginLogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.OnColumnChanging(GE.MyLearning.BL.LoginLogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LoginLogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LoginLogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.OnColumnChanged(GE.MyLearning.BL.LoginLogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LoginLogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LoginLogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.LoginLogBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.LoginLogBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.LoginLogId">
            <summary>
            	Gets or sets the LoginLogId property. 
            	
            </summary>
            <value>This type is bigint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.LogBeginTime">
            <summary>
            	Gets or sets the LogBeginTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.LogEndTime">
            <summary>
            	Gets or sets the LogEndTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsLogEndTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.MachineIp">
            <summary>
            	Gets or sets the MachineIp property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.UserId">
            <summary>
            	Gets or sets the UserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.Demo">
            <summary>
            	Gets or sets the Demo property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.LoginLogBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.LoginLogBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LoginLogBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.LoginLogBase.LoginLogEntityData">
            <summary>
            	The data structure representation of the 'LoginLog' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase.LoginLogEntityData.LoginLogId">
            <summary>			
            LoginLogID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "LoginLog"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase.LoginLogEntityData.LogBeginTime">
            <summary>
            LogBeginTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase.LoginLogEntityData.LogEndTime">
            <summary>
            LogEndTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase.LoginLogEntityData.MachineIp">
            <summary>
            MachineIP : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase.LoginLogEntityData.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogBase.LoginLogEntityData.Demo">
            <summary>
            Demo : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.LoginLogEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogBase.LoginLogEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogBase.LoginLogEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.LoginLogEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.LoginLog"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogEventArgs.#ctor(GE.MyLearning.BL.LoginLogColumn)">
            <summary>
             Initalizes a new Instance of the LoginLogEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogEventArgs.#ctor(GE.MyLearning.BL.LoginLogColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the LoginLogEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogEventArgs.Column">
            <summary>
             The LoginLogColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.LoginLogColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.LoginLogEventHandler">
            <summary>
             Define a delegate for all LoginLog related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LoginLogComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LoginLogComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogComparer.#ctor(GE.MyLearning.BL.LoginLogColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:LoginLogComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogComparer.Equals(GE.MyLearning.BL.LoginLog,GE.MyLearning.BL.LoginLog)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.LoginLog"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.LoginLog"/> to compare.</param>
            <param name="b">The second <c>LoginLog</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogComparer.GetHashCode(GE.MyLearning.BL.LoginLog)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogComparer.Compare(GE.MyLearning.BL.LoginLog,GE.MyLearning.BL.LoginLog)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.LoginLogKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.LoginLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogKey.#ctor">
            <summary>
            Initializes a new instance of the LoginLogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogKey.#ctor(GE.MyLearning.BL.LoginLogBase)">
            <summary>
            Initializes a new instance of the LoginLogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogKey.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the LoginLogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LoginLogKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LoginLogKey.LoginLogId">
            <summary>
            Gets or sets the LoginLogId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LoginLogColumn">
            <summary>
            Enumerate the LoginLog columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogColumn.LoginLogId">
            <summary>
            LoginLogId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogColumn.LogBeginTime">
            <summary>
            LogBeginTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogColumn.LogEndTime">
            <summary>
            LogEndTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogColumn.MachineIp">
            <summary>
            MachineIp : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogColumn.UserId">
            <summary>
            UserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LoginLogColumn.Demo">
            <summary>
            Demo : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LoginLog">
            <summary>
             An object representation of the 'LoginLog' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.LoginLog.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.LoginLog"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Notices">
            <summary>
             An object representation of the 'Notices' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.NoticesBase">
            <summary>
             An object representation of the 'Notices' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.INotices">
            <summary>
            	The data structure representation of the 'Notices' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.INotices.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.INotices.NoticeId">
            <summary>			
            NoticeID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Notices"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.INotices.NoticeTitle">
            <summary>
            NoticeTitle : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.INotices.NoticeDetail">
            <summary>
            NoticeDetail : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.INotices.NoticeType">
            <summary>
            NoticeType : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.INotices.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.INotices.UserReadTime">
            <summary>
            UserReadTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.INotices.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.INotices.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.INotices.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.NoticesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.#ctor(System.String,System.String,System.Int32,System.String,System.Nullable{System.DateTime},System.DateTime,System.String,System.Int32)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.NoticesBase"/> instance.
            </summary>
            <param name="_noticeTitle"></param>
            <param name="_noticeDetail"></param>
            <param name="_noticeType"></param>
            <param name="_userId"></param>
            <param name="_userReadTime"></param>
            <param name="_createTime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.CreateNotices(System.String,System.String,System.Int32,System.String,System.Nullable{System.DateTime},System.DateTime,System.String,System.Int32)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Notices"/> instance.
            </summary>
            <param name="_noticeTitle"></param>
            <param name="_noticeDetail"></param>
            <param name="_noticeType"></param>
            <param name="_userId"></param>
            <param name="_userReadTime"></param>
            <param name="_createTime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Notices Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.Copy">
            <summary>
              Returns a Typed Notices Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.DeepCopy">
            <summary>
              Returns a Typed Notices Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.IsPropertyChanged(GE.MyLearning.BL.NoticesColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.GetOriginalEntity">
            <summary>
              Returns a Notices Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.NoticesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.NoticesBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.Equals(GE.MyLearning.BL.NoticesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.NoticesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.ValueEquals(GE.MyLearning.BL.NoticesBase,GE.MyLearning.BL.NoticesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.NoticesBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.NoticesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.NoticesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.OnColumnChanging(GE.MyLearning.BL.NoticesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.NoticesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.NoticesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.OnColumnChanged(GE.MyLearning.BL.NoticesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.NoticesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.NoticesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.OnColumnChanging(GE.MyLearning.BL.NoticesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.NoticesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.NoticesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.OnColumnChanged(GE.MyLearning.BL.NoticesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.NoticesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.NoticesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.NoticesBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.NoticesBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.NoticeId">
            <summary>
            	Gets or sets the NoticeId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.NoticeTitle">
            <summary>
            	Gets or sets the NoticeTitle property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.NoticeDetail">
            <summary>
            	Gets or sets the NoticeDetail property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.NoticeType">
            <summary>
            	Gets or sets the NoticeType property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.UserId">
            <summary>
            	Gets or sets the UserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.UserReadTime">
            <summary>
            	Gets or sets the UserReadTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsUserReadTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.CreateTime">
            <summary>
            	Gets or sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.CreateUserId">
            <summary>
            	Gets or sets the CreateUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.NoticesBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.NoticesBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.NoticesBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.NoticesBase.NoticesEntityData">
            <summary>
            	The data structure representation of the 'Notices' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.NoticesEntityData.NoticeId">
            <summary>			
            NoticeID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Notices"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.NoticesEntityData.NoticeTitle">
            <summary>
            NoticeTitle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.NoticesEntityData.NoticeDetail">
            <summary>
            NoticeDetail : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.NoticesEntityData.NoticeType">
            <summary>
            NoticeType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.NoticesEntityData.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.NoticesEntityData.UserReadTime">
            <summary>
            UserReadTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.NoticesEntityData.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.NoticesEntityData.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesBase.NoticesEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.NoticesEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesBase.NoticesEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesBase.NoticesEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.Notices.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Notices"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupItemBase">
            <summary>
             An object representation of the 'VU_GroupItem' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuGroupItem">
            <summary>
            	The data structure representation of the 'VU_GroupItem' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuGroupItem.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuGroupItem.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_GroupItem"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuGroupItem.GroupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuGroupItem.GroupMember">
            <summary>
            GroupMember : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuGroupItemBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.#ctor(System.Int32,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuGroupItemBase"/> instance.
            </summary>
            <param name="_groupId"></param>
            <param name="_groupMember"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.CreateVuGroupItem(System.Int32,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuGroupItem"/> instance.
            </summary>
            <param name="_groupId"></param>
            <param name="_groupMember"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuGroupItem Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.Copy">
            <summary>
              Returns a Typed VuGroupItem Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.DeepCopy">
            <summary>
              Returns a Typed VuGroupItem Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.IsPropertyChanged(GE.MyLearning.BL.VuGroupItemColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.GetOriginalEntity">
            <summary>
              Returns a VuGroupItem Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuGroupItemBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuGroupItemBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.Equals(GE.MyLearning.BL.VuGroupItemBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuGroupItemBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.ValueEquals(GE.MyLearning.BL.VuGroupItemBase,GE.MyLearning.BL.VuGroupItemBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuGroupItemBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuGroupItemBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuGroupItemBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.OnColumnChanging(GE.MyLearning.BL.VuGroupItemColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuGroupItemBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuGroupItemColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.OnColumnChanged(GE.MyLearning.BL.VuGroupItemColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuGroupItemBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuGroupItemColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.OnColumnChanging(GE.MyLearning.BL.VuGroupItemColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuGroupItemBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuGroupItemColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.OnColumnChanged(GE.MyLearning.BL.VuGroupItemColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuGroupItemBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuGroupItemColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuGroupItemBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuGroupItemBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.GroupId">
            <summary>
            	Gets or sets the GroupId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.GroupMember">
            <summary>
            	Gets or sets the GroupMember property. 
            	
            </summary>
            <value>This type is char.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuGroupItemBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuGroupItemBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupItemBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupItemBase.VuGroupItemEntityData">
            <summary>
            	The data structure representation of the 'VU_GroupItem' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemBase.VuGroupItemEntityData.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_GroupItem"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemBase.VuGroupItemEntityData.GroupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemBase.VuGroupItemEntityData.GroupMember">
            <summary>
            GroupMember : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.VuGroupItemEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemBase.VuGroupItemEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemBase.VuGroupItemEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupItemEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemEventArgs.#ctor(GE.MyLearning.BL.VuGroupItemColumn)">
            <summary>
             Initalizes a new Instance of the VuGroupItemEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemEventArgs.#ctor(GE.MyLearning.BL.VuGroupItemColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuGroupItemEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemEventArgs.Column">
            <summary>
             The VuGroupItemColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuGroupItemColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupItemEventHandler">
            <summary>
             Define a delegate for all VuGroupItem related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupItemComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuGroupItemComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemComparer.#ctor(GE.MyLearning.BL.VuGroupItemColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuGroupItemComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemComparer.Equals(GE.MyLearning.BL.VuGroupItem,GE.MyLearning.BL.VuGroupItem)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuGroupItem"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuGroupItem"/> to compare.</param>
            <param name="b">The second <c>VuGroupItem</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemComparer.GetHashCode(GE.MyLearning.BL.VuGroupItem)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemComparer.Compare(GE.MyLearning.BL.VuGroupItem,GE.MyLearning.BL.VuGroupItem)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupItemKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemKey.#ctor">
            <summary>
            Initializes a new instance of the VuGroupItemKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemKey.#ctor(GE.MyLearning.BL.VuGroupItemBase)">
            <summary>
            Initializes a new instance of the VuGroupItemKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuGroupItemKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItemKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupItemKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupItemColumn">
            <summary>
            Enumerate the VuGroupItem columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemColumn.GroupId">
            <summary>
            GroupId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupItemColumn.GroupMember">
            <summary>
            GroupMember : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuNewpostBase">
            <summary>
             An object representation of the 'VU_NEWPOST' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuNewpost">
            <summary>
            	The data structure representation of the 'VU_NEWPOST' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuNewpost.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_NEWPOST"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.SafeNameObject">
            <summary>
            OBJECT : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Conent">
            <summary>
            CONENT : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Spokerman">
            <summary>
            SPOKERMAN : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Popularity">
            <summary>
            POPULARITY : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Replynum">
            <summary>
            REPLYNUM : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Replyman">
            <summary>
            REPLYMAN : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Time">
            <summary>
            time : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Lasttime">
            <summary>
            lasttime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Tupian">
            <summary>
            tupian : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Fujian">
            <summary>
            fujian : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Icon">
            <summary>
            icon : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Isgreat">
            <summary>
            isgreat : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Updatetime">
            <summary>
            updatetime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Catogary">
            <summary>
            catogary : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Istop">
            <summary>
            istop : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Isxingming">
            <summary>
            isxingming : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Iskm">
            <summary>
            iskm : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Closed">
            <summary>
            closed : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Isdescore">
            <summary>
            isdescore : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Opentime">
            <summary>
            opentime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Closedtime">
            <summary>
            closedtime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Replytimes">
            <summary>
            replytimes : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Owner">
            <summary>
            owner : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Modality">
            <summary>
            modality : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Groupid">
            <summary>
            groupid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Isopen">
            <summary>
            isopen : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Issue">
            <summary>
            issue : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Askkm">
            <summary>
            askkm : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Expert">
            <summary>
            expert : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuNewpost.Classid">
            <summary>
            classid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuNewpostBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuNewpostBase"/> instance.
            </summary>
            <param name="_safeNameObject"></param>
            <param name="_conent"></param>
            <param name="_spokerman"></param>
            <param name="_sso"></param>
            <param name="_popularity"></param>
            <param name="_replynum"></param>
            <param name="_replyman"></param>
            <param name="_time"></param>
            <param name="_lasttime"></param>
            <param name="_tupian"></param>
            <param name="_fujian"></param>
            <param name="_icon"></param>
            <param name="_isgreat"></param>
            <param name="_updatetime"></param>
            <param name="_catogary"></param>
            <param name="_istop"></param>
            <param name="_isxingming"></param>
            <param name="_iskm"></param>
            <param name="_score"></param>
            <param name="_closed"></param>
            <param name="_isdescore"></param>
            <param name="_opentime"></param>
            <param name="_closedtime"></param>
            <param name="_replytimes"></param>
            <param name="_owner"></param>
            <param name="_modality"></param>
            <param name="_groupid"></param>
            <param name="_isopen"></param>
            <param name="_issue"></param>
            <param name="_askkm"></param>
            <param name="_expert"></param>
            <param name="_classid"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.CreateVuNewpost(System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuNewpost"/> instance.
            </summary>
            <param name="_safeNameObject"></param>
            <param name="_conent"></param>
            <param name="_spokerman"></param>
            <param name="_sso"></param>
            <param name="_popularity"></param>
            <param name="_replynum"></param>
            <param name="_replyman"></param>
            <param name="_time"></param>
            <param name="_lasttime"></param>
            <param name="_tupian"></param>
            <param name="_fujian"></param>
            <param name="_icon"></param>
            <param name="_isgreat"></param>
            <param name="_updatetime"></param>
            <param name="_catogary"></param>
            <param name="_istop"></param>
            <param name="_isxingming"></param>
            <param name="_iskm"></param>
            <param name="_score"></param>
            <param name="_closed"></param>
            <param name="_isdescore"></param>
            <param name="_opentime"></param>
            <param name="_closedtime"></param>
            <param name="_replytimes"></param>
            <param name="_owner"></param>
            <param name="_modality"></param>
            <param name="_groupid"></param>
            <param name="_isopen"></param>
            <param name="_issue"></param>
            <param name="_askkm"></param>
            <param name="_expert"></param>
            <param name="_classid"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuNewpost Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.Copy">
            <summary>
              Returns a Typed VuNewpost Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.DeepCopy">
            <summary>
              Returns a Typed VuNewpost Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.IsPropertyChanged(GE.MyLearning.BL.VuNewpostColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.GetOriginalEntity">
            <summary>
              Returns a VuNewpost Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuNewpostBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuNewpostBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.Equals(GE.MyLearning.BL.VuNewpostBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuNewpostBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.ValueEquals(GE.MyLearning.BL.VuNewpostBase,GE.MyLearning.BL.VuNewpostBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuNewpostBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuNewpostBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuNewpostBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.OnColumnChanging(GE.MyLearning.BL.VuNewpostColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuNewpostBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuNewpostColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.OnColumnChanged(GE.MyLearning.BL.VuNewpostColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuNewpostBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuNewpostColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.OnColumnChanging(GE.MyLearning.BL.VuNewpostColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuNewpostBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuNewpostColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.OnColumnChanged(GE.MyLearning.BL.VuNewpostColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuNewpostBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuNewpostColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuNewpostBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuNewpostBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.SafeNameObject">
            <summary>
            	Gets or sets the SafeNameObject property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Conent">
            <summary>
            	Gets or sets the Conent property. 
            	
            </summary>
            <value>This type is ntext.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Spokerman">
            <summary>
            	Gets or sets the Spokerman property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Sso">
            <summary>
            	Gets or sets the Sso property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Popularity">
            <summary>
            	Gets or sets the Popularity property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsPopularityNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Replynum">
            <summary>
            	Gets or sets the Replynum property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsReplynumNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Replyman">
            <summary>
            	Gets or sets the Replyman property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Time">
            <summary>
            	Gets or sets the Time property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Lasttime">
            <summary>
            	Gets or sets the Lasttime property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsLasttimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Tupian">
            <summary>
            	Gets or sets the Tupian property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Fujian">
            <summary>
            	Gets or sets the Fujian property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Icon">
            <summary>
            	Gets or sets the Icon property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Isgreat">
            <summary>
            	Gets or sets the Isgreat property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIsgreatNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Updatetime">
            <summary>
            	Gets or sets the Updatetime property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsUpdatetimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Catogary">
            <summary>
            	Gets or sets the Catogary property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Istop">
            <summary>
            	Gets or sets the Istop property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIstopNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Isxingming">
            <summary>
            	Gets or sets the Isxingming property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIsxingmingNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Iskm">
            <summary>
            	Gets or sets the Iskm property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIskmNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Score">
            <summary>
            	Gets or sets the Score property. 
            	
            </summary>
            <value>This type is numeric.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsScoreNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Closed">
            <summary>
            	Gets or sets the Closed property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsClosedNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Isdescore">
            <summary>
            	Gets or sets the Isdescore property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIsdescoreNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Opentime">
            <summary>
            	Gets or sets the Opentime property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsOpentimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Closedtime">
            <summary>
            	Gets or sets the Closedtime property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsClosedtimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Replytimes">
            <summary>
            	Gets or sets the Replytimes property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsReplytimesNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Owner">
            <summary>
            	Gets or sets the Owner property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Modality">
            <summary>
            	Gets or sets the Modality property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Groupid">
            <summary>
            	Gets or sets the Groupid property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsGroupidNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Isopen">
            <summary>
            	Gets or sets the Isopen property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIsopenNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Issue">
            <summary>
            	Gets or sets the Issue property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIssueNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Askkm">
            <summary>
            	Gets or sets the Askkm property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsAskkmNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Expert">
            <summary>
            	Gets or sets the Expert property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Classid">
            <summary>
            	Gets or sets the Classid property. 
            	
            </summary>
            <value>This type is char.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuNewpostBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuNewpostBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuNewpostBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData">
            <summary>
            	The data structure representation of the 'VU_NEWPOST' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_NEWPOST"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.SafeNameObject">
            <summary>
            OBJECT : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Conent">
            <summary>
            CONENT : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Spokerman">
            <summary>
            SPOKERMAN : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Popularity">
            <summary>
            POPULARITY : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Replynum">
            <summary>
            REPLYNUM : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Replyman">
            <summary>
            REPLYMAN : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Time">
            <summary>
            time : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Lasttime">
            <summary>
            lasttime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Tupian">
            <summary>
            tupian : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Fujian">
            <summary>
            fujian : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Icon">
            <summary>
            icon : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Isgreat">
            <summary>
            isgreat : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Updatetime">
            <summary>
            updatetime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Catogary">
            <summary>
            catogary : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Istop">
            <summary>
            istop : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Isxingming">
            <summary>
            isxingming : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Iskm">
            <summary>
            iskm : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Closed">
            <summary>
            closed : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Isdescore">
            <summary>
            isdescore : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Opentime">
            <summary>
            opentime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Closedtime">
            <summary>
            closedtime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Replytimes">
            <summary>
            replytimes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Owner">
            <summary>
            owner : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Modality">
            <summary>
            modality : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Groupid">
            <summary>
            groupid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Isopen">
            <summary>
            isopen : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Issue">
            <summary>
            issue : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Askkm">
            <summary>
            askkm : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Expert">
            <summary>
            expert : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Classid">
            <summary>
            classid : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostBase.VuNewpostEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.VuNewpostEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuNewpost"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostEventArgs.#ctor(GE.MyLearning.BL.VuNewpostColumn)">
            <summary>
             Initalizes a new Instance of the VuNewpostEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostEventArgs.#ctor(GE.MyLearning.BL.VuNewpostColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuNewpostEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostEventArgs.Column">
            <summary>
             The VuNewpostColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuNewpostColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuNewpostEventHandler">
            <summary>
             Define a delegate for all VuNewpost related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuNewpostComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuNewpostComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostComparer.#ctor(GE.MyLearning.BL.VuNewpostColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuNewpostComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostComparer.Equals(GE.MyLearning.BL.VuNewpost,GE.MyLearning.BL.VuNewpost)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuNewpost"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuNewpost"/> to compare.</param>
            <param name="b">The second <c>VuNewpost</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostComparer.GetHashCode(GE.MyLearning.BL.VuNewpost)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostComparer.Compare(GE.MyLearning.BL.VuNewpost,GE.MyLearning.BL.VuNewpost)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuNewpostKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuNewpost"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostKey.#ctor">
            <summary>
            Initializes a new instance of the VuNewpostKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostKey.#ctor(GE.MyLearning.BL.VuNewpostBase)">
            <summary>
            Initializes a new instance of the VuNewpostKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuNewpostKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpostKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuNewpostKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuNewpostColumn">
            <summary>
            Enumerate the VuNewpost columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.SafeNameObject">
            <summary>
            SafeNameObject : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Conent">
            <summary>
            Conent : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Spokerman">
            <summary>
            Spokerman : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Sso">
            <summary>
            Sso : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Popularity">
            <summary>
            Popularity : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Replynum">
            <summary>
            Replynum : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Replyman">
            <summary>
            Replyman : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Time">
            <summary>
            Time : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Lasttime">
            <summary>
            Lasttime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Tupian">
            <summary>
            Tupian : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Fujian">
            <summary>
            Fujian : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Icon">
            <summary>
            Icon : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Isgreat">
            <summary>
            Isgreat : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Updatetime">
            <summary>
            Updatetime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Catogary">
            <summary>
            Catogary : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Istop">
            <summary>
            Istop : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Isxingming">
            <summary>
            Isxingming : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Iskm">
            <summary>
            Iskm : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Score">
            <summary>
            Score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Closed">
            <summary>
            Closed : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Isdescore">
            <summary>
            Isdescore : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Opentime">
            <summary>
            Opentime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Closedtime">
            <summary>
            Closedtime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Replytimes">
            <summary>
            Replytimes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Owner">
            <summary>
            Owner : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Modality">
            <summary>
            Modality : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Groupid">
            <summary>
            Groupid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Isopen">
            <summary>
            Isopen : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Issue">
            <summary>
            Issue : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Askkm">
            <summary>
            Askkm : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Expert">
            <summary>
            Expert : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuNewpostColumn.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserRoleBase">
            <summary>
             An object representation of the 'UserRole' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IUserRole">
            <summary>
            	The data structure representation of the 'UserRole' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IUserRole.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IUserRole.RoleId">
            <summary>			
            RoleID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "UserRole"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IUserRole.OriginalRoleId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserRole.UserId">
            <summary>			
            UserID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "UserRole"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IUserRole.OriginalUserId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.UserRoleBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.#ctor(System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.UserRoleBase"/> instance.
            </summary>
            <param name="_roleId"></param>
            <param name="_userId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.CreateUserRole(System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.UserRole"/> instance.
            </summary>
            <param name="_roleId"></param>
            <param name="_userId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed UserRole Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.Copy">
            <summary>
              Returns a Typed UserRole Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.DeepCopy">
            <summary>
              Returns a Typed UserRole Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.IsPropertyChanged(GE.MyLearning.BL.UserRoleColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.GetOriginalEntity">
            <summary>
              Returns a UserRole Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.UserRoleBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.UserRoleBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.Equals(GE.MyLearning.BL.UserRoleBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.UserRoleBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.ValueEquals(GE.MyLearning.BL.UserRoleBase,GE.MyLearning.BL.UserRoleBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.UserRoleBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.UserRoleBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.UserRoleBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.OnColumnChanging(GE.MyLearning.BL.UserRoleColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserRoleBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserRoleColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.OnColumnChanged(GE.MyLearning.BL.UserRoleColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserRoleBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserRoleColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.OnColumnChanging(GE.MyLearning.BL.UserRoleColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserRoleBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserRoleColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.OnColumnChanged(GE.MyLearning.BL.UserRoleColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserRoleBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserRoleColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.UserRoleBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.UserRoleBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.RoleId">
            <summary>
            	Gets or sets the RoleId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.OriginalRoleId">
            <summary>
            	Get the original value of the RoleID property.
            	
            </summary>
            <remarks>This is the original value of the RoleID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.UserId">
            <summary>
            	Gets or sets the UserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.OriginalUserId">
            <summary>
            	Get the original value of the UserID property.
            	
            </summary>
            <remarks>This is the original value of the UserID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.UserRoleBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.UserRoleBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserRoleBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.UserRoleBase.UserRoleEntityData">
            <summary>
            	The data structure representation of the 'UserRole' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleBase.UserRoleEntityData.RoleId">
            <summary>			
            RoleID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "UserRole"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleBase.UserRoleEntityData.OriginalRoleId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleBase.UserRoleEntityData.UserId">
            <summary>			
            UserID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "UserRole"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleBase.UserRoleEntityData.OriginalUserId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.UserRoleEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleBase.UserRoleEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleBase.UserRoleEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.UserRoleEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.UserRole"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleEventArgs.#ctor(GE.MyLearning.BL.UserRoleColumn)">
            <summary>
             Initalizes a new Instance of the UserRoleEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleEventArgs.#ctor(GE.MyLearning.BL.UserRoleColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the UserRoleEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleEventArgs.Column">
            <summary>
             The UserRoleColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.UserRoleColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.UserRoleEventHandler">
            <summary>
             Define a delegate for all UserRole related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserRoleComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UserRoleComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleComparer.#ctor(GE.MyLearning.BL.UserRoleColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:UserRoleComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleComparer.Equals(GE.MyLearning.BL.UserRole,GE.MyLearning.BL.UserRole)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.UserRole"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.UserRole"/> to compare.</param>
            <param name="b">The second <c>UserRole</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleComparer.GetHashCode(GE.MyLearning.BL.UserRole)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleComparer.Compare(GE.MyLearning.BL.UserRole,GE.MyLearning.BL.UserRole)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.UserRoleKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.UserRole"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleKey.#ctor">
            <summary>
            Initializes a new instance of the UserRoleKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleKey.#ctor(GE.MyLearning.BL.UserRoleBase)">
            <summary>
            Initializes a new instance of the UserRoleKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleKey.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the UserRoleKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserRoleKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleKey.RoleId">
            <summary>
            Gets or sets the RoleId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserRoleKey.UserId">
            <summary>
            Gets or sets the UserId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserRoleColumn">
            <summary>
            Enumerate the UserRole columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleColumn.RoleId">
            <summary>
            RoleId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserRoleColumn.UserId">
            <summary>
            UserId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.StudentsBase">
            <summary>
             An object representation of the 'Students' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.StudentsBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.#ctor(System.String,System.Nullable{System.DateTime},System.Int32,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.StudentsBase"/> instance.
            </summary>
            <param name="_userId"></param>
            <param name="_createTime"></param>
            <param name="_status"></param>
            <param name="_degreeId"></param>
            <param name="_notes"></param>
            <param name="_studies"></param>
            <param name="_applyDate"></param>
            <param name="_approvalofHuman"></param>
            <param name="_approveofDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.CreateStudents(System.String,System.Nullable{System.DateTime},System.Int32,System.Int32,System.String,System.Int32,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Students"/> instance.
            </summary>
            <param name="_userId"></param>
            <param name="_createTime"></param>
            <param name="_status"></param>
            <param name="_degreeId"></param>
            <param name="_notes"></param>
            <param name="_studies"></param>
            <param name="_applyDate"></param>
            <param name="_approvalofHuman"></param>
            <param name="_approveofDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Students Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.Copy">
            <summary>
              Returns a Typed Students Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.DeepCopy">
            <summary>
              Returns a Typed Students Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.IsPropertyChanged(GE.MyLearning.BL.StudentsColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.GetOriginalEntity">
            <summary>
              Returns a Students Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.StudentsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.StudentsBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.Equals(GE.MyLearning.BL.StudentsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.StudentsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.ValueEquals(GE.MyLearning.BL.StudentsBase,GE.MyLearning.BL.StudentsBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.StudentsBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.StudentsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.StudentsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.OnColumnChanging(GE.MyLearning.BL.StudentsColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.StudentsBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.StudentsColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.OnColumnChanged(GE.MyLearning.BL.StudentsColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.StudentsBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.StudentsColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.OnColumnChanging(GE.MyLearning.BL.StudentsColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.StudentsBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.StudentsColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.OnColumnChanged(GE.MyLearning.BL.StudentsColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.StudentsBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.StudentsColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.StudentsBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.StudentsBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.StudentId">
            <summary>
            	Gets or sets the StudentId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.UserId">
            <summary>
            	Gets or sets the UserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.CreateTime">
            <summary>
            	Gets or sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreateTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.DegreeId">
            <summary>
            	Gets or sets the DegreeId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.Notes">
            <summary>
            	Gets or sets the Notes property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.Studies">
            <summary>
            	Gets or sets the Studies property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.ApplyDate">
            <summary>
            	Gets or sets the ApplyDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsApplyDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.ApprovalofHuman">
            <summary>
            	Gets or sets the ApprovalofHuman property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.ApproveofDate">
            <summary>
            	Gets or sets the ApproveofDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsApproveofDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.StudentsBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.StudentsBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.StudentsBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.StudentsBase.StudentsEntityData">
            <summary>
            	The data structure representation of the 'Students' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.StudentsEntityData.StudentId">
            <summary>			
            StudentID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Students"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.StudentsEntityData.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.StudentsEntityData.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.StudentsEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.StudentsEntityData.DegreeId">
            <summary>
            DegreeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.StudentsEntityData.Notes">
            <summary>
            Notes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.StudentsEntityData.Studies">
            <summary>
            studies : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.StudentsEntityData.ApplyDate">
            <summary>
            ApplyDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.StudentsEntityData.ApprovalofHuman">
            <summary>
            ApprovalofHuman : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsBase.StudentsEntityData.ApproveofDate">
            <summary>
            ApproveofDate : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.StudentsEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsBase.StudentsEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsBase.StudentsEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.StudentsEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Students"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsEventArgs.#ctor(GE.MyLearning.BL.StudentsColumn)">
            <summary>
             Initalizes a new Instance of the StudentsEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsEventArgs.#ctor(GE.MyLearning.BL.StudentsColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the StudentsEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsEventArgs.Column">
            <summary>
             The StudentsColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.StudentsColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.StudentsEventHandler">
            <summary>
             Define a delegate for all Students related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.StudentsComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StudentsComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsComparer.#ctor(GE.MyLearning.BL.StudentsColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:StudentsComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsComparer.Equals(GE.MyLearning.BL.Students,GE.MyLearning.BL.Students)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Students"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Students"/> to compare.</param>
            <param name="b">The second <c>Students</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsComparer.GetHashCode(GE.MyLearning.BL.Students)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsComparer.Compare(GE.MyLearning.BL.Students,GE.MyLearning.BL.Students)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.StudentsKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Students"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsKey.#ctor">
            <summary>
            Initializes a new instance of the StudentsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsKey.#ctor(GE.MyLearning.BL.StudentsBase)">
            <summary>
            Initializes a new instance of the StudentsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the StudentsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentsKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentsKey.StudentId">
            <summary>
            Gets or sets the StudentId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.StudentsColumn">
            <summary>
            Enumerate the Students columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsColumn.StudentId">
            <summary>
            StudentId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsColumn.UserId">
            <summary>
            UserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsColumn.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsColumn.Notes">
            <summary>
            Notes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsColumn.Studies">
            <summary>
            Studies : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsColumn.ApplyDate">
            <summary>
            ApplyDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsColumn.ApprovalofHuman">
            <summary>
            ApprovalofHuman : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentsColumn.ApproveofDate">
            <summary>
            ApproveofDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwRolePermissionBase">
            <summary>
             An object representation of the 'VW_RolePermission' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionBase._permissionId">
            <summary>
            PermissionID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionBase._permissionName">
            <summary>
            PermissionName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionBase._permissionUrl">
            <summary>
            PermissionURL : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionBase._menuId">
            <summary>
            MenuID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionBase._roleId">
            <summary>
            RoleID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionBase._roleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionBase._permissionStatus">
            <summary>
            PermissionStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionBase._roleStatus">
            <summary>
            RoleStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwRolePermissionBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwRolePermissionBase"/> instance.
            </summary>
            <param name="_permissionId"></param>
            <param name="_permissionName"></param>
            <param name="_permissionUrl"></param>
            <param name="_menuId"></param>
            <param name="_roleId"></param>
            <param name="_roleName"></param>
            <param name="_permissionStatus"></param>
            <param name="_roleStatus"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.CreateVwRolePermission(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwRolePermission"/> instance.
            </summary>
            <param name="_permissionId"></param>
            <param name="_permissionName"></param>
            <param name="_permissionUrl"></param>
            <param name="_menuId"></param>
            <param name="_roleId"></param>
            <param name="_roleName"></param>
            <param name="_permissionStatus"></param>
            <param name="_roleStatus"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.Copy">
            <summary>
              Returns a Typed VwRolePermissionBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.Equals(GE.MyLearning.BL.VwRolePermissionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwRolePermissionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.Equals(GE.MyLearning.BL.VwRolePermissionBase,GE.MyLearning.BL.VwRolePermissionBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwRolePermissionBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwRolePermissionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwRolePermissionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.GetPropertyValueByName(GE.MyLearning.BL.VwRolePermission,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermissionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.PermissionId">
            <summary>
            	Gets or Sets the PermissionID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.PermissionName">
            <summary>
            	Gets or Sets the PermissionName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.PermissionUrl">
            <summary>
            	Gets or Sets the PermissionURL property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.MenuId">
            <summary>
            	Gets or Sets the MenuID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.RoleId">
            <summary>
            	Gets or Sets the RoleID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.RoleName">
            <summary>
            	Gets or Sets the RoleName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.PermissionStatus">
            <summary>
            	Gets or Sets the PermissionStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.RoleStatus">
            <summary>
            	Gets or Sets the RoleStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwRolePermissionBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolePermissionBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwRolePermissionBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwRolePermissionColumn">
            <summary>
            Enumerate the VwRolePermission columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionColumn.PermissionId">
            <summary>
            PermissionID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionColumn.PermissionName">
            <summary>
            PermissionName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionColumn.PermissionUrl">
            <summary>
            PermissionURL : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionColumn.MenuId">
            <summary>
            MenuID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionColumn.RoleId">
            <summary>
            RoleID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionColumn.RoleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionColumn.PermissionStatus">
            <summary>
            PermissionStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolePermissionColumn.RoleStatus">
            <summary>
            RoleStatus : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EntityFactory">
            <summary>
            Entity Factory provides methods to create entity types from type names as strings.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EntityFactoryBase">
            <summary>
            Provides the core entity factory behavior.  Will create a type based on a string
            or a type and will try to auto discover which assembly this type lives in, even if it's
            not a local referenced assembly.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEntityFactory">
            <summary>
            Exposes a factory to create an entity based on a typeString and a default type.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.IEntityFactory.CreateEntity(System.String,System.Type)">
            <summary>
            Create an entity based on a string.  
            It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString">string of entity to discover and create</param>
            <param name="defaultType">if string is not found defaultType will be created.</param>
            <returns>Created IEntity object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.IEntityFactory.CreateViewEntity(System.String,System.Type)">
            <summary>
            Create a readonly entity based on a string for views.  
            It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString">string of entity to discover and create</param>
            <param name="defaultType">if string is not found defaultType will be created.</param>
            <returns>Created IEntity object</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEntityFactory.CurrentEntityAssembly">
            <summary>
            Gets the current assembly responsible for entity creation.
            </summary>
            <value>The current assembly.</value>
        </member>
        <member name="F:GE.MyLearning.BL.EntityFactoryBase.currentAssembly">
            <summary>
            The current assembly from which to attempt to create entities from.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityFactoryBase.defaultCreationalNamespace">
            <summary>
            This will create entities by default if not found in the current assembly
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityFactoryBase.internalTypeCache">
            <summary>
            This provides a cache of already discovered types, so that there is minimal performance hit after first lookup.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityFactoryBase.syncRoot">
            <summary>
            A synchronization object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityFactoryBase.currentEntityAssemblyNamespace">
            <summary>
            This is the namespace for the currentAssembly property
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.CreateEntity(System.String,System.Type)">
            <summary>
            Create an entity based on a string.
            It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString">string of entity to discover and create</param>
            <param name="defaultType">if string is not found defaultType will be created.</param>
            <returns>Created IEntity object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.CreateViewEntity(System.String,System.Type)">
            <summary>
            Create a view entity based on a string.
            It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString">string of entity to discover and create</param>
            <param name="defaultType">if string is not found defaultType will be created.</param>
            <returns>Created object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.Create(System.String)">
            <summary>
            Create an entity based on a string.  It will autodiscover the type based on
            based on any information we can gather.
            </summary>
            <param name="typeString">string of entity to discover and create</param>
            <returns>created IEntity object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.Create``1">
            <summary>
            Create an entity of generic type T
            </summary>
            <returns>T</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.Create(System.String,System.Type)">
            <summary>
            Create an entity based on a string.  It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString"></param>
            <param name="defaultType"></param>
            <returns>IEntity</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.Create(System.Type)">
            <summary>
            Creates an <see cref="T:GE.MyLearning.BL.IEntity"/> object and begins tracking on the object.
            </summary>
            <param name="type">known type to create</param>
            <returns>created IEntity object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.CreateReadOnlyEntity(System.String,System.Type)">
            <summary>
            Create an entity based on a string from a view.  It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString"></param>
            <param name="defaultType"></param>
            <returns>Object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.CreateReadOnlyEntity(System.Type)">
            <summary>
            Creates an view object.
            </summary>
            <param name="type">known type to create</param>
            <returns>created view ReadOnlyEntity entity object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.CoreCreate(System.String,System.Type)">
            <summary>
            Create an entity based on a string.  It will autodiscover the type based on any information we can gather.
            </summary>
            <param name="typeString"></param>
            <param name="defaultType"></param>
            <returns>object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.CoreCreate(System.Type)">
            <summary>
            Creates an object and begins .
            </summary>
            <param name="type">known type to create</param>
            <returns>created object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.ResolveType(System.String)">
            <summary>
            Resolves a type based on a string.  It will attempt to Auto-Discover the type, 
            based on it's fullname or partial names.
            </summary>
            <param name="typeString">the string of the type to resolve</param>
            <returns>IEntity</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.ResolveType(System.String,System.String)">
            <summary>
            Resolves a type based on a string.  It will attempt to Auto-Discover the type, 
            based on it's fullname or partial names.
            </summary>
            <param name="typeString">the string of the type to resolve</param>
            <param name="defaultNamespace">the string of the type to resolve</param>
            <returns>IEntity</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.GetClassNameFromString(System.String)">
            <summary>
            Parses a string and gets the class name from a qualified name, based on [Type, Assembly]
            </summary>
            <param name="typeString"></param>
            <example>
                MyNamespace.MyType, MyNamespace
            </example>
            <returns>string of the qualified classname</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.GetAssemblyNameFromString(System.String)">
            <summary>
            Parses a string and gets the class name from a qualified name, based on [Type, Assembly]
            </summary>
            <param name="typeString"></param>
            <example>
                MyNamespace.MyType, MyNamespace
            </example>
            <returns>string of the qualified Assembly Name</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.FlushTypeCache">
            <summary>
            Flushes the Internal Type Cache
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.OnEntityCreating(System.Type)">
            <summary>
            Used to fire the event just before an entity is creating.
            </summary>
            <param name="type">The type.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.OnEntityCreated(GE.MyLearning.BL.IEntity,System.Type)">
            <summary>
            Used to fire the an event when the entity has just been created.
            </summary>
            <param name="entity">The entity.</param>
            <param name="type">The type.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EntityFactoryBase.EntityCreating">
            <summary>
            Exposes an Event which fires when an Entity is about to be created.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EntityFactoryBase.EntityCreated">
            <summary>
            Exposes an Event which fires when an Entity has been created.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EntityFactoryBase.CurrentEntityAssembly">
            <summary>
            Gets the current assembly.
            </summary>
            <value>The current assembly.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityFactoryBase.CurrentEntityAssemblyNamespace">
            <summary>
            Gets the current entity assembly namespace to discover types from.
            </summary>
            <value>The current assembly.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EntityFactoryBase.EntityCreatingEventHandler">
            <summary>
            A delegate to handle <see cref="E:GE.MyLearning.BL.EntityFactoryBase.EntityCreating"/> events
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EntityFactoryBase.EntityCreatedEventHandler">
            <summary>
            A delegate to handle <see cref="E:GE.MyLearning.BL.EntityFactoryBase.EntityCreated"/> events
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EntityFactoryBase.EntityEventArgs">
            <summary>
            Used to suppliment information for the EntityCreating and EntityCreated events.
            </summary>
            <remarks>
            The EntityCreating and EntityCreated events occur when an Entity is about to be created,
            or just after an Entity is created.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactoryBase.EntityEventArgs.#ctor(GE.MyLearning.BL.IEntity,System.Type)">
            <summary>
            Initalizes a new Instance of the ComponentEntityEventArgs class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="type">The type.</param>
        </member>
        <member name="P:GE.MyLearning.BL.EntityFactoryBase.EntityEventArgs.Entity">
            <summary>
            The entity that is about to be created or has just been created.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityFactoryBase.EntityEventArgs.CreationalType">
            <summary>
            Gets the type of the entity to be created.
            </summary>
            <value>The type of the creational.</value>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFactory.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.EntityFactory"/> class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EntityState">
            <summary>
            List of possible state for an entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityState.Unchanged">
            <summary>
            Entity is unchanged
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityState.Added">
            <summary>
            Entity is new
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityState.Changed">
            <summary>
            Entity has been modified
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EntityState.Deleted">
            <summary>
            Entity has been deleted
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeCourses">
            <summary>
             An object representation of the 'DegreeCourses' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.DegreeCoursesBase">
            <summary>
             An object representation of the 'DegreeCourses' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IDegreeCourses">
            <summary>
            	The data structure representation of the 'DegreeCourses' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IDegreeCourses.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.DegreeCourseId">
            <summary>			
            DegreeCourseID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "DegreeCourses"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.CourseStyle">
            <summary>
            CourseStyle : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.CreditHour">
            <summary>
            CreditHour : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeCourses.IsRequiredCourse">
            <summary>
            IsRequiredCourse : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.DegreeCoursesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.DegreeCoursesBase"/> instance.
            </summary>
            <param name="_courseName"></param>
            <param name="_courseStyle"></param>
            <param name="_courseId"></param>
            <param name="_description"></param>
            <param name="_creditHour"></param>
            <param name="_createUserId"></param>
            <param name="_createTime"></param>
            <param name="_status"></param>
            <param name="_degreeId"></param>
            <param name="_isRequiredCourse"></param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.CreateDegreeCourses(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.DateTime,System.Int32,System.Int32,System.Int32)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.DegreeCourses"/> instance.
            </summary>
            <param name="_courseName"></param>
            <param name="_courseStyle"></param>
            <param name="_courseId"></param>
            <param name="_description"></param>
            <param name="_creditHour"></param>
            <param name="_createUserId"></param>
            <param name="_createTime"></param>
            <param name="_status"></param>
            <param name="_degreeId"></param>
            <param name="_isRequiredCourse"></param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed DegreeCourses Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.Copy">
            <summary>
              Returns a Typed DegreeCourses Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.DeepCopy">
            <summary>
              Returns a Typed DegreeCourses Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.IsPropertyChanged(GE.MyLearning.BL.DegreeCoursesColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.GetOriginalEntity">
            <summary>
              Returns a DegreeCourses Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.DegreeCoursesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.DegreeCoursesBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.Equals(GE.MyLearning.BL.DegreeCoursesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.DegreeCoursesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.ValueEquals(GE.MyLearning.BL.DegreeCoursesBase,GE.MyLearning.BL.DegreeCoursesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.DegreeCoursesBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.DegreeCoursesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.DegreeCoursesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.OnColumnChanging(GE.MyLearning.BL.DegreeCoursesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreeCoursesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreeCoursesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.OnColumnChanged(GE.MyLearning.BL.DegreeCoursesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreeCoursesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreeCoursesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.OnColumnChanging(GE.MyLearning.BL.DegreeCoursesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreeCoursesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreeCoursesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.OnColumnChanged(GE.MyLearning.BL.DegreeCoursesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreeCoursesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreeCoursesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.DegreeCoursesBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DegreeCoursesBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.DegreeCourseId">
            <summary>
            	Gets or sets the DegreeCourseId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.CourseName">
            <summary>
            	Gets or sets the CourseName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.CourseStyle">
            <summary>
            	Gets or sets the CourseStyle property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCourseStyleNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.CourseId">
            <summary>
            	Gets or sets the CourseId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.CreditHour">
            <summary>
            	Gets or sets the CreditHour property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCreditHourNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.CreateUserId">
            <summary>
            	Gets or sets the CreateUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.CreateTime">
            <summary>
            	Gets or sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.DegreeId">
            <summary>
            	Gets or sets the DegreeId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.IsRequiredCourse">
            <summary>
            	Gets or sets the IsRequiredCourse property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DegreeCoursesBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DegreeCoursesBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeCoursesBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData">
            <summary>
            	The data structure representation of the 'DegreeCourses' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.DegreeCourseId">
            <summary>			
            DegreeCourseID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "DegreeCourses"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.CourseStyle">
            <summary>
            CourseStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.CreditHour">
            <summary>
            CreditHour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.IsRequiredCourse">
            <summary>
            IsRequiredCourse : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesBase.DegreeCoursesEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCourses.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.DegreeCourses"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.SysLog">
            <summary>
             An object representation of the 'SysLog' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.SysLog.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.SysLog"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ICallRoles">
            <summary>
            	The data structure representation of the 'CallRoles' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ICallRoles.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ICallRoles.CallRoleId">
            <summary>			
            CallRoleID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "CallRoles"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.ICallRoles.CallUserId">
            <summary>
            CallUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICallRoles.TocallUserId">
            <summary>
            TocallUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICallRoles.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ICallRoles.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstituteDegreeStudentsBase">
            <summary>
             An object representation of the 'VW_InstituteDegreeStudents' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._instituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._degreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._degreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._instituteId">
            <summary>
            InstituteId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._studentId">
            <summary>
            StudentID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._studies">
            <summary>
            studies : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._instituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._createTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._notes">
            <summary>
            Notes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudentsBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.#ctor(System.String,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Int32,System.String,System.Int32,System.Int32,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudentsBase"/> instance.
            </summary>
            <param name="_instituteName"></param>
            <param name="_degreeId"></param>
            <param name="_degreeName"></param>
            <param name="_instituteId"></param>
            <param name="_credithour"></param>
            <param name="_studentId"></param>
            <param name="_userId"></param>
            <param name="_status"></param>
            <param name="_studies"></param>
            <param name="_instituteDean"></param>
            <param name="_createTime"></param>
            <param name="_notes"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.CreateVwInstituteDegreeStudents(System.String,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Int32,System.String,System.Int32,System.Int32,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudents"/> instance.
            </summary>
            <param name="_instituteName"></param>
            <param name="_degreeId"></param>
            <param name="_degreeName"></param>
            <param name="_instituteId"></param>
            <param name="_credithour"></param>
            <param name="_studentId"></param>
            <param name="_userId"></param>
            <param name="_status"></param>
            <param name="_studies"></param>
            <param name="_instituteDean"></param>
            <param name="_createTime"></param>
            <param name="_notes"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.Copy">
            <summary>
              Returns a Typed VwInstituteDegreeStudentsBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.Equals(GE.MyLearning.BL.VwInstituteDegreeStudentsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudentsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.Equals(GE.MyLearning.BL.VwInstituteDegreeStudentsBase,GE.MyLearning.BL.VwInstituteDegreeStudentsBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudentsBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudentsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudentsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.GetPropertyValueByName(GE.MyLearning.BL.VwInstituteDegreeStudents,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.InstituteName">
            <summary>
            	Gets or Sets the InstituteName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.DegreeId">
            <summary>
            	Gets or Sets the DegreeId property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.DegreeName">
            <summary>
            	Gets or Sets the DegreeName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.InstituteId">
            <summary>
            	Gets or Sets the InstituteId property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.Credithour">
            <summary>
            	Gets or Sets the Credithour property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCredithourNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.StudentId">
            <summary>
            	Gets or Sets the StudentID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.Status">
            <summary>
            	Gets or Sets the Status property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.Studies">
            <summary>
            	Gets or Sets the studies property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.InstituteDean">
            <summary>
            	Gets or Sets the InstituteDean property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.CreateTime">
            <summary>
            	Gets or Sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreateTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.Notes">
            <summary>
            	Gets or Sets the Notes property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwInstituteDegreeStudentsBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn">
            <summary>
            Enumerate the VwInstituteDegreeStudents columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.InstituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.DegreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.InstituteId">
            <summary>
            InstituteId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.Credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.StudentId">
            <summary>
            StudentID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.Studies">
            <summary>
            studies : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.InstituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeStudentsColumn.Notes">
            <summary>
            Notes : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Validation.PropertyValidatorValueAccess">
            <summary>
            Property Validator Value Access
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidatorValueAccess.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PropertyValidatorValueAccess"/> class.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidatorValueAccess.GetValue(System.Object,System.Object@,System.String@)">
            <summary>
            Gets the value.
            </summary>
            <param name="source">The source.</param>
            <param name="value">The value.</param>
            <param name="valueAccessFailureMessage">The value access failure message.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.Validation.PropertyValidatorValueAccess.Key">
            <summary>
            Gets the key.
            </summary>
            <value>The key.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EntityUtil">
            <summary>
            Provides common utility methods for interacting with objects.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetNewEntity(System.Type)">
            <summary>
            Creates a new instance of the specified type.
            </summary>
            <param name="type">The runtime type to instantiate.</param>
            <returns>An instance of the specified type.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetNewEntity(System.Type,System.Object[])">
            <summary>
            Creates a new instance of the specified type using the supplied
            constructor parameters values.
            </summary>
            <param name="type">The runtime type to instantiate.</param>
            <param name="args">The constructor parameter values.</param>
            <returns>An instance of the specified type.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetConstructor(System.Type)">
            <summary>
            Gets the default constructor for the specified type.
            </summary>
            <param name="type">The runtime type.</param>
            <returns>A <see cref="T:System.Reflection.ConstructorInfo"/> object.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetConstructor(System.Type,System.Type[])">
            <summary>
            Gets the constructor for the specified type whose parameters
            match the supplied type array.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="types">An array of constructor parameter types.</param>
            <returns>A <see cref="T:System.Reflection.ConstructorInfo"/> object.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetProperty(System.Object,System.String)">
            <summary>
            Gets a <see cref="T:System.Reflection.PropertyInfo"/> object representing the property
            belonging to the object having the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <returns>A <see cref="T:System.Reflection.PropertyInfo"/> object, or null if the object
            instance does not have a property with the specified name.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetProperty(System.Type,System.String)">
            <summary>
            Gets a <see cref="T:System.Reflection.PropertyInfo"/> object representing the property
            belonging to the runtime type having the specified name.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="propertyName">The property name.</param>
            <returns>A <see cref="T:System.Reflection.PropertyInfo"/> object, or null if the runtime
            type does not have a property with the specified name.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetMethod(System.Object,System.String)">
            <summary>
            Gets a <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            belonging to the object having the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="methodName">The method name.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object, or null if the object
            instance does not have a method with the specified name.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetMethod(System.Object,System.String,System.Type[])">
            <summary>
            Gets a <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            belonging to the object having the specified name and whose
            parameters match the specified types.
            </summary>
            <param name="item">An object instance.</param>
            <param name="methodName">The method name.</param>
            <param name="types">The parameter types.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object, or null if the object
            instance does not have a method with the specified name.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetMethod(System.Type,System.String)">
            <summary>
            Gets a <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            belonging to the runtime type having the specified name.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="methodName">The method name.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object, or null if the runtime
            type does not have a method with the specified name.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetMethod(System.Type,System.String,System.Type[])">
            <summary>
            Gets a <see cref="T:System.Reflection.MethodInfo"/> object representing the method
            belonging to the runtime type having the specified name and whose
            parameters match the specified types.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="methodName">The method name.</param>
            <param name="types">The parameter types.</param>
            <returns>A <see cref="T:System.Reflection.MethodInfo"/> object, or null if the runtime
            type does not have a method with the specified name.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.InvokeMethod(System.Object,System.String)">
            <summary>
            Invokes the specified method on the object using reflection.
            </summary>
            <param name="entity">An object instance.</param>
            <param name="methodName">The method name.</param>
            <returns>The result of the method invocation.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            Invokes the specified method on the object using reflection.
            Passes the supplied arguments as method parameters.
            </summary>
            <param name="entity">An object instance.</param>
            <param name="methodName">The method name.</param>
            <param name="args">The method parameters.</param>
            <returns>The result of the method invocation.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.InvokeMethod(System.Object,System.String,System.Object[],System.Type[])">
            <summary>
            Invokes the specified method on the object using reflection.
            Passes the supplied arguments as method parameters.
            </summary>
            <param name="entity">An object instance.</param>
            <param name="methodName">The method name.</param>
            <param name="args">The method parameters.</param>
            <param name="types">The method parameter types.</param>
            <returns>The result of the method invocation.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetType(System.String)">
            <summary>
            Gets the System.Type with the specified name.
            </summary>
            <param name="typeName">The name of the type to get.</param>
            <returns>The System.Type with the specified name, if found; otherwise, null.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetTypes(System.Object[])">
            <summary>
            Gets an array of System.Type objects which match the specified objects.
            NOTE: this method will throw an exception if any of the values held
            within the args array are null.
            </summary>
            <param name="args">An array of objects.</param>
            <returns>An array of System.Type objects.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetPropertyValue(System.Object,System.String)">
            <summary>
            Gets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetPropertyValue(System.Object,System.String,System.Reflection.PropertyInfo@)">
            <summary>
            Gets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="property">A reference to the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetStaticPropertyValue(System.Type,System.String)">
            <summary>
            Gets the value of the static property with the specified name.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="propertyName">The property name.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetStaticPropertyValue(System.Type,System.String,System.Reflection.PropertyInfo@)">
            <summary>
            Gets the value of the static property with the specified name.
            </summary>
            <param name="type">The runtime type.</param>
            <param name="propertyName">The property name.</param>
            <param name="property">A reference to the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.SetPropertyValue(System.Object,System.String,System.Object,System.Boolean)">
            <summary>
            Sets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <param name="convertBlankToNull">Boolean indicating whether empty strings should be converted to null values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.SetPropertyValue(System.Object,System.String,System.Object,System.Reflection.PropertyInfo@)">
            <summary>
            Sets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <param name="property">A reference to the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.SetPropertyValue(System.Object,System.String,System.Object,System.Reflection.PropertyInfo@,System.Boolean)">
            <summary>
            Sets the value of the property with the specified name.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <param name="property">A reference to the <see cref="T:System.Reflection.PropertyInfo"/> object.</param>
            <param name="convertBlankToNull">Boolean indicating whether empty strings should be converted to null values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.SetEntityKeyValue(System.Object,System.String)">
            <summary>
            Sets the value of the property with the specified name to the value
            returned by the Guid.NewGuid() method.
            </summary>
            <param name="entity">An object instance.</param>
            <param name="entityKeyName">The property name.</param>
            <returns>The property value.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.SetEntityValues(System.Object,System.Collections.IDictionary)">
            <summary>
            Sets the properties of the specified entity based on the
            name/value pairs found in the specified collection.
            </summary>
            <param name="entity">The instance of an object to set the properties on.</param>
            <param name="values">An instance of System.Collections.IDictionary containing the name/value pairs.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.InitEntityDateTimeValues(System.Object,System.String[])">
            <summary>
            Initializes the properties specified in propertyNames
            with the value of DateTime.Now for the specified entity.
            </summary>
            <param name="entity">The instance of an object to set the properties on.</param>
            <param name="propertyNames">The list of property names to initialize.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.IsPropertyValueEqual(System.Object,System.String,System.Object)">
            <summary>
            Determines if the property with the specified name equals the specified value.
            </summary>
            <param name="item">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <returns>True if the property value matches the specified value; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.ChangeType(System.Object,System.Type)">
            <summary>
            Converts the specified value to the specified type.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="conversionType">A System.Type to convert to.</param>
            <returns>The results of the conversion.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.ChangeType(System.Object,System.Type,System.Boolean)">
            <summary>
            Converts the specified value to the specified type.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="conversionType">A System.Type to convert to.</param>
            <param name="convertBlankToNull">A value indicating whether to treat
            empty string objects as null values.</param>
            <returns>The results of the conversion.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.ChangeGenericType(System.Object,System.Type)">
            <summary>
            Converts the specified value to the specified generic type.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="conversionType">A System.Type to convert to.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.ChangeGenericType(System.Object,System.Type,System.Boolean)">
            <summary>
            Converts the specified value to the specified generic type.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="conversionType">A System.Type to convert to.</param>
            <param name="convertBlankToNull">A value indicating whether to treat
            empty string objects as null values.</param>
            <returns>The results of the conversion.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.MakeGenericType(System.Type,System.Type[])">
            <summary>
            Creates a reference to a generic type using the specified type definition
            and the supplied type arguments.
            </summary>
            <param name="typeDefinition">A generic type definition.</param>
            <param name="typeArguments">An array of System.Type arguments.</param>
            <returns>A System.Type representing the generic type.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetNewGenericEntity(System.Type,System.Type[],System.Object[])">
            <summary>
            Creates a new instance of the specified generic type.
            </summary>
            <param name="typeDefinition">A generic type definition.</param>
            <param name="typeArguments">An array of System.Type arguments.</param>
            <param name="args">An array of constructor parameters values.</param>
            <returns>An instance of the generic type.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetNewGenericEntity(System.Type)">
            <summary>
            Creates a new instance of the specified generic type.
            </summary>
            <param name="genericType">The runtime type.</param>
            <returns>An instance of the generic type.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetNewGenericEntity(System.Type,System.Object[])">
            <summary>
            Creates a new instance of the specified generic type.
            </summary>
            <param name="genericType">The runtime type.</param>
            <param name="args">An array of constructor parameters values.</param>
            <returns>An instance of the generic type.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.HasEntities(System.Collections.IList)">
            <summary>
            Gets a value indicating whether the specified list contains any items.
            </summary>
            <param name="entities">A collection of objects.</param>
            <returns>True if the collection is not null and contains at least
            one item; otherwise false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetEntity(System.Collections.IList,System.String,System.Object)">
            <summary>
            Gets the item within entityList whose property value matches the specifed value.
            </summary>
            <param name="entities">A collection of objects.</param>
            <param name="propertyName">The property name.</param>
            <param name="propertyValue">The property value.</param>
            <returns>The object whose property value matches the specified value.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetEntity(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Gets the item within entityList at the position specified by index.
            </summary>
            <param name="entityList">The collection of business objects.</param>
            <param name="index">The position within entityList that contains the current item.</param>
            <returns>The current business object.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetEntityList(System.Object,System.String)">
            <summary>
            Gets the value of the property with the specified name and returns
            it as a collection of objects.
            </summary>
            <param name="entity">An object instance.</param>
            <param name="propertyName">The property name.</param>
            <returns>A collection of objects.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetEntityList(System.Object)">
            <summary>
            Converts the specified object into a collection of objects.
            </summary>
            <param name="entityList">An object instance.</param>
            <returns>A collection of objects.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.Add(System.Collections.IList,System.Object)">
            <summary>
            Adds the specified object to the collection of objects.
            </summary>
            <param name="list">A collection of objects.</param>
            <param name="item">The obejct to add.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.Remove(System.Collections.IList,System.Object)">
            <summary>
            Removes the specified object from the collection of objects.
            </summary>
            <param name="list">A collection of objects.</param>
            <param name="item">The object to remove.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GuidTryParse(System.String,System.Guid@)">
            <summary>
            Converts the string representation of a Guid to its Guid 
            equivalent. A return value indicates whether the operation 
            succeeded. 
            </summary>
            <param name="s">A string containing a Guid to convert.</param>
            <param name="result">
            When this method returns, contains the Guid value equivalent to 
            the Guid contained in <paramref name="s"/>, if the conversion 
            succeeded, or <see cref="F:System.Guid.Empty"/> if the conversion failed. 
            The conversion fails if the <paramref name="s"/> parameter is a 
            <see langword="null"/> reference (<see langword="Nothing"/> in 
            Visual Basic), or is not of the correct format. 
            </param>
            <value>
            <see langword="true"/> if <paramref name="s"/> was converted 
            successfully; otherwise, <see langword="false"/>.
            </value>
            <exception cref="T:System.ArgumentNullException">
                   Thrown if <pararef name="s"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:GE.MyLearning.BL.EntityUtil.GetTypeNames(System.Type[])">
            <summary>Outputs a string containing the type names, delimited by ", "</summary>
            <param name="types" type="System.Type[]">
                <para>The types to show.</para>
            </param>
            <returns>A string value...</returns>
        </member>
        <member name="T:GE.MyLearning.BL.IVuRights">
            <summary>
            	The data structure representation of the 'VU_rights' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuRights.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRights.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_rights"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRights.Rights">
            <summary>
            rights : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRights.Shuoming">
            <summary>
            shuoming : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoredescriptionBase">
            <summary>
             An object representation of the 'evl_scoredescription' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlScoredescription">
            <summary>
            	The data structure representation of the 'evl_scoredescription' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlScoredescription.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScoredescription.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_scoredescription"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScoredescription.ScoreLevel">
            <summary>
            ScoreLevel : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScoredescription.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlScoredescriptionBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlScoredescriptionBase"/> instance.
            </summary>
            <param name="_scoreLevel"></param>
            <param name="_description"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.CreateEvlScoredescription(System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> instance.
            </summary>
            <param name="_scoreLevel"></param>
            <param name="_description"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlScoredescription Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.Copy">
            <summary>
              Returns a Typed EvlScoredescription Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.DeepCopy">
            <summary>
              Returns a Typed EvlScoredescription Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.IsPropertyChanged(GE.MyLearning.BL.EvlScoredescriptionColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.GetOriginalEntity">
            <summary>
              Returns a EvlScoredescription Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlScoredescriptionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlScoredescriptionBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.Equals(GE.MyLearning.BL.EvlScoredescriptionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlScoredescriptionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.ValueEquals(GE.MyLearning.BL.EvlScoredescriptionBase,GE.MyLearning.BL.EvlScoredescriptionBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlScoredescriptionBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlScoredescriptionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlScoredescriptionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.OnColumnChanging(GE.MyLearning.BL.EvlScoredescriptionColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlScoredescriptionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlScoredescriptionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.OnColumnChanged(GE.MyLearning.BL.EvlScoredescriptionColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlScoredescriptionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlScoredescriptionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.OnColumnChanging(GE.MyLearning.BL.EvlScoredescriptionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlScoredescriptionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlScoredescriptionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.OnColumnChanged(GE.MyLearning.BL.EvlScoredescriptionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlScoredescriptionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlScoredescriptionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlScoredescriptionBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlScoredescriptionBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.ScoreLevel">
            <summary>
            	Gets or sets the ScoreLevel property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsScoreLevelNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlScoredescriptionBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlScoredescriptionBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoredescriptionBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoredescriptionBase.EvlScoredescriptionEntityData">
            <summary>
            	The data structure representation of the 'evl_scoredescription' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionBase.EvlScoredescriptionEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_scoredescription"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionBase.EvlScoredescriptionEntityData.ScoreLevel">
            <summary>
            ScoreLevel : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionBase.EvlScoredescriptionEntityData.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.EvlScoredescriptionEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionBase.EvlScoredescriptionEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionBase.EvlScoredescriptionEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoredescriptionEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionEventArgs.#ctor(GE.MyLearning.BL.EvlScoredescriptionColumn)">
            <summary>
             Initalizes a new Instance of the EvlScoredescriptionEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionEventArgs.#ctor(GE.MyLearning.BL.EvlScoredescriptionColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlScoredescriptionEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionEventArgs.Column">
            <summary>
             The EvlScoredescriptionColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlScoredescriptionColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoredescriptionEventHandler">
            <summary>
             Define a delegate for all EvlScoredescription related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoredescriptionComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlScoredescriptionComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionComparer.#ctor(GE.MyLearning.BL.EvlScoredescriptionColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlScoredescriptionComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionComparer.Equals(GE.MyLearning.BL.EvlScoredescription,GE.MyLearning.BL.EvlScoredescription)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlScoredescription"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlScoredescription"/> to compare.</param>
            <param name="b">The second <c>EvlScoredescription</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionComparer.GetHashCode(GE.MyLearning.BL.EvlScoredescription)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionComparer.Compare(GE.MyLearning.BL.EvlScoredescription,GE.MyLearning.BL.EvlScoredescription)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoredescriptionKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionKey.#ctor">
            <summary>
            Initializes a new instance of the EvlScoredescriptionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionKey.#ctor(GE.MyLearning.BL.EvlScoredescriptionBase)">
            <summary>
            Initializes a new instance of the EvlScoredescriptionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlScoredescriptionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescriptionKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoredescriptionKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoredescriptionColumn">
            <summary>
            Enumerate the EvlScoredescription columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionColumn.ScoreLevel">
            <summary>
            ScoreLevel : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoredescriptionColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ILearningRecordExcel">
            <summary>
            	The data structure representation of the 'LearningRecordExcel' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ILearningRecordExcel.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "LearningRecordExcel"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.Sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.Function">
            <summary>
            Function : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.StartDate">
            <summary>
            StartDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.CompletedDate">
            <summary>
            CompletedDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.Location">
            <summary>
            Location : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.Trainer">
            <summary>
            Trainer : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.Courseid">
            <summary>
            courseid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordExcel.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.InstitutesBase">
            <summary>
             An object representation of the 'Institutes' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.InstitutesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Int32)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.InstitutesBase"/> instance.
            </summary>
            <param name="_instituteId"></param>
            <param name="_instituteName"></param>
            <param name="_description"></param>
            <param name="_instituteDean"></param>
            <param name="_createtime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.CreateInstitutes(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Int32)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Institutes"/> instance.
            </summary>
            <param name="_instituteId"></param>
            <param name="_instituteName"></param>
            <param name="_description"></param>
            <param name="_instituteDean"></param>
            <param name="_createtime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Institutes Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.Copy">
            <summary>
              Returns a Typed Institutes Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.DeepCopy">
            <summary>
              Returns a Typed Institutes Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.IsPropertyChanged(GE.MyLearning.BL.InstitutesColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.GetOriginalEntity">
            <summary>
              Returns a Institutes Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.InstitutesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.InstitutesBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.Equals(GE.MyLearning.BL.InstitutesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.InstitutesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.ValueEquals(GE.MyLearning.BL.InstitutesBase,GE.MyLearning.BL.InstitutesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.InstitutesBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.InstitutesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.InstitutesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.OnColumnChanging(GE.MyLearning.BL.InstitutesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.InstitutesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.InstitutesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.OnColumnChanged(GE.MyLearning.BL.InstitutesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.InstitutesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.InstitutesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.OnColumnChanging(GE.MyLearning.BL.InstitutesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.InstitutesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.InstitutesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.OnColumnChanged(GE.MyLearning.BL.InstitutesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.InstitutesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.InstitutesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.InstitutesBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.InstitutesBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.InstituteId">
            <summary>
            	Gets or sets the InstituteId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.OriginalInstituteId">
            <summary>
            	Get the original value of the InstituteID property.
            	
            </summary>
            <remarks>This is the original value of the InstituteID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.InstituteName">
            <summary>
            	Gets or sets the InstituteName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.InstituteDean">
            <summary>
            	Gets or sets the InstituteDean property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.Createtime">
            <summary>
            	Gets or sets the Createtime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreatetimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.CreateUserId">
            <summary>
            	Gets or sets the CreateUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.InstitutesBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.InstitutesBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.InstitutesBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData">
            <summary>
            	The data structure representation of the 'Institutes' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.InstituteId">
            <summary>			
            InstituteID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Institutes"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.OriginalInstituteId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.InstituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.InstituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.Createtime">
            <summary>
            Createtime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesBase.InstitutesEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.InstitutesEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Institutes"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesEventArgs.#ctor(GE.MyLearning.BL.InstitutesColumn)">
            <summary>
             Initalizes a new Instance of the InstitutesEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesEventArgs.#ctor(GE.MyLearning.BL.InstitutesColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the InstitutesEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesEventArgs.Column">
            <summary>
             The InstitutesColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.InstitutesColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.InstitutesEventHandler">
            <summary>
             Define a delegate for all Institutes related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.InstitutesComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:InstitutesComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesComparer.#ctor(GE.MyLearning.BL.InstitutesColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:InstitutesComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesComparer.Equals(GE.MyLearning.BL.Institutes,GE.MyLearning.BL.Institutes)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Institutes"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Institutes"/> to compare.</param>
            <param name="b">The second <c>Institutes</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesComparer.GetHashCode(GE.MyLearning.BL.Institutes)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesComparer.Compare(GE.MyLearning.BL.Institutes,GE.MyLearning.BL.Institutes)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.InstitutesKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Institutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesKey.#ctor">
            <summary>
            Initializes a new instance of the InstitutesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesKey.#ctor(GE.MyLearning.BL.InstitutesBase)">
            <summary>
            Initializes a new instance of the InstitutesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the InstitutesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.InstitutesKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.InstitutesKey.InstituteId">
            <summary>
            Gets or sets the InstituteId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.InstitutesColumn">
            <summary>
            Enumerate the Institutes columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesColumn.InstituteId">
            <summary>
            InstituteId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesColumn.InstituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesColumn.InstituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesColumn.Createtime">
            <summary>
            Createtime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesColumn.CreateUserId">
            <summary>
            CreateUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.InstitutesColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IRoles">
            <summary>
            	The data structure representation of the 'Roles' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IRoles.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IRoles.RoleId">
            <summary>			
            RoleID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Roles"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IRoles.OriginalRoleId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IRoles.RoleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IRoles.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IRoles.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IRoles.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IRoles.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwDegreeCoursesBase">
            <summary>
             An object representation of the 'VW_DegreeCourses' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._degreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._degreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._degreesDescription">
            <summary>
            DegreesDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._degreeStatus">
            <summary>
            DegreeStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._degreeCourseId">
            <summary>
            DegreeCourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._courseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._courseStyle">
            <summary>
            CourseStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._courseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._degreeCoursesDescription">
            <summary>
            DegreeCoursesDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._degreeCoursesCreditHour">
            <summary>
            DegreeCoursesCreditHour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._degreeCourseStatus">
            <summary>
            DegreeCourseStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._isRequiredCourse">
            <summary>
            IsRequiredCourse : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._instituteId">
            <summary>
            InstituteId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwDegreeCoursesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.#ctor(System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Int32,System.Int32,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwDegreeCoursesBase"/> instance.
            </summary>
            <param name="_degreeId"></param>
            <param name="_degreeName"></param>
            <param name="_degreesDescription"></param>
            <param name="_credithour"></param>
            <param name="_degreeStatus"></param>
            <param name="_degreeCourseId"></param>
            <param name="_courseName"></param>
            <param name="_courseStyle"></param>
            <param name="_courseId"></param>
            <param name="_degreeCoursesDescription"></param>
            <param name="_degreeCoursesCreditHour"></param>
            <param name="_degreeCourseStatus"></param>
            <param name="_isRequiredCourse"></param>
            <param name="_instituteId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.CreateVwDegreeCourses(System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Int32,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Int32,System.Int32,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwDegreeCourses"/> instance.
            </summary>
            <param name="_degreeId"></param>
            <param name="_degreeName"></param>
            <param name="_degreesDescription"></param>
            <param name="_credithour"></param>
            <param name="_degreeStatus"></param>
            <param name="_degreeCourseId"></param>
            <param name="_courseName"></param>
            <param name="_courseStyle"></param>
            <param name="_courseId"></param>
            <param name="_degreeCoursesDescription"></param>
            <param name="_degreeCoursesCreditHour"></param>
            <param name="_degreeCourseStatus"></param>
            <param name="_isRequiredCourse"></param>
            <param name="_instituteId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.Copy">
            <summary>
              Returns a Typed VwDegreeCoursesBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.Equals(GE.MyLearning.BL.VwDegreeCoursesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwDegreeCoursesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.Equals(GE.MyLearning.BL.VwDegreeCoursesBase,GE.MyLearning.BL.VwDegreeCoursesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwDegreeCoursesBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwDegreeCoursesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwDegreeCoursesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.GetPropertyValueByName(GE.MyLearning.BL.VwDegreeCourses,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCoursesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.DegreeId">
            <summary>
            	Gets or Sets the DegreeId property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.DegreeName">
            <summary>
            	Gets or Sets the DegreeName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.DegreesDescription">
            <summary>
            	Gets or Sets the DegreesDescription property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.Credithour">
            <summary>
            	Gets or Sets the Credithour property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCredithourNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.DegreeStatus">
            <summary>
            	Gets or Sets the DegreeStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsDegreeStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.DegreeCourseId">
            <summary>
            	Gets or Sets the DegreeCourseID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.CourseName">
            <summary>
            	Gets or Sets the CourseName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.CourseStyle">
            <summary>
            	Gets or Sets the CourseStyle property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCourseStyleNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.CourseId">
            <summary>
            	Gets or Sets the CourseId property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.DegreeCoursesDescription">
            <summary>
            	Gets or Sets the DegreeCoursesDescription property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.DegreeCoursesCreditHour">
            <summary>
            	Gets or Sets the DegreeCoursesCreditHour property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsDegreeCoursesCreditHourNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.DegreeCourseStatus">
            <summary>
            	Gets or Sets the DegreeCourseStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.IsRequiredCourse">
            <summary>
            	Gets or Sets the IsRequiredCourse property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.InstituteId">
            <summary>
            	Gets or Sets the InstituteId property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwDegreeCoursesBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwDegreeCoursesBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwDegreeCoursesBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwDegreeCoursesColumn">
            <summary>
            Enumerate the VwDegreeCourses columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.DegreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.DegreesDescription">
            <summary>
            DegreesDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.Credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.DegreeStatus">
            <summary>
            DegreeStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.DegreeCourseId">
            <summary>
            DegreeCourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.CourseStyle">
            <summary>
            CourseStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.DegreeCoursesDescription">
            <summary>
            DegreeCoursesDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.DegreeCoursesCreditHour">
            <summary>
            DegreeCoursesCreditHour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.DegreeCourseStatus">
            <summary>
            DegreeCourseStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.IsRequiredCourse">
            <summary>
            IsRequiredCourse : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwDegreeCoursesColumn.InstituteId">
            <summary>
            InstituteId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Validation.PropertyValidator">
            <summary>
            Property Validator
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidator.#ctor(System.Object,System.String)">
            <summary>
            Creates an instance of PropertyValidator
            </summary>
            <param name="objectToValidate">The object to validate.</param>
            <param name="propertyName">The property for objectToValidate</param>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidator.#ctor(System.Object,System.String,System.String)">
            <summary>
            Creates an instance of PropertyValidator
            </summary>
            <param name="objectToValidate">The object to validate.</param>
            <param name="propertyName">The property for objectToValidate</param>
            <param name="ruleset">The optional ruleset to use for validation.</param>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidator.#ctor(System.Object,System.String,System.String,Microsoft.Practices.EnterpriseLibrary.Validation.ValidationSpecificationSource)">
            <summary>
            Creates an instance of PropertyValidator
            </summary>
            <param name="objectToValidate">The object to validate.</param>
            <param name="propertyName">The property for objectToValidate</param>
            <param name="ruleset">The optional ruleset to use for validation.</param>
            <param name="specificationSource">Whether to use validation rules from attributes, config file, or both.</param>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidator.GetMemberValueAccessBuilder">
            <summary>
            Gets the member value access builder.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidator.GetRawValue">
            <summary>
            Gets the raw value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidator.PerformCustomValueConversion(Microsoft.Practices.EnterpriseLibrary.Validation.Integration.ValueConvertEventArgs)">
            <summary>
            Performs the custom value conversion.
            </summary>
            <param name="e">The <see cref="T:Microsoft.Practices.EnterpriseLibrary.Validation.Integration.ValueConvertEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidator.GetValue(System.Object@,System.String@)">
            <summary>
            Gets the value.
            </summary>
            <param name="value">The value.</param>
            <param name="valueAccessFailureMessage">The value access failure message.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidator.DoValidate(System.Object,System.Object,System.String,Microsoft.Practices.EnterpriseLibrary.Validation.ValidationResults)">
            <summary>
            Does the validate.
            </summary>
            <param name="objectToValidate">The object to validate.</param>
            <param name="currentTarget">The current target.</param>
            <param name="key">The key.</param>
            <param name="validationResults">The validation results.</param>
        </member>
        <member name="P:GE.MyLearning.BL.Validation.PropertyValidator.PropertyName">
            <summary>
            Gets the property name for the object being validated.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.Validation.PropertyValidator.DefaultMessageTemplate">
            <summary>
            Gets the default message template.
            </summary>
            <value>The default message template.</value>
        </member>
        <member name="P:GE.MyLearning.BL.Validation.PropertyValidator.ProvidesCustomValueConversion">
            <summary>
            Gets a value indicating whether [provides custom value conversion].
            </summary>
            <value>
            	<c>true</c> if [provides custom value conversion]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GE.MyLearning.BL.Validation.PropertyValidator.Ruleset">
            <summary>
            Gets the ruleset.
            </summary>
            <value>The ruleset.</value>
        </member>
        <member name="P:GE.MyLearning.BL.Validation.PropertyValidator.SpecificationSource">
            <summary>
            Gets the specification source.
            </summary>
            <value>The specification source.</value>
        </member>
        <member name="P:GE.MyLearning.BL.Validation.PropertyValidator.ValidatedPropertyName">
            <summary>
            Gets the name of the validated property.
            </summary>
            <value>The name of the validated property.</value>
        </member>
        <member name="P:GE.MyLearning.BL.Validation.PropertyValidator.ValidatedType">
            <summary>
            Gets the validated type.
            </summary>
            <value>The validated type.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EntityLocator">
            <summary>
            Provides a means to weak reference and already created and untouched locate entities.
            </summary>	
        </member>
        <member name="M:GE.MyLearning.BL.EntityLocator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.EntityLocator"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityLocator.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityLocator.Contains(System.String)">
            <summary>
            Determines whether [contains] [the specified key].
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if [contains] [the specified key]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityLocator.Get(System.Object)">
            <summary>
            Gets the specified key of any object.
            </summary>
            <param name="key">The key.</param>
            <returns>object if available, else null </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityLocator.GetEntity``1(System.String)">
            <summary>
            Get's an Entity from the Tracking Locator
            </summary>
            <typeparam name="Entity">A type that implements IEntity</typeparam>
            <param name="key">locator list key to fetch, best used 
            if it's the (TypeName or TableName) + EntityKey of the this entity</param>
            <returns>Entity from Locator if available.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityLocator.GetList``1(System.String)">
            <summary>
            Get's a List of Entities from the Tracking Locator
            </summary>
            <typeparam name="EntityList"> a type that implements ListBase&lt;IEntity&gt;</typeparam>
            <param name="key">locator list key to fetch, best used 
            if it's like the criteria of the method used to populate this list
            </param>
            <returns>ListBase&lt;IEntity&gt; if available</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityLocator.ConstructKeyFromPkItems(System.Type,System.Object[])">
            <summary>
            Re-Creates the key based on primary key values.
            </summary>
            <param name="type">The type.</param>
            <param name="pkItems">The pk items.</param>
            <returns></returns>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlUsertype">
            <summary>
            	The data structure representation of the 'evl_usertype' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlUsertype.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlUsertype.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_usertype"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlUsertype.OriginalId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlUsertype.UserType">
            <summary>
            UserType : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlAssessment">
            <summary>
            	The data structure representation of the 'evl_assessment' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlAssessment.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlAssessment.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_assessment"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlAssessment.Name">
            <summary>
            name : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlAssessment.Usertype">
            <summary>
            usertype : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlAssessment.Weight">
            <summary>
            weight : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlAssessment.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Department">
            <summary>
             An object representation of the 'Department' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.Department.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Department"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuReplypost">
            <summary>
             An object representation of the 'VU_REPLYPOST' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.VuReplypostBase">
            <summary>
             An object representation of the 'VU_REPLYPOST' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuReplypost">
            <summary>
            	The data structure representation of the 'VU_REPLYPOST' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuReplypost.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Ids">
            <summary>			
            ids : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_REPLYPOST"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Id">
            <summary>
            ID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Conent">
            <summary>
            CONENT : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Replyman">
            <summary>
            REPLYMAN : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Replytime">
            <summary>
            REPLYTIME : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Tupian">
            <summary>
            tupian : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Fujian">
            <summary>
            fujian : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Icon">
            <summary>
            icon : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Catogary">
            <summary>
            catogary : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Isxingming">
            <summary>
            isxingming : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Closed">
            <summary>
            closed : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Isdescore">
            <summary>
            isdescore : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Comment">
            <summary>
            comment : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Recommend">
            <summary>
            recommend : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Classid">
            <summary>
            classid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuReplypost.Isjake">
            <summary>
            isjake : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuReplypostBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuReplypostBase"/> instance.
            </summary>
            <param name="_id"></param>
            <param name="_conent"></param>
            <param name="_replyman"></param>
            <param name="_sso"></param>
            <param name="_replytime"></param>
            <param name="_tupian"></param>
            <param name="_fujian"></param>
            <param name="_icon"></param>
            <param name="_catogary"></param>
            <param name="_isxingming"></param>
            <param name="_score"></param>
            <param name="_closed"></param>
            <param name="_isdescore"></param>
            <param name="_comment"></param>
            <param name="_recommend"></param>
            <param name="_classid"></param>
            <param name="_isjake"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.CreateVuReplypost(System.Nullable{System.Int32},System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuReplypost"/> instance.
            </summary>
            <param name="_id"></param>
            <param name="_conent"></param>
            <param name="_replyman"></param>
            <param name="_sso"></param>
            <param name="_replytime"></param>
            <param name="_tupian"></param>
            <param name="_fujian"></param>
            <param name="_icon"></param>
            <param name="_catogary"></param>
            <param name="_isxingming"></param>
            <param name="_score"></param>
            <param name="_closed"></param>
            <param name="_isdescore"></param>
            <param name="_comment"></param>
            <param name="_recommend"></param>
            <param name="_classid"></param>
            <param name="_isjake"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuReplypost Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.Copy">
            <summary>
              Returns a Typed VuReplypost Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.DeepCopy">
            <summary>
              Returns a Typed VuReplypost Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.IsPropertyChanged(GE.MyLearning.BL.VuReplypostColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.GetOriginalEntity">
            <summary>
              Returns a VuReplypost Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuReplypostBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuReplypostBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.Equals(GE.MyLearning.BL.VuReplypostBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuReplypostBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.ValueEquals(GE.MyLearning.BL.VuReplypostBase,GE.MyLearning.BL.VuReplypostBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuReplypostBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuReplypostBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuReplypostBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.OnColumnChanging(GE.MyLearning.BL.VuReplypostColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuReplypostBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuReplypostColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.OnColumnChanged(GE.MyLearning.BL.VuReplypostColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuReplypostBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuReplypostColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.OnColumnChanging(GE.MyLearning.BL.VuReplypostColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuReplypostBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuReplypostColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.OnColumnChanged(GE.MyLearning.BL.VuReplypostColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuReplypostBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuReplypostColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuReplypostBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuReplypostBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Conent">
            <summary>
            	Gets or sets the Conent property. 
            	
            </summary>
            <value>This type is ntext.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Replyman">
            <summary>
            	Gets or sets the Replyman property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Sso">
            <summary>
            	Gets or sets the Sso property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Replytime">
            <summary>
            	Gets or sets the Replytime property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsReplytimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Tupian">
            <summary>
            	Gets or sets the Tupian property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Fujian">
            <summary>
            	Gets or sets the Fujian property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Icon">
            <summary>
            	Gets or sets the Icon property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Ids">
            <summary>
            	Gets or sets the Ids property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Catogary">
            <summary>
            	Gets or sets the Catogary property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCatogaryNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Isxingming">
            <summary>
            	Gets or sets the Isxingming property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIsxingmingNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Score">
            <summary>
            	Gets or sets the Score property. 
            	
            </summary>
            <value>This type is numeric.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsScoreNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Closed">
            <summary>
            	Gets or sets the Closed property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsClosedNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Isdescore">
            <summary>
            	Gets or sets the Isdescore property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIsdescoreNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Comment">
            <summary>
            	Gets or sets the Comment property. 
            	
            </summary>
            <value>This type is text.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Recommend">
            <summary>
            	Gets or sets the Recommend property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsRecommendNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Classid">
            <summary>
            	Gets or sets the Classid property. 
            	
            </summary>
            <value>This type is char.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Isjake">
            <summary>
            	Gets or sets the Isjake property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuReplypostBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuReplypostBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuReplypostBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData">
            <summary>
            	The data structure representation of the 'VU_REPLYPOST' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Ids">
            <summary>			
            ids : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_REPLYPOST"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Id">
            <summary>
            ID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Conent">
            <summary>
            CONENT : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Replyman">
            <summary>
            REPLYMAN : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Replytime">
            <summary>
            REPLYTIME : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Tupian">
            <summary>
            tupian : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Fujian">
            <summary>
            fujian : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Icon">
            <summary>
            icon : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Catogary">
            <summary>
            catogary : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Isxingming">
            <summary>
            isxingming : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Closed">
            <summary>
            closed : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Isdescore">
            <summary>
            isdescore : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Comment">
            <summary>
            comment : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Recommend">
            <summary>
            recommend : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Classid">
            <summary>
            classid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Isjake">
            <summary>
            isjake : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostBase.VuReplypostEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypost.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuReplypost"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.PermissionEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Permission"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionEventArgs.#ctor(GE.MyLearning.BL.PermissionColumn)">
            <summary>
             Initalizes a new Instance of the PermissionEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionEventArgs.#ctor(GE.MyLearning.BL.PermissionColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the PermissionEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionEventArgs.Column">
            <summary>
             The PermissionColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.PermissionColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.PermissionEventHandler">
            <summary>
             Define a delegate for all Permission related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.PermissionComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PermissionComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionComparer.#ctor(GE.MyLearning.BL.PermissionColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:PermissionComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionComparer.Equals(GE.MyLearning.BL.Permission,GE.MyLearning.BL.Permission)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Permission"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Permission"/> to compare.</param>
            <param name="b">The second <c>Permission</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionComparer.GetHashCode(GE.MyLearning.BL.Permission)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionComparer.Compare(GE.MyLearning.BL.Permission,GE.MyLearning.BL.Permission)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.PermissionKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Permission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionKey.#ctor">
            <summary>
            Initializes a new instance of the PermissionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionKey.#ctor(GE.MyLearning.BL.PermissionBase)">
            <summary>
            Initializes a new instance of the PermissionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PermissionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.PermissionKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.PermissionKey.PermissionId">
            <summary>
            Gets or sets the PermissionId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.PermissionColumn">
            <summary>
            Enumerate the Permission columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionColumn.PermissionId">
            <summary>
            PermissionId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionColumn.PermissionName">
            <summary>
            PermissionName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionColumn.PermissionUrl">
            <summary>
            PermissionUrl : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.PermissionColumn.MenuId">
            <summary>
            MenuId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IUserGroup">
            <summary>
            	The data structure representation of the 'UserGroup' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IUserGroup.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IUserGroup.AutoId">
            <summary>			
            AutoID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "UserGroup"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IUserGroup.GroupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserGroup.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CallRolesBase">
            <summary>
             An object representation of the 'CallRoles' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.CallRolesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.#ctor(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.CallRolesBase"/> instance.
            </summary>
            <param name="_callUserId"></param>
            <param name="_tocallUserId"></param>
            <param name="_createTime"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.CreateCallRoles(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.CallRoles"/> instance.
            </summary>
            <param name="_callUserId"></param>
            <param name="_tocallUserId"></param>
            <param name="_createTime"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed CallRoles Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.Copy">
            <summary>
              Returns a Typed CallRoles Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.DeepCopy">
            <summary>
              Returns a Typed CallRoles Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.IsPropertyChanged(GE.MyLearning.BL.CallRolesColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.GetOriginalEntity">
            <summary>
              Returns a CallRoles Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.CallRolesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.CallRolesBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.Equals(GE.MyLearning.BL.CallRolesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.CallRolesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.ValueEquals(GE.MyLearning.BL.CallRolesBase,GE.MyLearning.BL.CallRolesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.CallRolesBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.CallRolesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.CallRolesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.OnColumnChanging(GE.MyLearning.BL.CallRolesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CallRolesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CallRolesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.OnColumnChanged(GE.MyLearning.BL.CallRolesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CallRolesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CallRolesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.OnColumnChanging(GE.MyLearning.BL.CallRolesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CallRolesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CallRolesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.OnColumnChanged(GE.MyLearning.BL.CallRolesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.CallRolesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.CallRolesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.CallRolesBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CallRolesBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.CallRoleId">
            <summary>
            	Gets or sets the CallRoleId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.CallUserId">
            <summary>
            	Gets or sets the CallUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.TocallUserId">
            <summary>
            	Gets or sets the TocallUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.CreateTime">
            <summary>
            	Gets or sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreateTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CallRolesBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.CallRolesBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CallRolesBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.CallRolesBase.CallRolesEntityData">
            <summary>
            	The data structure representation of the 'CallRoles' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesBase.CallRolesEntityData.CallRoleId">
            <summary>			
            CallRoleID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "CallRoles"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesBase.CallRolesEntityData.CallUserId">
            <summary>
            CallUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesBase.CallRolesEntityData.TocallUserId">
            <summary>
            TocallUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesBase.CallRolesEntityData.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesBase.CallRolesEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.CallRolesEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesBase.CallRolesEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesBase.CallRolesEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.CallRolesEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.CallRoles"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesEventArgs.#ctor(GE.MyLearning.BL.CallRolesColumn)">
            <summary>
             Initalizes a new Instance of the CallRolesEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesEventArgs.#ctor(GE.MyLearning.BL.CallRolesColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CallRolesEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesEventArgs.Column">
            <summary>
             The CallRolesColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.CallRolesColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.CallRolesEventHandler">
            <summary>
             Define a delegate for all CallRoles related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CallRolesComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CallRolesComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesComparer.#ctor(GE.MyLearning.BL.CallRolesColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CallRolesComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesComparer.Equals(GE.MyLearning.BL.CallRoles,GE.MyLearning.BL.CallRoles)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.CallRoles"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.CallRoles"/> to compare.</param>
            <param name="b">The second <c>CallRoles</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesComparer.GetHashCode(GE.MyLearning.BL.CallRoles)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesComparer.Compare(GE.MyLearning.BL.CallRoles,GE.MyLearning.BL.CallRoles)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.CallRolesKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.CallRoles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesKey.#ctor">
            <summary>
            Initializes a new instance of the CallRolesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesKey.#ctor(GE.MyLearning.BL.CallRolesBase)">
            <summary>
            Initializes a new instance of the CallRolesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the CallRolesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CallRolesKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CallRolesKey.CallRoleId">
            <summary>
            Gets or sets the CallRoleId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CallRolesColumn">
            <summary>
            Enumerate the CallRoles columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesColumn.CallRoleId">
            <summary>
            CallRoleId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesColumn.CallUserId">
            <summary>
            CallUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesColumn.TocallUserId">
            <summary>
            TocallUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CallRolesColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwTrainingUserLogBase">
            <summary>
             An object representation of the 'VW_TrainingUserLog' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._trainUserId">
            <summary>
            TrainUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._groupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._trainingUserType">
            <summary>
            TrainingUserType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._trainUserStatus">
            <summary>
            TrainUserStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._trainAuditingStatus">
            <summary>
            TrainAuditingStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._trainAuditingMan">
            <summary>
            TrainAuditingMan : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._trainAuditingDate">
            <summary>
            TrainAuditingDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._createTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._trainAuditingDescription">
            <summary>
            TrainAuditingDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._trainingFinishTime">
            <summary>
            TrainingFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._testFinishTime">
            <summary>
            TestFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._investigationFinishTime">
            <summary>
            InvestigationFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._studyFinishTime">
            <summary>
            StudyFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._trainingLogId">
            <summary>
            TrainingLogID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._logBeginTime">
            <summary>
            LogBeginTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._logEndTime">
            <summary>
            LogEndTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._trainingTime">
            <summary>
            TrainingTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._machineIp">
            <summary>
            MachineIP : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._sessionId">
            <summary>
            SessionID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._courseWareId">
            <summary>
            CourseWareID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._courseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwTrainingUserLogBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.#ctor(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int64,System.DateTime,System.DateTime,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwTrainingUserLogBase"/> instance.
            </summary>
            <param name="_trainUserId"></param>
            <param name="_userId"></param>
            <param name="_groupId"></param>
            <param name="_trainingUserType"></param>
            <param name="_trainUserStatus"></param>
            <param name="_trainAuditingStatus"></param>
            <param name="_trainAuditingMan"></param>
            <param name="_trainAuditingDate"></param>
            <param name="_createTime"></param>
            <param name="_trainAuditingDescription"></param>
            <param name="_trainingFinishTime"></param>
            <param name="_testFinishTime"></param>
            <param name="_investigationFinishTime"></param>
            <param name="_studyFinishTime"></param>
            <param name="_trainingLogId"></param>
            <param name="_logBeginTime"></param>
            <param name="_logEndTime"></param>
            <param name="_trainingTime"></param>
            <param name="_machineIp"></param>
            <param name="_sessionId"></param>
            <param name="_courseWareId"></param>
            <param name="_courseId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.CreateVwTrainingUserLog(System.Int32,System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int64,System.DateTime,System.DateTime,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwTrainingUserLog"/> instance.
            </summary>
            <param name="_trainUserId"></param>
            <param name="_userId"></param>
            <param name="_groupId"></param>
            <param name="_trainingUserType"></param>
            <param name="_trainUserStatus"></param>
            <param name="_trainAuditingStatus"></param>
            <param name="_trainAuditingMan"></param>
            <param name="_trainAuditingDate"></param>
            <param name="_createTime"></param>
            <param name="_trainAuditingDescription"></param>
            <param name="_trainingFinishTime"></param>
            <param name="_testFinishTime"></param>
            <param name="_investigationFinishTime"></param>
            <param name="_studyFinishTime"></param>
            <param name="_trainingLogId"></param>
            <param name="_logBeginTime"></param>
            <param name="_logEndTime"></param>
            <param name="_trainingTime"></param>
            <param name="_machineIp"></param>
            <param name="_sessionId"></param>
            <param name="_courseWareId"></param>
            <param name="_courseId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.Copy">
            <summary>
              Returns a Typed VwTrainingUserLogBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.Equals(GE.MyLearning.BL.VwTrainingUserLogBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwTrainingUserLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.Equals(GE.MyLearning.BL.VwTrainingUserLogBase,GE.MyLearning.BL.VwTrainingUserLogBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwTrainingUserLogBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwTrainingUserLogBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwTrainingUserLogBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.GetPropertyValueByName(GE.MyLearning.BL.VwTrainingUserLog,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLogBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TrainUserId">
            <summary>
            	Gets or Sets the TrainUserID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.GroupId">
            <summary>
            	Gets or Sets the GroupID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TrainingUserType">
            <summary>
            	Gets or Sets the TrainingUserType property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TrainUserStatus">
            <summary>
            	Gets or Sets the TrainUserStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TrainAuditingStatus">
            <summary>
            	Gets or Sets the TrainAuditingStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTrainAuditingStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TrainAuditingMan">
            <summary>
            	Gets or Sets the TrainAuditingMan property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TrainAuditingDate">
            <summary>
            	Gets or Sets the TrainAuditingDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTrainAuditingDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.CreateTime">
            <summary>
            	Gets or Sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreateTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TrainAuditingDescription">
            <summary>
            	Gets or Sets the TrainAuditingDescription property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TrainingFinishTime">
            <summary>
            	Gets or Sets the TrainingFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTrainingFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TestFinishTime">
            <summary>
            	Gets or Sets the TestFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTestFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.InvestigationFinishTime">
            <summary>
            	Gets or Sets the InvestigationFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsInvestigationFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.StudyFinishTime">
            <summary>
            	Gets or Sets the StudyFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsStudyFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TrainingLogId">
            <summary>
            	Gets or Sets the TrainingLogID property. 
            	
            </summary>
            <value>This type is bigint</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.LogBeginTime">
            <summary>
            	Gets or Sets the LogBeginTime property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.LogEndTime">
            <summary>
            	Gets or Sets the LogEndTime property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.TrainingTime">
            <summary>
            	Gets or Sets the TrainingTime property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.MachineIp">
            <summary>
            	Gets or Sets the MachineIP property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.SessionId">
            <summary>
            	Gets or Sets the SessionID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.CourseWareId">
            <summary>
            	Gets or Sets the CourseWareID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.CourseId">
            <summary>
            	Gets or Sets the CourseID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwTrainingUserLogBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserLogBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwTrainingUserLogBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwTrainingUserLogColumn">
            <summary>
            Enumerate the VwTrainingUserLog columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TrainUserId">
            <summary>
            TrainUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.GroupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TrainingUserType">
            <summary>
            TrainingUserType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TrainUserStatus">
            <summary>
            TrainUserStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TrainAuditingStatus">
            <summary>
            TrainAuditingStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TrainAuditingMan">
            <summary>
            TrainAuditingMan : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TrainAuditingDate">
            <summary>
            TrainAuditingDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TrainAuditingDescription">
            <summary>
            TrainAuditingDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TrainingFinishTime">
            <summary>
            TrainingFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TestFinishTime">
            <summary>
            TestFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.InvestigationFinishTime">
            <summary>
            InvestigationFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.StudyFinishTime">
            <summary>
            StudyFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TrainingLogId">
            <summary>
            TrainingLogID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.LogBeginTime">
            <summary>
            LogBeginTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.LogEndTime">
            <summary>
            LogEndTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.TrainingTime">
            <summary>
            TrainingTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.MachineIp">
            <summary>
            MachineIP : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.SessionId">
            <summary>
            SessionID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.CourseWareId">
            <summary>
            CourseWareID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserLogColumn.CourseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwMenuPermissionBase">
            <summary>
             An object representation of the 'VW_MenuPermission' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._menuId">
            <summary>
            MenuID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._menuName">
            <summary>
            MenuName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._menuStatus">
            <summary>
            MenuStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._permissionId">
            <summary>
            PermissionID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._permissionName">
            <summary>
            PermissionName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._permissionUrl">
            <summary>
            PermissionURL : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._permissionStatus">
            <summary>
            PermissionStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._parentMenuId">
            <summary>
            ParentMenuID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._showOrder">
            <summary>
            ShowOrder : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._pageUrl">
            <summary>
            PageUrl : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._helpInfo">
            <summary>
            HelpInfo : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwMenuPermissionBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwMenuPermissionBase"/> instance.
            </summary>
            <param name="_menuId"></param>
            <param name="_menuName"></param>
            <param name="_menuStatus"></param>
            <param name="_permissionId"></param>
            <param name="_permissionName"></param>
            <param name="_permissionUrl"></param>
            <param name="_permissionStatus"></param>
            <param name="_parentMenuId"></param>
            <param name="_showOrder"></param>
            <param name="_pageUrl"></param>
            <param name="_helpInfo"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.CreateVwMenuPermission(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.Nullable{System.Int32},System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwMenuPermission"/> instance.
            </summary>
            <param name="_menuId"></param>
            <param name="_menuName"></param>
            <param name="_menuStatus"></param>
            <param name="_permissionId"></param>
            <param name="_permissionName"></param>
            <param name="_permissionUrl"></param>
            <param name="_permissionStatus"></param>
            <param name="_parentMenuId"></param>
            <param name="_showOrder"></param>
            <param name="_pageUrl"></param>
            <param name="_helpInfo"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.Copy">
            <summary>
              Returns a Typed VwMenuPermissionBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.Equals(GE.MyLearning.BL.VwMenuPermissionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwMenuPermissionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.Equals(GE.MyLearning.BL.VwMenuPermissionBase,GE.MyLearning.BL.VwMenuPermissionBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwMenuPermissionBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwMenuPermissionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwMenuPermissionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.GetPropertyValueByName(GE.MyLearning.BL.VwMenuPermission,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermissionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.MenuId">
            <summary>
            	Gets or Sets the MenuID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.MenuName">
            <summary>
            	Gets or Sets the MenuName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.MenuStatus">
            <summary>
            	Gets or Sets the MenuStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.PermissionId">
            <summary>
            	Gets or Sets the PermissionID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.PermissionName">
            <summary>
            	Gets or Sets the PermissionName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.PermissionUrl">
            <summary>
            	Gets or Sets the PermissionURL property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.PermissionStatus">
            <summary>
            	Gets or Sets the PermissionStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.ParentMenuId">
            <summary>
            	Gets or Sets the ParentMenuID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.ShowOrder">
            <summary>
            	Gets or Sets the ShowOrder property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsShowOrderNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.PageUrl">
            <summary>
            	Gets or Sets the PageUrl property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.HelpInfo">
            <summary>
            	Gets or Sets the HelpInfo property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwMenuPermissionBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwMenuPermissionBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwMenuPermissionBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwMenuPermissionColumn">
            <summary>
            Enumerate the VwMenuPermission columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.MenuId">
            <summary>
            MenuID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.MenuName">
            <summary>
            MenuName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.MenuStatus">
            <summary>
            MenuStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.PermissionId">
            <summary>
            PermissionID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.PermissionName">
            <summary>
            PermissionName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.PermissionUrl">
            <summary>
            PermissionURL : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.PermissionStatus">
            <summary>
            PermissionStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.ParentMenuId">
            <summary>
            ParentMenuID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.ShowOrder">
            <summary>
            ShowOrder : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.PageUrl">
            <summary>
            PageUrl : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwMenuPermissionColumn.HelpInfo">
            <summary>
            HelpInfo : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstituteDegreesBase">
            <summary>
             An object representation of the 'VW_InstituteDegrees' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._instituteId">
            <summary>
            InstituteID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._instituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._instituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._instituteStatus">
            <summary>
            InstituteStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._degreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._degreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._degreesDescription">
            <summary>
            DegreesDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._degreeStatus">
            <summary>
            DegreeStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstituteDegreesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstituteDegreesBase"/> instance.
            </summary>
            <param name="_instituteId"></param>
            <param name="_instituteName"></param>
            <param name="_description"></param>
            <param name="_instituteDean"></param>
            <param name="_instituteStatus"></param>
            <param name="_degreeId"></param>
            <param name="_degreeName"></param>
            <param name="_degreesDescription"></param>
            <param name="_credithour"></param>
            <param name="_degreeStatus"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.CreateVwInstituteDegrees(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwInstituteDegrees"/> instance.
            </summary>
            <param name="_instituteId"></param>
            <param name="_instituteName"></param>
            <param name="_description"></param>
            <param name="_instituteDean"></param>
            <param name="_instituteStatus"></param>
            <param name="_degreeId"></param>
            <param name="_degreeName"></param>
            <param name="_degreesDescription"></param>
            <param name="_credithour"></param>
            <param name="_degreeStatus"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.Copy">
            <summary>
              Returns a Typed VwInstituteDegreesBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.Equals(GE.MyLearning.BL.VwInstituteDegreesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwInstituteDegreesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.Equals(GE.MyLearning.BL.VwInstituteDegreesBase,GE.MyLearning.BL.VwInstituteDegreesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwInstituteDegreesBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwInstituteDegreesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwInstituteDegreesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.GetPropertyValueByName(GE.MyLearning.BL.VwInstituteDegrees,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.InstituteId">
            <summary>
            	Gets or Sets the InstituteID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.InstituteName">
            <summary>
            	Gets or Sets the InstituteName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.Description">
            <summary>
            	Gets or Sets the Description property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.InstituteDean">
            <summary>
            	Gets or Sets the InstituteDean property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.InstituteStatus">
            <summary>
            	Gets or Sets the InstituteStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.DegreeId">
            <summary>
            	Gets or Sets the DegreeId property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.DegreeName">
            <summary>
            	Gets or Sets the DegreeName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.DegreesDescription">
            <summary>
            	Gets or Sets the DegreesDescription property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.Credithour">
            <summary>
            	Gets or Sets the Credithour property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCredithourNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.DegreeStatus">
            <summary>
            	Gets or Sets the DegreeStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsDegreeStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwInstituteDegreesBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreesBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwInstituteDegreesBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstituteDegreesColumn">
            <summary>
            Enumerate the VwInstituteDegrees columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesColumn.InstituteId">
            <summary>
            InstituteID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesColumn.InstituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesColumn.InstituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesColumn.InstituteStatus">
            <summary>
            InstituteStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesColumn.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesColumn.DegreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesColumn.DegreesDescription">
            <summary>
            DegreesDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesColumn.Credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreesColumn.DegreeStatus">
            <summary>
            DegreeStatus : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstituteDegreeCoursesBase">
            <summary>
             An object representation of the 'VW_InstituteDegreeCourses' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._instituteId">
            <summary>
            InstituteID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._instituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._instituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._instituteStatus">
            <summary>
            InstituteStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._degreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._degreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._degreesDescription">
            <summary>
            DegreesDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._degreeStatus">
            <summary>
            DegreeStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._degreeCourseId">
            <summary>
            DegreeCourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._courseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._courseStyle">
            <summary>
            CourseStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._courseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._degreeCoursesDescription">
            <summary>
            DegreeCoursesDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._degreeCoursesCreditHour">
            <summary>
            DegreeCoursesCreditHour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._degreeCourseStatus">
            <summary>
            DegreeCourseStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._isRequiredCourse">
            <summary>
            IsRequiredCourse : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCoursesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCoursesBase"/> instance.
            </summary>
            <param name="_instituteId"></param>
            <param name="_instituteName"></param>
            <param name="_description"></param>
            <param name="_instituteDean"></param>
            <param name="_instituteStatus"></param>
            <param name="_degreeId"></param>
            <param name="_degreeName"></param>
            <param name="_degreesDescription"></param>
            <param name="_credithour"></param>
            <param name="_degreeStatus"></param>
            <param name="_degreeCourseId"></param>
            <param name="_courseName"></param>
            <param name="_courseStyle"></param>
            <param name="_courseId"></param>
            <param name="_degreeCoursesDescription"></param>
            <param name="_degreeCoursesCreditHour"></param>
            <param name="_degreeCourseStatus"></param>
            <param name="_isRequiredCourse"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.CreateVwInstituteDegreeCourses(System.String,System.String,System.String,System.String,System.Int32,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCourses"/> instance.
            </summary>
            <param name="_instituteId"></param>
            <param name="_instituteName"></param>
            <param name="_description"></param>
            <param name="_instituteDean"></param>
            <param name="_instituteStatus"></param>
            <param name="_degreeId"></param>
            <param name="_degreeName"></param>
            <param name="_degreesDescription"></param>
            <param name="_credithour"></param>
            <param name="_degreeStatus"></param>
            <param name="_degreeCourseId"></param>
            <param name="_courseName"></param>
            <param name="_courseStyle"></param>
            <param name="_courseId"></param>
            <param name="_degreeCoursesDescription"></param>
            <param name="_degreeCoursesCreditHour"></param>
            <param name="_degreeCourseStatus"></param>
            <param name="_isRequiredCourse"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.Copy">
            <summary>
              Returns a Typed VwInstituteDegreeCoursesBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.Equals(GE.MyLearning.BL.VwInstituteDegreeCoursesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCoursesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.Equals(GE.MyLearning.BL.VwInstituteDegreeCoursesBase,GE.MyLearning.BL.VwInstituteDegreeCoursesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCoursesBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCoursesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCoursesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.GetPropertyValueByName(GE.MyLearning.BL.VwInstituteDegreeCourses,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.InstituteId">
            <summary>
            	Gets or Sets the InstituteID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.InstituteName">
            <summary>
            	Gets or Sets the InstituteName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.Description">
            <summary>
            	Gets or Sets the Description property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.InstituteDean">
            <summary>
            	Gets or Sets the InstituteDean property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.InstituteStatus">
            <summary>
            	Gets or Sets the InstituteStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.DegreeId">
            <summary>
            	Gets or Sets the DegreeId property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsDegreeIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.DegreeName">
            <summary>
            	Gets or Sets the DegreeName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.DegreesDescription">
            <summary>
            	Gets or Sets the DegreesDescription property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.Credithour">
            <summary>
            	Gets or Sets the Credithour property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCredithourNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.DegreeStatus">
            <summary>
            	Gets or Sets the DegreeStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsDegreeStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.DegreeCourseId">
            <summary>
            	Gets or Sets the DegreeCourseID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsDegreeCourseIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.CourseName">
            <summary>
            	Gets or Sets the CourseName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.CourseStyle">
            <summary>
            	Gets or Sets the CourseStyle property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCourseStyleNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.CourseId">
            <summary>
            	Gets or Sets the CourseId property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.DegreeCoursesDescription">
            <summary>
            	Gets or Sets the DegreeCoursesDescription property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.DegreeCoursesCreditHour">
            <summary>
            	Gets or Sets the DegreeCoursesCreditHour property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsDegreeCoursesCreditHourNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.DegreeCourseStatus">
            <summary>
            	Gets or Sets the DegreeCourseStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsDegreeCourseStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.IsRequiredCourse">
            <summary>
            	Gets or Sets the IsRequiredCourse property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIsRequiredCourseNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwInstituteDegreeCoursesBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn">
            <summary>
            Enumerate the VwInstituteDegreeCourses columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.InstituteId">
            <summary>
            InstituteID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.InstituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.InstituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.InstituteStatus">
            <summary>
            InstituteStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.DegreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.DegreesDescription">
            <summary>
            DegreesDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.Credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.DegreeStatus">
            <summary>
            DegreeStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.DegreeCourseId">
            <summary>
            DegreeCourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.CourseStyle">
            <summary>
            CourseStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.DegreeCoursesDescription">
            <summary>
            DegreeCoursesDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.DegreeCoursesCreditHour">
            <summary>
            DegreeCoursesCreditHour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.DegreeCourseStatus">
            <summary>
            DegreeCourseStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstituteDegreeCoursesColumn.IsRequiredCourse">
            <summary>
            IsRequiredCourse : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TList`1">
            <summary>
            Represents a strongly typed list of .netTiers table entity that can be accessed by index. 
            Provides methods to search, sort, and manipulate lists.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ListBase`1">
            <summary>
            A abstract generic base class for the nettiers entities that are generated from tables and views. 
            Supports filtering, databinding, searching and sorting.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TList{T}"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.InitializeList">
            <summary>
            Initialize any member variables when the list is created
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object)">
            <summary>
            Searches for the index of the item that has the specified property descriptor with the specified value.
            </summary>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to search for.</param>
            <param name="key">The value of <i>property</i> to match.</param>
            <returns>The zero-based index of the item that matches the property descriptor and contains the specified value. </returns>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object,System.Boolean)">
            <summary>
            Searches for the index of the item that has the specified property descriptor with the specified value.
            </summary>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to search for.</param>
            <param name="key">The value of <i>property</i> to match.</param>
            <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
            <returns>The zero-based index of the item that matches the property descriptor and contains the specified value. </returns>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.FindCore(System.ComponentModel.PropertyDescriptor,System.Object,System.Int32,System.Boolean)">
            <summary>
            Searches for the index of the item that has the specified property descriptor with the specified value.
            </summary>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"> to search for.</see></param>
            <param name="key">The value of <i>property</i> to match.</param>
            <param name="start">The index in the list at which to start the search.</param>
            <param name="ignoreCase">Indicator of whether to perform a case-sensitive or case insensitive search (string properties only).</param>
            <returns>The zero-based index of the item that matches the property descriptor and contains the specified value. </returns>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Sorts the items in the list
            </summary>
            <param name="prop">A <see cref="T:System.ComponentModel.PropertyDescriptor"/> that specifies the property to sort on.</param>
            <param name="direction">One of the <see cref="T:System.ComponentModel.ListSortDirection"/> values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.RemoveSortCore">
            <summary>
            Removes any sort applied to the list.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.RemoveFilter">
            <summary>
            Removes the current filter applied to the data source..
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ApplySort(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
             Sorts the data source based on the given <see cref="T:System.ComponentModel.ListSortDescriptionCollection"/>.
            </summary>
            <param name="sorts">The <see cref="T:System.ComponentModel.ListSortDescriptionCollection"/> containing the sorts to apply to the data source.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
             Sorts the data source based on a <see cref="T:System.ComponentModel.PropertyDescriptor">PropertyDescriptor</see> and a <see cref="T:System.ComponentModel.ListSortDirection">ListSortDirection</see>.
            </summary>
            <param name="property">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to sort the collection by.</param>
            <param name="direction">The <see cref="T:System.ComponentModel.ListSortDirection"/> in which to sort the collection.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ApplySortInternal(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire list using the specified <see cref="T:System.Comparison`1"/>.
            </summary>
            <param name="comparison">The <see cref="T:System.Comparison`1"/> to use when comparing elements.</param>
            <exception cref="T:System.ArgumentNullException">comparison is a null reference.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ApplySortInternal(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire list using the specified comparer. 
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"/> implementation to use when comparing elements, or a null reference (Nothing in Visual Basic) to use the default comparer <see cref="F:System.Collections.Comparer.Default"/>.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Sort(System.Collections.Generic.IComparer{`0})">
            <summary>
            Sorts the elements in the entire list using the specified comparer. 
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1"/> implementation to use when comparing elements, or a null reference (Nothing in Visual Basic) to use the default comparer <see cref="F:System.Collections.Comparer.Default"/>.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Sort(System.Comparison{`0})">
            <summary>
            Sorts the elements in the entire list using the specified <see cref="T:System.Comparison`1"/>.
            </summary>
            <param name="comparison">The <see cref="T:System.Comparison`1"/> to use when comparing elements.</param>
            <exception cref="T:System.ArgumentNullException">comparison is a null reference.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Sort(System.String)">
            <summary>
            Sorts the elements in the entire list using the specified Order By statement.
            </summary>
            <param name="orderBy">SQL-like string representing the properties to sort the list by.</param>
            <remarks><i>orderBy</i> should be in the following format: 
            <para>PropertyName[[ [[ASC]|DESC]][, PropertyName[ [[ASC]|DESC]][,...]]]</para></remarks>
            <example><c>list.Sort("Property1, Property2 DESC, Property3 ASC");</c></example>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ApplyFilter">
            <summary>
            Force the filtering of the collection, based on the filter expression set through the <c cref="P:GE.MyLearning.BL.ListBase`1.Filter"/> property.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ApplyFilter(System.Predicate{`0})">
            <summary>
            Force the filtering of the collection, based on the use of the specified Predicate.
            </summary>
            <param name="match"></param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.RemoveFilteredItem(System.Int32)">
            <summary>
            Removes the non criteria matching item at the specified index for the current filter set.
            Adds the Item to the ExcludedItem  collection without changing EntityState
            </summary>
            <param name="index">The zero-based index of non criteria matching item to remove.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.OnItemChanged(System.Object,System.EventArgs)">
            <summary>
            Represents the method that will handle the ItemChanged event of the CurrencyManager class
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="args">An EventArgs that contains the event data.</param>
            <remarks>This raises the ListChanged event of the list.</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Shuffle">
             <summary>
            		Sorts the collection based on a random shuffle.
             </summary>
             <author>Steven Smith</author>
             <url>http://blogs.aspadvice.com/ssmith/archive/2005/01/27/2480.aspx</url>
            <remarks></remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Clone">
            <summary>
             Creates an exact copy of this instance.
            </summary>
            <implements><see cref="M:System.ICloneable.Clone"/></implements>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Clone(System.Collections.IDictionary)">
            <summary>
             Creates an exact copy of this instance.
            </summary>
            <implements><see cref="M:GE.MyLearning.BL.ICloneableEx.Clone(System.Collections.IDictionary)"/></implements>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.MakeCopyOf(System.Object)">
            <summary>
             Creates an exact copy of this TList{T} object.
            </summary>
            <returns>A new, identical copy of the TList{T} casted as object.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Creates an exact copy of this TList{T} object.
            </summary>
            <returns>A new, identical copy of the TList{T} casted as object.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.EntityChanged(`0)">
            <summary>
            Raises the ListChanged event indicating that a item in the list has changed.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            This member allows binding objects to discover the field/column information.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            This member returns the name displayed in the IDE.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.GetList">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Find(System.Enum,System.Object)">
            <summary>
             Finds the first <see cref="T:GE.MyLearning.BL.IEntity"/> object in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Find(System.Enum,System.Object,System.Boolean)">
            <summary>
             Finds the first <see cref="T:GE.MyLearning.BL.IEntity"/> object in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Find(System.String,System.Object)">
            <summary>
             Finds the first <see cref="T:GE.MyLearning.BL.IEntity"/> object in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Find(System.String,System.Object,System.Boolean)">
            <summary>
             Finds the first <see cref="T:GE.MyLearning.BL.IEntity"/> object in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.OnDeserialization(System.Object)">
            <summary>
            Runs when the entire object graph has been deserialized.
            </summary>
            <param name="sender">The object that initiated the callback.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.IsNullOrEmpty(GE.MyLearning.BL.ListBase{`0})">
            <summary>
            Indicates whether the specified TList object is a null reference (Nothing in Visual Basic) or an empty collection (no item in it).
            </summary>
            <param name="list">The list.</param>
            <returns>
            	<c>true</c> if the object is null or has no item; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ForEach(System.Action{`0})">
            <summary>
            Performs the specified action on each element of the specified array.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.AddRange(`0[])">
            <summary>
            Adds an array of items to the list of items for a TList.
            </summary>
            <param name="array">The array of items to add.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.AddRange(GE.MyLearning.BL.ListBase{`0})">
            <summary>
            Adds an array of items to the list of items for a TList.
            </summary>
            <param name="list">The list of items to add.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.AddRange(System.Collections.Generic.List{`0})">
            <summary>
            Adds an array of items to the list of items for a VList.
            </summary>
            <param name="list">The list of items to add.</param>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.FindAll(System.Predicate{`0})">
            <summary>
            Retrieves the all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.</param>
            <returns>
            A <see cref="T:TList`1"></see> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:TList`1"></see>.
            </returns>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>		
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.Find(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:TList`1"></see>.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <returns>
            The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type T.
            </returns>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ToArray">
            <summary>
             Convert list of entities to an <see cref="T:System.Array"/>
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.ToDataSet(System.Boolean)">
            <summary>
            Recursively adds child relationships of a <seealso cref="T:GE.MyLearning.BL.ListBase`1"/> Entities and 
            builds out a nested dataset including <see cref="T:System.Data.DataRelation"/> relationships.
            </summary>
            <param name="includeChildren">You can optionally go deep by including includeChildren</param>
            <returns>DataSet</returns>
            <example>
             An example using the Northwind database would be to deep load a TList or VList, 
             and then call list.ToDataSet(true/false);
             <code><![CDATA[
               TList<Categories> list = DataRepository.CategoriesProvider.GetAll();
               DataRepository.CategoriesProvider.DeepLoad(list, true);
               DataSet ds = list.ToDataSet(true);
               ds.WriteXml("C:\\Test2.xml");
               ]]></code>
            </example>
        </member>
        <member name="M:GE.MyLearning.BL.ListBase`1.AddRelations(System.Data.DataSet,System.Collections.Generic.List{System.Data.DataColumn},System.Boolean)">
            <summary>
            Recursively adds child relationships of a TList's Entity and builds out a nested dataset including relationships.
            </summary>
            <param name="dataset">An already instatiated dataset which will be used to fill all objects.</param>
            <param name="parentKeys">Used to pass down the parent primary key to a child datatable to add a dataRelation</param>
            <param name="includeChildren">bool, include deep load of all child collections in this object graph?</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.SupportsSearchingCore">
            <summary>
            Gets a value indicating whether the list supports searching. 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.SupportsSortingCore">
            <summary>
            Gets a value indicating whether the list supports sorting. 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.IsSortedCore">
            <summary>
            Gets a value indicating whether the list is sorted. 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.SortDirectionCore">
            <summary>
            Gets the direction the list is sorted.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.SortPropertyCore">
            <summary>
            Gets the property descriptor that is used for sorting
            </summary>
            <returns>The <see cref="T:System.ComponentModel.PropertyDescriptor"/> used for sorting the list.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.Filter">
            <summary>
            Gets or sets the filter to be used to exclude items from the collection of items returned by the data source.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.SortDescriptions">
            <summary>
            Gets the collection of sort descriptions currently applied to the data source.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.SupportsAdvancedSorting">
            <summary>
            Gets a value indicating whether the data source supports advanced sorting.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.SupportsFiltering">
            <summary>
            Gets a value indicating whether the data source supports filtering.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.IsFiltering">
            <summary>
            Indicates whether a filter is currently applied to the collection.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.ExcludedItems">
            <summary>
            Get the list of items that are excluded by the current filter.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.System#ComponentModel#IRaiseItemChangedEvents#RaisesItemChangedEvents">
            <summary>
            Gets a value indicating whether the object raises <see cref="E:System.ComponentModel.IBindingList.ListChanged"/> events.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.PropertyCollection">
            <summary>
            Gets or sets the property descriptor collection for T.  
            </summary>
            <value>The property collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.ContainsListCollection">
            <summary>
            Return TRUE if our list contains additional/child lists.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ListBase`1.Site">
            <summary>
            Get / Set the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.ListBase`1.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TList{T}"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.#ctor(System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:TList{T}"/> class based on another list.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.RemoveEntity(System.Int32)">
            <summary>
            Removes the entity item at the specified index and places it in the DeletedItems collection.
            If this list were to be persisted, it would delete the entity from the repository.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.RemoveEntity(`0)">
            <summary>
            Removes the entity item and places it in the DeletedItems collection.
            If this list were to be persisted, it would delete the entity from the repository.
            </summary>
            <param name="item">The entity to delete and place in DeletedItems collection.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts the specified item in the list at the specified index.
            </summary>
            <param name="index">The zero-based index where the item is to be inserted.</param>
            <param name="item">The item to insert in the list.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.Clone">
            <summary>
             Creates an exact copy of this TList{T} instance.
            </summary>
            <returns>The TList{T} object this method creates, cast as an object.</returns>
            <implements><see cref="M:System.ICloneable.Clone"/></implements>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.Clone(System.Collections.IDictionary)">
            <summary>
             Creates an exact copy of this TList{T} instance.
            </summary>
            <returns>The TList{T} object this method creates, cast as an object.</returns>
            <implements><see cref="M:GE.MyLearning.BL.ICloneableEx.Clone(System.Collections.IDictionary)"/></implements>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.Copy">
            <summary>
             Creates an exact copy of this TList{T} object.
            </summary>
            <returns>A new, identical copy of the TList{T}.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.Copy(System.Collections.IDictionary)">
            <summary>
             Creates an exact copy of this TList{T} object.
            </summary>
            <returns>A new, identical copy of the TList{T}.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.AcceptChanges">
            <summary>
            Accepts the changes made to underlyting entities.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.CopyTo(GE.MyLearning.BL.TList{`0})">
            <summary>
            Adds the data in this collection to another collection
            </summary>
            <param name="copyTo"></param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.ForEach``1(GE.MyLearning.BL.TList{``0},System.Action{``0})">
            <summary>
            Performs the specified action on each element of the specified array.
            </summary>
            <param name="list">The list.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.GetRange(System.Int32,System.Int32)">
            <summary>
            Gets the range
            </summary>
            <param name="index">The index.</param>
            <param name="count">The count.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAll(System.Enum,System.Object)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAll(System.Enum,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAll(System.String,System.Object)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAll(System.String,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAll(System.Predicate{`0})">
            <summary>
            Retrieves the all the elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.</param>
            <returns>
            A <see cref="T:TList{T}"></see> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:TList{T}"></see>.
            </returns>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>		
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAllDistinct(System.Enum)">
            <summary>
            Finds all distinct elements for the specified column
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAllDistinct(System.String)">
            <summary>
            Finds all distinct elements for the specified column
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.Exists(System.Predicate{`0})">
            <summary>
            Determines whether the <see cref="T:TList{T}"></see> contains elements that match the conditions defined by the specified predicate.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the elements to search for.</param>
            <returns>
            true if the <see cref="T:TList{T}"></see> contains one or more elements that match the conditions defined by the specified predicate; otherwise, false.
            </returns>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindIndex(System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:TList{T}"></see>.
            </summary>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, 1.
            </returns>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindIndex(System.Int32,System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:TList{T}"></see> that extends from the specified index to the last element.
            </summary>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, 1.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:TList{T}"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})">
            <summary>
            Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:TList{T}"></see> that starts at the specified index and contains the specified number of elements.
            </summary>
            <param name="startIndex">The zero-based starting index of the search.</param>
            <param name="count">The number of elements in the section to search.</param>
            <param name="match">The <see cref="T:System.Predicate`1"></see> delegate that defines the conditions of the element to search for.</param>
            <returns>
            The zero-based index of the first occurrence of an element that matches the conditions defined by match, if found; otherwise, 1.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">startIndex is outside the range of valid indexes for the <see cref="T:TList{T}"></see>.-or-count is less than 0.-or-startIndex and count do not specify a valid section in the <see cref="T:TList{T}"></see>.</exception>
            <exception cref="T:System.ArgumentNullException">match is null.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAllBy(GE.MyLearning.BL.TList{`0}.FindAllByType,System.Enum,System.Object)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:GE.MyLearning.BL.TList`1.FindAllByType"/> Type to easily search by</param>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAllBy(GE.MyLearning.BL.TList{`0}.FindAllByType,System.Enum,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:GE.MyLearning.BL.TList`1.FindAllByType"/> Type to easily search by</param>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAllBy(GE.MyLearning.BL.TList{`0}.FindAllByType,System.String,System.Object)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:GE.MyLearning.BL.TList`1.FindAllByType"/> Type to easily search by</param>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAllBy(GE.MyLearning.BL.TList{`0}.FindAllByType,System.String,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:GE.MyLearning.BL.TList`1.FindAllByType"/> Type to easily search by</param>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TList`1.FindAllBy(GE.MyLearning.BL.TList{`0}.FindAllByType,System.ComponentModel.PropertyDescriptor,System.Object,System.Int32,System.Boolean)">
            <summary>
            Searches for the index of the item that has the specified property descriptor with the specified value.
            </summary>
            <param name="findAllByType"><see cref="T:GE.MyLearning.BL.TList`1.FindAllByType"/> Type to easily search by</param>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"> to search for.</see></param>
            <param name="key">The value of <i>property</i> to match.</param>
            <param name="start">The index in the list at which to start the search.</param>
            <param name="ignoreCase">Indicator of whether to perform a case-sensitive or case insensitive search (string properties only).</param>
            <returns>The zero-based index of the item that matches the property descriptor and contains the specified value. </returns>
        </member>
        <member name="P:GE.MyLearning.BL.TList`1.IsDirty">
             <summary>
            		Indicates whether the collection was modified or not, and thus if it needs to be saved.
             </summary>
            <returns>true is the collection needs to be saved; otherwise false.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.TList`1.IsNewCount">
             <summary>
            		Returns the number of items that have been marked new in the collection.
             </summary>
            <returns>the number of items that have been marked new in the collection</returns>
        </member>
        <member name="P:GE.MyLearning.BL.TList`1.IsDeletedCount">
             <summary>
            		Returns the number of items that have been marked to delete in the collection.
             </summary>
            <returns>the number of items that have been marked for deletation in the collection</returns>
        </member>
        <member name="P:GE.MyLearning.BL.TList`1.IsDirtyCount">
             <summary>
            		Returns the number of items that have been marked as modified in the collection.
             </summary>
            <returns>the number of items that have been marked as modified in the collection</returns>
        </member>
        <member name="P:GE.MyLearning.BL.TList`1.AllChangesCount">
            <summary>
            Gets all changes count.
            <remarks>
            This is a total of the following counts:
             IsNewCount
             IsDirtyCount
             IsDeletedCount
            </remarks>
            </summary>
            <value>All changes count.</value>
        </member>
        <member name="P:GE.MyLearning.BL.TList`1.IsValid">
            <summary>
            Returns whether all items contained in the list.
            </summary>
            <value>True if all items are valid; otherwise False.</value>
        </member>
        <member name="P:GE.MyLearning.BL.TList`1.InvalidItems">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.List`1"/> object of invalid items.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TList`1.DeletedItems">
            <summary>
            Hold a collection of item that we want to delete. they are removed from the main collection, so the databinding is working.
            </summary>
            <remark>The save method will loop on this collection to delete item from the datasource.</remark>
        </member>
        <member name="T:GE.MyLearning.BL.TList`1.FindAllByType">
            <summary>
             Used to by FindAllBy method to all for easy searching.
             </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TList`1.FindAllByType.StartsWith">
            <summary>
            Starts with Value in List
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TList`1.FindAllByType.EndsWith">
            <summary>
            Ends with Value in List
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TList`1.FindAllByType.Contains">
            <summary>
            Contains Value in List
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.SortComparer`1">
            <summary>
            Generic Sort comparer for the <see cref="T:GE.MyLearning.BL.TList`1"/> class.
            </summary>
            <typeparam name="T">Type of object to sort.</typeparam>
        </member>
        <member name="F:GE.MyLearning.BL.SortComparer`1.m_SortCollection">
            <summary>
            Collection of properties to sort by.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SortComparer`1.m_PropDesc">
            <summary>
            Property to sort by.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SortComparer`1.m_Direction">
            <summary>
            Direction to sort by
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.SortComparer`1.m_PropertyDescriptors">
            <summary>
            Collection of properties for T.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.SortComparer`1.#ctor(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
            Create a new instance of the SortComparer class.
            </summary>
            <param name="propDesc">The <see cref="T:System.ComponentModel.PropertyDescriptor"/> to sort by.</param>
            <param name="direction">The <see cref="T:System.ComponentModel.ListSortDirection"/> to sort the list.</param>
        </member>
        <member name="M:GE.MyLearning.BL.SortComparer`1.#ctor(System.ComponentModel.ListSortDescriptionCollection)">
            <summary>
            Create a new instance of the SortComparer class.
            </summary>
            <param name="sortCollection">A <see cref="T:System.ComponentModel.ListSortDescriptionCollection"/> containing the properties to sort the list by.</param>
        </member>
        <member name="M:GE.MyLearning.BL.SortComparer`1.#ctor(System.String)">
            <summary>
            Create a new instance of the SortComparer class.
            </summary>
            <param name="orderBy">SQL-like string representing the properties to sort the list by.</param>
            <remarks><i>orderBy</i> should be in the following format: 
            <para>PropertyName[[ [[ASC]|DESC]][, PropertyName[ [[ASC]|DESC]][,...]]]</para></remarks>
            <example><c>list.Sort("Property1, Property2 DESC, Property3 ASC");</c></example>
        </member>
        <member name="M:GE.MyLearning.BL.SortComparer`1.Compare(`0,`0)">
            <summary>
            Compares two objects and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="x">The first object to compare.</param>
            <param name="y">The second object to compare.</param>
            <returns>Value is less than zero: <c>x</c> is less than <c>y</c>
            <para>Value is equal to zero: <c>x</c> equals <c>y</c></para>
            <para>Value is greater than zero: <c>x</c> is greater than <c>y</c></para>
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.SortComparer`1.CompareValues(System.Object,System.Object,System.ComponentModel.ListSortDirection)">
            <summary>
            Compare two objects
            </summary>
            <param name="xValue">The first object to compare</param>
            <param name="yValue">The second object to compare</param>
            <param name="direction">The direction to sort the objects in</param>
            <returns>Returns an integer representing the order of the objects</returns>
        </member>
        <member name="M:GE.MyLearning.BL.SortComparer`1.ParseOrderBy(System.String)">
            <summary>
            Parses a string into a <see cref="T:System.ComponentModel.ListSortDescriptionCollection"/>.
            </summary>
            <param name="orderBy">SQL-like string of sort properties</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.SortComparer`1.Initialize">
            <summary>
            Initializes the SortComparer object
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUsertypeBase">
            <summary>
             An object representation of the 'evl_usertype' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUsertypeBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUsertypeBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUsertypeBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUsertypeBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUsertypeBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlUsertypeBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.#ctor(System.Int32,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlUsertypeBase"/> instance.
            </summary>
            <param name="_id"></param>
            <param name="_userType"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.CreateEvlUsertype(System.Int32,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlUsertype"/> instance.
            </summary>
            <param name="_id"></param>
            <param name="_userType"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlUsertype Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.Copy">
            <summary>
              Returns a Typed EvlUsertype Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.DeepCopy">
            <summary>
              Returns a Typed EvlUsertype Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.IsPropertyChanged(GE.MyLearning.BL.EvlUsertypeColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.GetOriginalEntity">
            <summary>
              Returns a EvlUsertype Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlUsertypeBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlUsertypeBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.Equals(GE.MyLearning.BL.EvlUsertypeBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlUsertypeBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.ValueEquals(GE.MyLearning.BL.EvlUsertypeBase,GE.MyLearning.BL.EvlUsertypeBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlUsertypeBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlUsertypeBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlUsertypeBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.OnColumnChanging(GE.MyLearning.BL.EvlUsertypeColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlUsertypeBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlUsertypeColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.OnColumnChanged(GE.MyLearning.BL.EvlUsertypeColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlUsertypeBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlUsertypeColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.OnColumnChanging(GE.MyLearning.BL.EvlUsertypeColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlUsertypeBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlUsertypeColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.OnColumnChanged(GE.MyLearning.BL.EvlUsertypeColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlUsertypeBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlUsertypeColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlUsertypeBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlUsertypeBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.OriginalId">
            <summary>
            	Get the original value of the id property.
            	
            </summary>
            <remarks>This is the original value of the id property.</remarks>
            <value>This type is int</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.UserType">
            <summary>
            	Gets or sets the UserType property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlUsertypeBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlUsertypeBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUsertypeBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUsertypeBase.EvlUsertypeEntityData">
            <summary>
            	The data structure representation of the 'evl_usertype' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUsertypeBase.EvlUsertypeEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_usertype"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUsertypeBase.EvlUsertypeEntityData.OriginalId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUsertypeBase.EvlUsertypeEntityData.UserType">
            <summary>
            UserType : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.EvlUsertypeEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeBase.EvlUsertypeEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeBase.EvlUsertypeEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUsertypeEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeEventArgs.#ctor(GE.MyLearning.BL.EvlUsertypeColumn)">
            <summary>
             Initalizes a new Instance of the EvlUsertypeEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeEventArgs.#ctor(GE.MyLearning.BL.EvlUsertypeColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlUsertypeEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeEventArgs.Column">
            <summary>
             The EvlUsertypeColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlUsertypeColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUsertypeEventHandler">
            <summary>
             Define a delegate for all EvlUsertype related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUsertypeComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlUsertypeComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeComparer.#ctor(GE.MyLearning.BL.EvlUsertypeColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlUsertypeComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeComparer.Equals(GE.MyLearning.BL.EvlUsertype,GE.MyLearning.BL.EvlUsertype)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlUsertype"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlUsertype"/> to compare.</param>
            <param name="b">The second <c>EvlUsertype</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeComparer.GetHashCode(GE.MyLearning.BL.EvlUsertype)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeComparer.Compare(GE.MyLearning.BL.EvlUsertype,GE.MyLearning.BL.EvlUsertype)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUsertypeKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeKey.#ctor">
            <summary>
            Initializes a new instance of the EvlUsertypeKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeKey.#ctor(GE.MyLearning.BL.EvlUsertypeBase)">
            <summary>
            Initializes a new instance of the EvlUsertypeKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlUsertypeKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertypeKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUsertypeKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUsertypeColumn">
            <summary>
            Enumerate the EvlUsertype columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUsertypeColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUsertypeColumn.UserType">
            <summary>
            UserType : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IGroups">
            <summary>
            	The data structure representation of the 'Groups' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IGroups.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IGroups.GroupId">
            <summary>			
            GroupID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Groups"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IGroups.OriginalGroupId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IGroups.GroupName">
            <summary>
            GroupName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IGroups.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IGroups.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IGroups.LeaderUserId">
            <summary>
            LeaderUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IGroups.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IGroups.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreesBase">
            <summary>
             An object representation of the 'Degrees' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IDegrees">
            <summary>
            	The data structure representation of the 'Degrees' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IDegrees.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IDegrees.DegreeId">
            <summary>			
            DegreeId : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Degrees"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IDegrees.DegreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegrees.InstituteId">
            <summary>
            InstituteId : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegrees.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegrees.Credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegrees.Createtime">
            <summary>
            Createtime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegrees.CreateUserId">
            <summary>
            CreateUserId : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegrees.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegrees.ToApply">
            <summary>
            ToApply : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.DegreesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.DegreesBase"/> instance.
            </summary>
            <param name="_degreeName"></param>
            <param name="_instituteId"></param>
            <param name="_description"></param>
            <param name="_credithour"></param>
            <param name="_createtime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
            <param name="_toApply"></param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.CreateDegrees(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Degrees"/> instance.
            </summary>
            <param name="_degreeName"></param>
            <param name="_instituteId"></param>
            <param name="_description"></param>
            <param name="_credithour"></param>
            <param name="_createtime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
            <param name="_toApply"></param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Degrees Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.Copy">
            <summary>
              Returns a Typed Degrees Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.DeepCopy">
            <summary>
              Returns a Typed Degrees Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.IsPropertyChanged(GE.MyLearning.BL.DegreesColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.GetOriginalEntity">
            <summary>
              Returns a Degrees Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.DegreesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.DegreesBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.Equals(GE.MyLearning.BL.DegreesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.DegreesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.ValueEquals(GE.MyLearning.BL.DegreesBase,GE.MyLearning.BL.DegreesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.DegreesBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.DegreesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.DegreesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.OnColumnChanging(GE.MyLearning.BL.DegreesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.OnColumnChanged(GE.MyLearning.BL.DegreesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.OnColumnChanging(GE.MyLearning.BL.DegreesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.OnColumnChanged(GE.MyLearning.BL.DegreesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.DegreesBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DegreesBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.DegreeId">
            <summary>
            	Gets or sets the DegreeId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.DegreeName">
            <summary>
            	Gets or sets the DegreeName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.InstituteId">
            <summary>
            	Gets or sets the InstituteId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.Credithour">
            <summary>
            	Gets or sets the Credithour property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCredithourNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.Createtime">
            <summary>
            	Gets or sets the Createtime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreatetimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.CreateUserId">
            <summary>
            	Gets or sets the CreateUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.ToApply">
            <summary>
            	Gets or sets the ToApply property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsToApplyNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DegreesBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DegreesBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreesBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.DegreesBase.DegreesEntityData">
            <summary>
            	The data structure representation of the 'Degrees' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.DegreesEntityData.DegreeId">
            <summary>			
            DegreeId : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Degrees"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.DegreesEntityData.DegreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.DegreesEntityData.InstituteId">
            <summary>
            InstituteId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.DegreesEntityData.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.DegreesEntityData.Credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.DegreesEntityData.Createtime">
            <summary>
            Createtime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.DegreesEntityData.CreateUserId">
            <summary>
            CreateUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.DegreesEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesBase.DegreesEntityData.ToApply">
            <summary>
            ToApply : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.DegreesEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesBase.DegreesEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesBase.DegreesEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.DegreesEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Degrees"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesEventArgs.#ctor(GE.MyLearning.BL.DegreesColumn)">
            <summary>
             Initalizes a new Instance of the DegreesEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesEventArgs.#ctor(GE.MyLearning.BL.DegreesColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the DegreesEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesEventArgs.Column">
            <summary>
             The DegreesColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.DegreesColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.DegreesEventHandler">
            <summary>
             Define a delegate for all Degrees related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreesComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DegreesComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesComparer.#ctor(GE.MyLearning.BL.DegreesColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:DegreesComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesComparer.Equals(GE.MyLearning.BL.Degrees,GE.MyLearning.BL.Degrees)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Degrees"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Degrees"/> to compare.</param>
            <param name="b">The second <c>Degrees</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesComparer.GetHashCode(GE.MyLearning.BL.Degrees)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesComparer.Compare(GE.MyLearning.BL.Degrees,GE.MyLearning.BL.Degrees)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.DegreesKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Degrees"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesKey.#ctor">
            <summary>
            Initializes a new instance of the DegreesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesKey.#ctor(GE.MyLearning.BL.DegreesBase)">
            <summary>
            Initializes a new instance of the DegreesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the DegreesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreesKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreesKey.DegreeId">
            <summary>
            Gets or sets the DegreeId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreesColumn">
            <summary>
            Enumerate the Degrees columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesColumn.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesColumn.DegreeName">
            <summary>
            DegreeName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesColumn.InstituteId">
            <summary>
            InstituteId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesColumn.Credithour">
            <summary>
            Credithour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesColumn.Createtime">
            <summary>
            Createtime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesColumn.CreateUserId">
            <summary>
            CreateUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreesColumn.ToApply">
            <summary>
            ToApply : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuCatogaryManager">
            <summary>
            	The data structure representation of the 'VU_Catogary_Manager' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuCatogaryManager.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogaryManager.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_Catogary_Manager"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogaryManager.CatogaryId">
            <summary>
            CatogaryID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogaryManager.Owner">
            <summary>
            Owner : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuCatogaryExperts">
            <summary>
            	The data structure representation of the 'VU_Catogary_Experts' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuCatogaryExperts.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogaryExperts.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_Catogary_Experts"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogaryExperts.CatogaryId">
            <summary>
            CatogaryID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogaryExperts.Owner">
            <summary>
            Owner : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogaryExperts.Email">
            <summary>
            email : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogaryExperts.Area">
            <summary>
            area : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogaryExperts.Name">
            <summary>
            name : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogaryExperts.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingUserBase">
            <summary>
             An object representation of the 'TrainingUser' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ITrainingUser">
            <summary>
            	The data structure representation of the 'TrainingUser' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ITrainingUser.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TrainUserId">
            <summary>			
            TrainUserID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "TrainingUser"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.GroupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TrainingUserType">
            <summary>
            TrainingUserType : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TrainUserStatus">
            <summary>
            TrainUserStatus : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TrainAuditingStatus">
            <summary>
            TrainAuditingStatus : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TrainAuditingMan">
            <summary>
            TrainAuditingMan : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TrainAuditingDate">
            <summary>
            TrainAuditingDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.CourseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TrainAuditingDescription">
            <summary>
            TrainAuditingDescription : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TrainingFinishTime">
            <summary>
            TrainingFinishTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TestFinishTime">
            <summary>
            TestFinishTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.InvestigationFinishTime">
            <summary>
            InvestigationFinishTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.StudyFinishTime">
            <summary>
            StudyFinishTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TrainTimeUseCredit">
            <summary>
            TrainTimeUseCredit : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingUser.TrainTimeAddPoint">
            <summary>
            TrainTimeAddPoint : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.TrainingUserBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.#ctor(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.TrainingUserBase"/> instance.
            </summary>
            <param name="_userId"></param>
            <param name="_groupId"></param>
            <param name="_trainingUserType"></param>
            <param name="_trainUserStatus"></param>
            <param name="_trainAuditingStatus"></param>
            <param name="_trainAuditingMan"></param>
            <param name="_trainAuditingDate"></param>
            <param name="_createTime"></param>
            <param name="_courseId"></param>
            <param name="_trainAuditingDescription"></param>
            <param name="_trainingFinishTime"></param>
            <param name="_testFinishTime"></param>
            <param name="_investigationFinishTime"></param>
            <param name="_studyFinishTime"></param>
            <param name="_trainTimeUseCredit"></param>
            <param name="_trainTimeAddPoint"></param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.CreateTrainingUser(System.String,System.String,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.TrainingUser"/> instance.
            </summary>
            <param name="_userId"></param>
            <param name="_groupId"></param>
            <param name="_trainingUserType"></param>
            <param name="_trainUserStatus"></param>
            <param name="_trainAuditingStatus"></param>
            <param name="_trainAuditingMan"></param>
            <param name="_trainAuditingDate"></param>
            <param name="_createTime"></param>
            <param name="_courseId"></param>
            <param name="_trainAuditingDescription"></param>
            <param name="_trainingFinishTime"></param>
            <param name="_testFinishTime"></param>
            <param name="_investigationFinishTime"></param>
            <param name="_studyFinishTime"></param>
            <param name="_trainTimeUseCredit"></param>
            <param name="_trainTimeAddPoint"></param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed TrainingUser Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.Copy">
            <summary>
              Returns a Typed TrainingUser Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.DeepCopy">
            <summary>
              Returns a Typed TrainingUser Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.IsPropertyChanged(GE.MyLearning.BL.TrainingUserColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.GetOriginalEntity">
            <summary>
              Returns a TrainingUser Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.TrainingUserBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.TrainingUserBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.Equals(GE.MyLearning.BL.TrainingUserBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.TrainingUserBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.ValueEquals(GE.MyLearning.BL.TrainingUserBase,GE.MyLearning.BL.TrainingUserBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.TrainingUserBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.TrainingUserBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.TrainingUserBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.OnColumnChanging(GE.MyLearning.BL.TrainingUserColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.TrainingUserBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.TrainingUserColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.OnColumnChanged(GE.MyLearning.BL.TrainingUserColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.TrainingUserBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.TrainingUserColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.OnColumnChanging(GE.MyLearning.BL.TrainingUserColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.TrainingUserBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.TrainingUserColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.OnColumnChanged(GE.MyLearning.BL.TrainingUserColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.TrainingUserBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.TrainingUserColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.TrainingUserBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.TrainingUserBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainUserId">
            <summary>
            	Gets or sets the TrainUserId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.UserId">
            <summary>
            	Gets or sets the UserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.GroupId">
            <summary>
            	Gets or sets the GroupId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainingUserType">
            <summary>
            	Gets or sets the TrainingUserType property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainUserStatus">
            <summary>
            	Gets or sets the TrainUserStatus property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainAuditingStatus">
            <summary>
            	Gets or sets the TrainAuditingStatus property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTrainAuditingStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainAuditingMan">
            <summary>
            	Gets or sets the TrainAuditingMan property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainAuditingDate">
            <summary>
            	Gets or sets the TrainAuditingDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTrainAuditingDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.CreateTime">
            <summary>
            	Gets or sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreateTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.CourseId">
            <summary>
            	Gets or sets the CourseId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainAuditingDescription">
            <summary>
            	Gets or sets the TrainAuditingDescription property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainingFinishTime">
            <summary>
            	Gets or sets the TrainingFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTrainingFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TestFinishTime">
            <summary>
            	Gets or sets the TestFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTestFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.InvestigationFinishTime">
            <summary>
            	Gets or sets the InvestigationFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsInvestigationFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.StudyFinishTime">
            <summary>
            	Gets or sets the StudyFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsStudyFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainTimeUseCredit">
            <summary>
            	Gets or sets the TrainTimeUseCredit property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTrainTimeUseCreditNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainTimeAddPoint">
            <summary>
            	Gets or sets the TrainTimeAddPoint property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTrainTimeAddPointNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.TrainingUserBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.TrainingUserBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingUserBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData">
            <summary>
            	The data structure representation of the 'TrainingUser' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TrainUserId">
            <summary>			
            TrainUserID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "TrainingUser"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.GroupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TrainingUserType">
            <summary>
            TrainingUserType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TrainUserStatus">
            <summary>
            TrainUserStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TrainAuditingStatus">
            <summary>
            TrainAuditingStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TrainAuditingMan">
            <summary>
            TrainAuditingMan : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TrainAuditingDate">
            <summary>
            TrainAuditingDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.CourseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TrainAuditingDescription">
            <summary>
            TrainAuditingDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TrainingFinishTime">
            <summary>
            TrainingFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TestFinishTime">
            <summary>
            TestFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.InvestigationFinishTime">
            <summary>
            InvestigationFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.StudyFinishTime">
            <summary>
            StudyFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TrainTimeUseCredit">
            <summary>
            TrainTimeUseCredit : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.TrainTimeAddPoint">
            <summary>
            TrainTimeAddPoint : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserBase.TrainingUserEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingUserEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.TrainingUser"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserEventArgs.#ctor(GE.MyLearning.BL.TrainingUserColumn)">
            <summary>
             Initalizes a new Instance of the TrainingUserEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserEventArgs.#ctor(GE.MyLearning.BL.TrainingUserColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the TrainingUserEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserEventArgs.Column">
            <summary>
             The TrainingUserColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.TrainingUserColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingUserEventHandler">
            <summary>
             Define a delegate for all TrainingUser related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingUserComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TrainingUserComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserComparer.#ctor(GE.MyLearning.BL.TrainingUserColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:TrainingUserComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserComparer.Equals(GE.MyLearning.BL.TrainingUser,GE.MyLearning.BL.TrainingUser)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.TrainingUser"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.TrainingUser"/> to compare.</param>
            <param name="b">The second <c>TrainingUser</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserComparer.GetHashCode(GE.MyLearning.BL.TrainingUser)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserComparer.Compare(GE.MyLearning.BL.TrainingUser,GE.MyLearning.BL.TrainingUser)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingUserKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.TrainingUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserKey.#ctor">
            <summary>
            Initializes a new instance of the TrainingUserKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserKey.#ctor(GE.MyLearning.BL.TrainingUserBase)">
            <summary>
            Initializes a new instance of the TrainingUserKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the TrainingUserKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUserKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingUserKey.TrainUserId">
            <summary>
            Gets or sets the TrainUserId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingUserColumn">
            <summary>
            Enumerate the TrainingUser columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TrainUserId">
            <summary>
            TrainUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.UserId">
            <summary>
            UserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.GroupId">
            <summary>
            GroupId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TrainingUserType">
            <summary>
            TrainingUserType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TrainUserStatus">
            <summary>
            TrainUserStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TrainAuditingStatus">
            <summary>
            TrainAuditingStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TrainAuditingMan">
            <summary>
            TrainAuditingMan : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TrainAuditingDate">
            <summary>
            TrainAuditingDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TrainAuditingDescription">
            <summary>
            TrainAuditingDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TrainingFinishTime">
            <summary>
            TrainingFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TestFinishTime">
            <summary>
            TestFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.InvestigationFinishTime">
            <summary>
            InvestigationFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.StudyFinishTime">
            <summary>
            StudyFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TrainTimeUseCredit">
            <summary>
            TrainTimeUseCredit : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingUserColumn.TrainTimeAddPoint">
            <summary>
            TrainTimeAddPoint : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CallRoles">
            <summary>
             An object representation of the 'CallRoles' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.CallRoles.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.CallRoles"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlVLearningRecordExcelBase">
            <summary>
             An object representation of the 'evl_v_LearningRecordExcel' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._courseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._userName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._function">
            <summary>
            Function : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._startDate">
            <summary>
            StartDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._completedDate">
            <summary>
            CompletedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._location">
            <summary>
            Location : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._trainer">
            <summary>
            Trainer : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._courseid">
            <summary>
            courseid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._id">
            <summary>
            ID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._createdDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcelBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Int32,System.Nullable{System.DateTime})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcelBase"/> instance.
            </summary>
            <param name="_courseName"></param>
            <param name="_sso"></param>
            <param name="_userName"></param>
            <param name="_function"></param>
            <param name="_startDate"></param>
            <param name="_completedDate"></param>
            <param name="_location"></param>
            <param name="_trainer"></param>
            <param name="_courseid"></param>
            <param name="_id"></param>
            <param name="_createdDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.CreateEvlVLearningRecordExcel(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Int32,System.Nullable{System.DateTime})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcel"/> instance.
            </summary>
            <param name="_courseName"></param>
            <param name="_sso"></param>
            <param name="_userName"></param>
            <param name="_function"></param>
            <param name="_startDate"></param>
            <param name="_completedDate"></param>
            <param name="_location"></param>
            <param name="_trainer"></param>
            <param name="_courseid"></param>
            <param name="_id"></param>
            <param name="_createdDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Copy">
            <summary>
              Returns a Typed EvlVLearningRecordExcelBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Equals(GE.MyLearning.BL.EvlVLearningRecordExcelBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcelBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Equals(GE.MyLearning.BL.EvlVLearningRecordExcelBase,GE.MyLearning.BL.EvlVLearningRecordExcelBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcelBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcelBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcelBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.GetPropertyValueByName(GE.MyLearning.BL.EvlVLearningRecordExcel,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.CourseName">
            <summary>
            	Gets or Sets the CourseName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Sso">
            <summary>
            	Gets or Sets the SSO property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.UserName">
            <summary>
            	Gets or Sets the UserName property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Function">
            <summary>
            	Gets or Sets the Function property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.StartDate">
            <summary>
            	Gets or Sets the StartDate property. 
            	
            </summary>
            <value>This type is smalldatetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsStartDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.CompletedDate">
            <summary>
            	Gets or Sets the CompletedDate property. 
            	
            </summary>
            <value>This type is smalldatetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCompletedDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Location">
            <summary>
            	Gets or Sets the Location property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Trainer">
            <summary>
            	Gets or Sets the Trainer property. 
            	
            </summary>
            <value>This type is nvarchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Courseid">
            <summary>
            	Gets or Sets the courseid property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Id">
            <summary>
            	Gets or Sets the ID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.CreatedDate">
            <summary>
            	Gets or Sets the CreatedDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreatedDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.EvlVLearningRecordExcelBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordExcelBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlVLearningRecordExcelBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlVLearningRecordExcelColumn">
            <summary>
            Enumerate the EvlVLearningRecordExcel columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.Sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.Function">
            <summary>
            Function : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.StartDate">
            <summary>
            StartDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.CompletedDate">
            <summary>
            CompletedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.Location">
            <summary>
            Location : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.Trainer">
            <summary>
            Trainer : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.Courseid">
            <summary>
            courseid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.Id">
            <summary>
            ID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordExcelColumn.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EntityCache">
            <summary>
            Entity Cache provides a caching mechanism for entities on a by entity level.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityCache.GenerateConfiguration">
            <summary>
            Generates the configuration.
            </summary>
            <returns>DictionaryConfigurationSource to Configure the cache</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityCache.GenerateDefaultCacheManagerSettings">
            <summary>
            Generates the default cache manager settings.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityCache.RemoveItem(System.String)">
            <summary>
            Removes the item.
            </summary>
            <param name="id">The id.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityCache.FlushCacheManager">
            <summary>
            Flushes the cache manager.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityCache.FlushCache">
            <summary>
            Flushes the cache.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityCache.AddCache(System.String,System.Object)">
            <summary>
            Adds the cache.
            </summary>
            <param name="id">The id.</param>
            <param name="entity">The entity.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityCache.GetItem``1(System.String)">
            <summary>
            Gets the item.
            </summary>
            <param name="id">The id.</param>
            <returns></returns> 
        </member>
        <member name="P:GE.MyLearning.BL.EntityCache.CacheManager">
            <summary>
            Gets the cache manager.
            </summary>
            <value>The cache manager.</value>		
        </member>
        <member name="P:GE.MyLearning.BL.EntityCache.ConfigurationFile">
            <summary>
            Gets or sets the configuration file.
            </summary>
            <value>The configuration file.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityCache.CacheManagerFactory">
            <summary>
            Gets or sets the cache manager factory.
            </summary>
            <value>The cache manager factory.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityCache.CacheManagerKey">
            <summary>
            Assigns the Default CacheManagerKey To Be Used.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.RolePermissionBase">
            <summary>
             An object representation of the 'RolePermission' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IRolePermission">
            <summary>
            	The data structure representation of the 'RolePermission' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IRolePermission.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IRolePermission.PermissionId">
            <summary>			
            PermissionID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "RolePermission"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IRolePermission.OriginalPermissionId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IRolePermission.RoleId">
            <summary>			
            RoleID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "RolePermission"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IRolePermission.OriginalRoleId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.RolePermissionBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.#ctor(System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.RolePermissionBase"/> instance.
            </summary>
            <param name="_permissionId"></param>
            <param name="_roleId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.CreateRolePermission(System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.RolePermission"/> instance.
            </summary>
            <param name="_permissionId"></param>
            <param name="_roleId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed RolePermission Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.Copy">
            <summary>
              Returns a Typed RolePermission Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.DeepCopy">
            <summary>
              Returns a Typed RolePermission Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.IsPropertyChanged(GE.MyLearning.BL.RolePermissionColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.GetOriginalEntity">
            <summary>
              Returns a RolePermission Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.RolePermissionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.RolePermissionBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.Equals(GE.MyLearning.BL.RolePermissionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.RolePermissionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.ValueEquals(GE.MyLearning.BL.RolePermissionBase,GE.MyLearning.BL.RolePermissionBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.RolePermissionBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.RolePermissionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.RolePermissionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.OnColumnChanging(GE.MyLearning.BL.RolePermissionColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.RolePermissionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.RolePermissionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.OnColumnChanged(GE.MyLearning.BL.RolePermissionColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.RolePermissionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.RolePermissionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.OnColumnChanging(GE.MyLearning.BL.RolePermissionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.RolePermissionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.RolePermissionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.OnColumnChanged(GE.MyLearning.BL.RolePermissionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.RolePermissionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.RolePermissionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.RolePermissionBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.RolePermissionBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.PermissionId">
            <summary>
            	Gets or sets the PermissionId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.OriginalPermissionId">
            <summary>
            	Get the original value of the PermissionID property.
            	
            </summary>
            <remarks>This is the original value of the PermissionID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.RoleId">
            <summary>
            	Gets or sets the RoleId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.OriginalRoleId">
            <summary>
            	Get the original value of the RoleID property.
            	
            </summary>
            <remarks>This is the original value of the RoleID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.RolePermissionBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.RolePermissionBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.RolePermissionBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.RolePermissionBase.RolePermissionEntityData">
            <summary>
            	The data structure representation of the 'RolePermission' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionBase.RolePermissionEntityData.PermissionId">
            <summary>			
            PermissionID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "RolePermission"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionBase.RolePermissionEntityData.OriginalPermissionId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionBase.RolePermissionEntityData.RoleId">
            <summary>			
            RoleID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "RolePermission"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionBase.RolePermissionEntityData.OriginalRoleId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.RolePermissionEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionBase.RolePermissionEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionBase.RolePermissionEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.RolePermissionEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.RolePermission"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionEventArgs.#ctor(GE.MyLearning.BL.RolePermissionColumn)">
            <summary>
             Initalizes a new Instance of the RolePermissionEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionEventArgs.#ctor(GE.MyLearning.BL.RolePermissionColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the RolePermissionEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionEventArgs.Column">
            <summary>
             The RolePermissionColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.RolePermissionColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.RolePermissionEventHandler">
            <summary>
             Define a delegate for all RolePermission related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.RolePermissionComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RolePermissionComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionComparer.#ctor(GE.MyLearning.BL.RolePermissionColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:RolePermissionComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionComparer.Equals(GE.MyLearning.BL.RolePermission,GE.MyLearning.BL.RolePermission)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.RolePermission"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.RolePermission"/> to compare.</param>
            <param name="b">The second <c>RolePermission</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionComparer.GetHashCode(GE.MyLearning.BL.RolePermission)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionComparer.Compare(GE.MyLearning.BL.RolePermission,GE.MyLearning.BL.RolePermission)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.RolePermissionKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.RolePermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionKey.#ctor">
            <summary>
            Initializes a new instance of the RolePermissionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionKey.#ctor(GE.MyLearning.BL.RolePermissionBase)">
            <summary>
            Initializes a new instance of the RolePermissionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionKey.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the RolePermissionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolePermissionKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionKey.PermissionId">
            <summary>
            Gets or sets the PermissionId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolePermissionKey.RoleId">
            <summary>
            Gets or sets the RoleId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.RolePermissionColumn">
            <summary>
            Enumerate the RolePermission columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionColumn.PermissionId">
            <summary>
            PermissionId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolePermissionColumn.RoleId">
            <summary>
            RoleId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwTrainingUser">
            <summary>
             An object representation of the 'VW_TrainingUser' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.VwTrainingUserBase">
            <summary>
             An object representation of the 'VW_TrainingUser' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._trainUserId">
            <summary>
            TrainUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._trainingUserType">
            <summary>
            TrainingUserType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._trainUserStatus">
            <summary>
            TrainUserStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._trainAuditingStatus">
            <summary>
            TrainAuditingStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._trainAuditingMan">
            <summary>
            TrainAuditingMan : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._trainAuditingDate">
            <summary>
            TrainAuditingDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._createTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._trainAuditingDescription">
            <summary>
            TrainAuditingDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._userName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._userCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._feBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._groupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._trainingFinishTime">
            <summary>
            TrainingFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._testFinishTime">
            <summary>
            TestFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._investigationFinishTime">
            <summary>
            InvestigationFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._studyFinishTime">
            <summary>
            StudyFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._trainTimeUseCredit">
            <summary>
            TrainTimeUseCredit : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._trainTimeAddPoint">
            <summary>
            TrainTimeAddPoint : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._courseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwTrainingUserBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.#ctor(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwTrainingUserBase"/> instance.
            </summary>
            <param name="_trainUserId"></param>
            <param name="_trainingUserType"></param>
            <param name="_trainUserStatus"></param>
            <param name="_trainAuditingStatus"></param>
            <param name="_trainAuditingMan"></param>
            <param name="_trainAuditingDate"></param>
            <param name="_createTime"></param>
            <param name="_trainAuditingDescription"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_email"></param>
            <param name="_feBadgeId"></param>
            <param name="_groupId"></param>
            <param name="_trainingFinishTime"></param>
            <param name="_testFinishTime"></param>
            <param name="_investigationFinishTime"></param>
            <param name="_studyFinishTime"></param>
            <param name="_trainTimeUseCredit"></param>
            <param name="_trainTimeAddPoint"></param>
            <param name="_courseId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.CreateVwTrainingUser(System.Int32,System.Int32,System.Int32,System.Nullable{System.Int32},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwTrainingUser"/> instance.
            </summary>
            <param name="_trainUserId"></param>
            <param name="_trainingUserType"></param>
            <param name="_trainUserStatus"></param>
            <param name="_trainAuditingStatus"></param>
            <param name="_trainAuditingMan"></param>
            <param name="_trainAuditingDate"></param>
            <param name="_createTime"></param>
            <param name="_trainAuditingDescription"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_email"></param>
            <param name="_feBadgeId"></param>
            <param name="_groupId"></param>
            <param name="_trainingFinishTime"></param>
            <param name="_testFinishTime"></param>
            <param name="_investigationFinishTime"></param>
            <param name="_studyFinishTime"></param>
            <param name="_trainTimeUseCredit"></param>
            <param name="_trainTimeAddPoint"></param>
            <param name="_courseId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.Copy">
            <summary>
              Returns a Typed VwTrainingUserBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.Equals(GE.MyLearning.BL.VwTrainingUserBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwTrainingUserBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.Equals(GE.MyLearning.BL.VwTrainingUserBase,GE.MyLearning.BL.VwTrainingUserBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwTrainingUserBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwTrainingUserBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwTrainingUserBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.GetPropertyValueByName(GE.MyLearning.BL.VwTrainingUser,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TrainUserId">
            <summary>
            	Gets or Sets the TrainUserID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TrainingUserType">
            <summary>
            	Gets or Sets the TrainingUserType property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TrainUserStatus">
            <summary>
            	Gets or Sets the TrainUserStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TrainAuditingStatus">
            <summary>
            	Gets or Sets the TrainAuditingStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTrainAuditingStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TrainAuditingMan">
            <summary>
            	Gets or Sets the TrainAuditingMan property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TrainAuditingDate">
            <summary>
            	Gets or Sets the TrainAuditingDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTrainAuditingDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.CreateTime">
            <summary>
            	Gets or Sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreateTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TrainAuditingDescription">
            <summary>
            	Gets or Sets the TrainAuditingDescription property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.UserName">
            <summary>
            	Gets or Sets the UserName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.UserCnName">
            <summary>
            	Gets or Sets the UserCNName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.Email">
            <summary>
            	Gets or Sets the Email property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.FeBadgeId">
            <summary>
            	Gets or Sets the FEBadgeID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.GroupId">
            <summary>
            	Gets or Sets the GroupID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TrainingFinishTime">
            <summary>
            	Gets or Sets the TrainingFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTrainingFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TestFinishTime">
            <summary>
            	Gets or Sets the TestFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsTestFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.InvestigationFinishTime">
            <summary>
            	Gets or Sets the InvestigationFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsInvestigationFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.StudyFinishTime">
            <summary>
            	Gets or Sets the StudyFinishTime property. 
            	
            </summary>
            <value>This type is smalldatetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsStudyFinishTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TrainTimeUseCredit">
            <summary>
            	Gets or Sets the TrainTimeUseCredit property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTrainTimeUseCreditNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.TrainTimeAddPoint">
            <summary>
            	Gets or Sets the TrainTimeAddPoint property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsTrainTimeAddPointNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.CourseId">
            <summary>
            	Gets or Sets the CourseID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwTrainingUserBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwTrainingUserBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwTrainingUserBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUser.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwTrainingUser"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwEvlUser">
            <summary>
             An object representation of the 'VW_EvlUser' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.VwEvlUserBase">
            <summary>
             An object representation of the 'VW_EvlUser' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserBase._userCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserBase._name">
            <summary>
            name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserBase._validdateStart">
            <summary>
            validdateStart : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserBase._validdateend">
            <summary>
            validdateend : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserBase._isused">
            <summary>
            isused : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserBase._evltimes">
            <summary>
            evltimes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwEvlUserBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.#ctor(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwEvlUserBase"/> instance.
            </summary>
            <param name="_userId"></param>
            <param name="_userCnName"></param>
            <param name="_name"></param>
            <param name="_validdateStart"></param>
            <param name="_validdateend"></param>
            <param name="_isused"></param>
            <param name="_evltimes"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.CreateVwEvlUser(System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwEvlUser"/> instance.
            </summary>
            <param name="_userId"></param>
            <param name="_userCnName"></param>
            <param name="_name"></param>
            <param name="_validdateStart"></param>
            <param name="_validdateend"></param>
            <param name="_isused"></param>
            <param name="_evltimes"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.Copy">
            <summary>
              Returns a Typed VwEvlUserBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.Equals(GE.MyLearning.BL.VwEvlUserBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwEvlUserBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.Equals(GE.MyLearning.BL.VwEvlUserBase,GE.MyLearning.BL.VwEvlUserBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwEvlUserBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwEvlUserBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwEvlUserBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.GetPropertyValueByName(GE.MyLearning.BL.VwEvlUser,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUserBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.UserCnName">
            <summary>
            	Gets or Sets the UserCNName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.Name">
            <summary>
            	Gets or Sets the name property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.ValiddateStart">
            <summary>
            	Gets or Sets the validdateStart property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsValiddateStartNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.Validdateend">
            <summary>
            	Gets or Sets the validdateend property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsValiddateendNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.Isused">
            <summary>
            	Gets or Sets the isused property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.Evltimes">
            <summary>
            	Gets or Sets the evltimes property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwEvlUserBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwEvlUserBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwEvlUserBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwEvlUser.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwEvlUser"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Expressions">
            <summary>
            Hold a list of <see cref="T:GE.MyLearning.BL.Expression"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.Expressions.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <c>Expressions</c> class.
            </summary>
            <param name="holeFilterExpression">the filter expression that will be parsed to create the collection.</param>
        </member>
        <member name="M:GE.MyLearning.BL.Expressions.#ctor">
            <summary>
            Initializes a new instance of the <c>Expressions</c> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.Expressions.SplitFilter(System.String)">
            <summary>
            This method split a string filter expression anc create <c>EntityFilter</c> instances.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.Expressions.Item(System.Int32)">
            <summary>
            Get the <see cref="T:GE.MyLearning.BL.Expression"/> at the specified index.
            </summary>
            <param name="Index">The index of the expression in the collection.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.Expressions.Add(GE.MyLearning.BL.Expression)">
            <summary>
            Adds the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.Expressions.Remove(GE.MyLearning.BL.Expression)">
            <summary>
            Removes the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:GE.MyLearning.BL.Expression">
            <summary>
             Reprensents an expression to filter a collection.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.Expression.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.Expression"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.Expression.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.Expression"/> class.
            </summary>
            <param name="PropValue">The prop value.</param>
            <param name="Opr">The opr.</param>
            <param name="Usrvalue">The usrvalue.</param>
        </member>
        <member name="M:GE.MyLearning.BL.Expression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.Expression"/> class.
            </summary>
            <param name="wholeExpression">The whole expression.</param>
        </member>
        <member name="P:GE.MyLearning.BL.Expression.PropertyName">
            <summary>
            Gets or sets the name of the property.
            </summary>
            <value>The name of the property.</value>
        </member>
        <member name="P:GE.MyLearning.BL.Expression.Operator">
            <summary>
            Gets or sets the operator.
            </summary>
            <value>The operator.</value>
        </member>
        <member name="P:GE.MyLearning.BL.Expression.UserValue">
            <summary>
            Gets or sets the user value.
            </summary>
            <value>The user value.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EntityFilter`2">
            <summary>
            Represents a filter.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EntityFilter&lt;T, Entity&gt;"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.#ctor(`0,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EntityFilter&lt;T, Entity&gt;"/> class.
            </summary>
            <param name="objToFilter">The obj to filter.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.String,System.String,System.String)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.Int32,System.String,System.Int32)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.Decimal,System.String,System.Int32)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.Guid,System.String,System.Guid)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.Double,System.String,System.Double)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.Int64,System.String,System.Int64)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.Decimal,System.String,System.Decimal)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.DateTime,System.String,System.DateTime)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.Boolean,System.String,System.Boolean)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">if set to <c>true</c> [object property value].</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">if set to <c>true</c> [user value].</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.Object,System.String,System.Object[])">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">array of the user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.String,System.Object)">
            <summary>
            Determines whether the specified operator is ok.
            </summary>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified operator is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.CorrectUserValue(System.String)">
            <summary>
            Corrects the user value.
            </summary>
            <param name="UserValue">The user value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.IsOk(System.Object,System.String,System.String)">
            <summary>
            Determines whether the specified object property value is ok.
            </summary>
            <param name="ObjectPropertyValue">The object property value.</param>
            <param name="Operator">The operator.</param>
            <param name="UserValue">The user value.</param>
            <returns>
            	<c>true</c> if the specified object property value is ok; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityFilter`2.ApplyFilter(`0,System.String)">
            <summary>
            Applies the filter.
            </summary>
            <param name="ObjectToFilter">The object to filter.</param>
            <param name="StrFilter">The STR filter.</param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlModelBase">
            <summary>
             An object representation of the 'evl_model' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlModel">
            <summary>
            	The data structure representation of the 'evl_model' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlModel.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlModel.ModelId">
            <summary>			
            model_id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_model"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlModel.Name">
            <summary>
            name : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlModel.ValiddateStart">
            <summary>
            validdateStart : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlModel.Validdateend">
            <summary>
            validdateend : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlModel.Evltimes">
            <summary>
            evltimes : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlModel.Isused">
            <summary>
            isused : 0:未启用 1:已启用
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlModelBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlModelBase"/> instance.
            </summary>
            <param name="_name"></param>
            <param name="_validdateStart"></param>
            <param name="_validdateend"></param>
            <param name="_evltimes"></param>
            <param name="_isused">0:未启用 1:已启用</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.CreateEvlModel(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Int32)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlModel"/> instance.
            </summary>
            <param name="_name"></param>
            <param name="_validdateStart"></param>
            <param name="_validdateend"></param>
            <param name="_evltimes"></param>
            <param name="_isused">0:未启用 1:已启用</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlModel Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.Copy">
            <summary>
              Returns a Typed EvlModel Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.DeepCopy">
            <summary>
              Returns a Typed EvlModel Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.IsPropertyChanged(GE.MyLearning.BL.EvlModelColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.GetOriginalEntity">
            <summary>
              Returns a EvlModel Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlModelBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlModelBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.Equals(GE.MyLearning.BL.EvlModelBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlModelBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.ValueEquals(GE.MyLearning.BL.EvlModelBase,GE.MyLearning.BL.EvlModelBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlModelBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlModelBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlModelBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.OnColumnChanging(GE.MyLearning.BL.EvlModelColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlModelBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlModelColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.OnColumnChanged(GE.MyLearning.BL.EvlModelColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlModelBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlModelColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.OnColumnChanging(GE.MyLearning.BL.EvlModelColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlModelBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlModelColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.OnColumnChanged(GE.MyLearning.BL.EvlModelColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlModelBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlModelColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlModelBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlModelBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.ModelId">
            <summary>
            	Gets or sets the ModelId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.ValiddateStart">
            <summary>
            	Gets or sets the ValiddateStart property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsValiddateStartNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.Validdateend">
            <summary>
            	Gets or sets the Validdateend property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsValiddateendNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.Evltimes">
            <summary>
            	Gets or sets the Evltimes property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.Isused">
            <summary>
            	Gets or sets the Isused property. 
            	0:未启用 1:已启用
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlModelBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlModelBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlModelBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlModelBase.EvlModelEntityData">
            <summary>
            	The data structure representation of the 'evl_model' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase.EvlModelEntityData.ModelId">
            <summary>			
            model_id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_model"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase.EvlModelEntityData.Name">
            <summary>
            name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase.EvlModelEntityData.ValiddateStart">
            <summary>
            validdateStart : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase.EvlModelEntityData.Validdateend">
            <summary>
            validdateend : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase.EvlModelEntityData.Evltimes">
            <summary>
            evltimes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelBase.EvlModelEntityData.Isused">
            <summary>
            isused : 0:未启用 1:已启用
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.EvlModelEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelBase.EvlModelEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelBase.EvlModelEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.EvlModelEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlModel"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelEventArgs.#ctor(GE.MyLearning.BL.EvlModelColumn)">
            <summary>
             Initalizes a new Instance of the EvlModelEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelEventArgs.#ctor(GE.MyLearning.BL.EvlModelColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlModelEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelEventArgs.Column">
            <summary>
             The EvlModelColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlModelColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlModelEventHandler">
            <summary>
             Define a delegate for all EvlModel related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlModelComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlModelComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelComparer.#ctor(GE.MyLearning.BL.EvlModelColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlModelComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelComparer.Equals(GE.MyLearning.BL.EvlModel,GE.MyLearning.BL.EvlModel)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlModel"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlModel"/> to compare.</param>
            <param name="b">The second <c>EvlModel</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelComparer.GetHashCode(GE.MyLearning.BL.EvlModel)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelComparer.Compare(GE.MyLearning.BL.EvlModel,GE.MyLearning.BL.EvlModel)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlModelKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlModel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelKey.#ctor">
            <summary>
            Initializes a new instance of the EvlModelKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelKey.#ctor(GE.MyLearning.BL.EvlModelBase)">
            <summary>
            Initializes a new instance of the EvlModelKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlModelKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlModelKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlModelKey.ModelId">
            <summary>
            Gets or sets the ModelId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlModelColumn">
            <summary>
            Enumerate the EvlModel columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelColumn.ModelId">
            <summary>
            ModelId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelColumn.Name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelColumn.ValiddateStart">
            <summary>
            ValiddateStart : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelColumn.Validdateend">
            <summary>
            Validdateend : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelColumn.Evltimes">
            <summary>
            Evltimes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlModelColumn.Isused">
            <summary>
            Isused : 0:未启用 1:已启用
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Menus">
            <summary>
             An object representation of the 'Menus' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.Menus.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Menus"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryManagerBase">
            <summary>
             An object representation of the 'VU_Catogary_Manager' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuCatogaryManagerBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.#ctor(System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuCatogaryManagerBase"/> instance.
            </summary>
            <param name="_catogaryId"></param>
            <param name="_owner"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.CreateVuCatogaryManager(System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> instance.
            </summary>
            <param name="_catogaryId"></param>
            <param name="_owner"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuCatogaryManager Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.Copy">
            <summary>
              Returns a Typed VuCatogaryManager Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.DeepCopy">
            <summary>
              Returns a Typed VuCatogaryManager Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.IsPropertyChanged(GE.MyLearning.BL.VuCatogaryManagerColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.GetOriginalEntity">
            <summary>
              Returns a VuCatogaryManager Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuCatogaryManagerBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuCatogaryManagerBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.Equals(GE.MyLearning.BL.VuCatogaryManagerBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuCatogaryManagerBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.ValueEquals(GE.MyLearning.BL.VuCatogaryManagerBase,GE.MyLearning.BL.VuCatogaryManagerBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuCatogaryManagerBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuCatogaryManagerBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuCatogaryManagerBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.OnColumnChanging(GE.MyLearning.BL.VuCatogaryManagerColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryManagerBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryManagerColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.OnColumnChanged(GE.MyLearning.BL.VuCatogaryManagerColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryManagerBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryManagerColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.OnColumnChanging(GE.MyLearning.BL.VuCatogaryManagerColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryManagerBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryManagerColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.OnColumnChanged(GE.MyLearning.BL.VuCatogaryManagerColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryManagerBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryManagerColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryManagerBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryManagerBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.CatogaryId">
            <summary>
            	Gets or sets the CatogaryId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCatogaryIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.Owner">
            <summary>
            	Gets or sets the Owner property. 
            	
            </summary>
            <value>This type is char.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryManagerBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryManagerBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryManagerBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryManagerBase.VuCatogaryManagerEntityData">
            <summary>
            	The data structure representation of the 'VU_Catogary_Manager' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerBase.VuCatogaryManagerEntityData.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_Catogary_Manager"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerBase.VuCatogaryManagerEntityData.CatogaryId">
            <summary>
            CatogaryID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerBase.VuCatogaryManagerEntityData.Owner">
            <summary>
            Owner : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.VuCatogaryManagerEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerBase.VuCatogaryManagerEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerBase.VuCatogaryManagerEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryManagerEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerEventArgs.#ctor(GE.MyLearning.BL.VuCatogaryManagerColumn)">
            <summary>
             Initalizes a new Instance of the VuCatogaryManagerEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerEventArgs.#ctor(GE.MyLearning.BL.VuCatogaryManagerColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuCatogaryManagerEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerEventArgs.Column">
            <summary>
             The VuCatogaryManagerColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuCatogaryManagerColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryManagerEventHandler">
            <summary>
             Define a delegate for all VuCatogaryManager related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryManagerComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuCatogaryManagerComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerComparer.#ctor(GE.MyLearning.BL.VuCatogaryManagerColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuCatogaryManagerComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerComparer.Equals(GE.MyLearning.BL.VuCatogaryManager,GE.MyLearning.BL.VuCatogaryManager)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuCatogaryManager"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuCatogaryManager"/> to compare.</param>
            <param name="b">The second <c>VuCatogaryManager</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerComparer.GetHashCode(GE.MyLearning.BL.VuCatogaryManager)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerComparer.Compare(GE.MyLearning.BL.VuCatogaryManager,GE.MyLearning.BL.VuCatogaryManager)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryManagerKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerKey.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryManagerKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerKey.#ctor(GE.MyLearning.BL.VuCatogaryManagerBase)">
            <summary>
            Initializes a new instance of the VuCatogaryManagerKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuCatogaryManagerKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManagerKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryManagerKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryManagerColumn">
            <summary>
            Enumerate the VuCatogaryManager columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerColumn.CatogaryId">
            <summary>
            CatogaryId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryManagerColumn.Owner">
            <summary>
            Owner : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserGroup">
            <summary>
             An object representation of the 'UserGroup' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.UserGroupBase">
            <summary>
             An object representation of the 'UserGroup' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.UserGroupBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.#ctor(System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.UserGroupBase"/> instance.
            </summary>
            <param name="_groupId"></param>
            <param name="_userId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.CreateUserGroup(System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.UserGroup"/> instance.
            </summary>
            <param name="_groupId"></param>
            <param name="_userId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed UserGroup Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.Copy">
            <summary>
              Returns a Typed UserGroup Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.DeepCopy">
            <summary>
              Returns a Typed UserGroup Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.IsPropertyChanged(GE.MyLearning.BL.UserGroupColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.GetOriginalEntity">
            <summary>
              Returns a UserGroup Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.UserGroupBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.UserGroupBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.Equals(GE.MyLearning.BL.UserGroupBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.UserGroupBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.ValueEquals(GE.MyLearning.BL.UserGroupBase,GE.MyLearning.BL.UserGroupBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.UserGroupBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.UserGroupBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.UserGroupBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.OnColumnChanging(GE.MyLearning.BL.UserGroupColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserGroupBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserGroupColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.OnColumnChanged(GE.MyLearning.BL.UserGroupColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserGroupBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserGroupColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.OnColumnChanging(GE.MyLearning.BL.UserGroupColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserGroupBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserGroupColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.OnColumnChanged(GE.MyLearning.BL.UserGroupColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserGroupBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserGroupColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.UserGroupBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.UserGroupBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.GroupId">
            <summary>
            	Gets or sets the GroupId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.UserId">
            <summary>
            	Gets or sets the UserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.AutoId">
            <summary>
            	Gets or sets the AutoId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.UserGroupBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.UserGroupBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserGroupBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.UserGroupBase.UserGroupEntityData">
            <summary>
            	The data structure representation of the 'UserGroup' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupBase.UserGroupEntityData.AutoId">
            <summary>			
            AutoID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "UserGroup"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupBase.UserGroupEntityData.GroupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupBase.UserGroupEntityData.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.UserGroupEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupBase.UserGroupEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupBase.UserGroupEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroup.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.UserGroup"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingLog">
            <summary>
             An object representation of the 'TrainingLog' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.TrainingLogBase">
            <summary>
             An object representation of the 'TrainingLog' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ITrainingLog">
            <summary>
            	The data structure representation of the 'TrainingLog' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ITrainingLog.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingLog.TrainingLogId">
            <summary>			
            TrainingLogID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "TrainingLog"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingLog.LogBeginTime">
            <summary>
            LogBeginTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingLog.LogEndTime">
            <summary>
            LogEndTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingLog.TrainingTime">
            <summary>
            TrainingTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingLog.MachineIp">
            <summary>
            MachineIP : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingLog.TrainUserId">
            <summary>
            TrainUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingLog.SessionId">
            <summary>
            SessionID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingLog.CourseWareId">
            <summary>
            CourseWareID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ITrainingLog.CourseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.TrainingLogBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.#ctor(System.DateTime,System.DateTime,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.TrainingLogBase"/> instance.
            </summary>
            <param name="_logBeginTime"></param>
            <param name="_logEndTime"></param>
            <param name="_trainingTime"></param>
            <param name="_machineIp"></param>
            <param name="_trainUserId"></param>
            <param name="_sessionId"></param>
            <param name="_courseWareId"></param>
            <param name="_courseId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.CreateTrainingLog(System.DateTime,System.DateTime,System.Int32,System.String,System.Int32,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.TrainingLog"/> instance.
            </summary>
            <param name="_logBeginTime"></param>
            <param name="_logEndTime"></param>
            <param name="_trainingTime"></param>
            <param name="_machineIp"></param>
            <param name="_trainUserId"></param>
            <param name="_sessionId"></param>
            <param name="_courseWareId"></param>
            <param name="_courseId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed TrainingLog Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.Copy">
            <summary>
              Returns a Typed TrainingLog Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.DeepCopy">
            <summary>
              Returns a Typed TrainingLog Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.IsPropertyChanged(GE.MyLearning.BL.TrainingLogColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.GetOriginalEntity">
            <summary>
              Returns a TrainingLog Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.TrainingLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.TrainingLogBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.Equals(GE.MyLearning.BL.TrainingLogBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.TrainingLogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.ValueEquals(GE.MyLearning.BL.TrainingLogBase,GE.MyLearning.BL.TrainingLogBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.TrainingLogBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.TrainingLogBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.TrainingLogBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.OnColumnChanging(GE.MyLearning.BL.TrainingLogColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.TrainingLogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.TrainingLogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.OnColumnChanged(GE.MyLearning.BL.TrainingLogColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.TrainingLogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.TrainingLogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.OnColumnChanging(GE.MyLearning.BL.TrainingLogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.TrainingLogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.TrainingLogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.OnColumnChanged(GE.MyLearning.BL.TrainingLogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.TrainingLogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.TrainingLogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.TrainingLogBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.TrainingLogBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.TrainingLogId">
            <summary>
            	Gets or sets the TrainingLogId property. 
            	
            </summary>
            <value>This type is bigint.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.LogBeginTime">
            <summary>
            	Gets or sets the LogBeginTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.LogEndTime">
            <summary>
            	Gets or sets the LogEndTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.TrainingTime">
            <summary>
            	Gets or sets the TrainingTime property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.MachineIp">
            <summary>
            	Gets or sets the MachineIp property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.TrainUserId">
            <summary>
            	Gets or sets the TrainUserId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.SessionId">
            <summary>
            	Gets or sets the SessionId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.CourseWareId">
            <summary>
            	Gets or sets the CourseWareId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.CourseId">
            <summary>
            	Gets or sets the CourseId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.TrainingLogBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.TrainingLogBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingLogBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData">
            <summary>
            	The data structure representation of the 'TrainingLog' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.TrainingLogId">
            <summary>			
            TrainingLogID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "TrainingLog"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.LogBeginTime">
            <summary>
            LogBeginTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.LogEndTime">
            <summary>
            LogEndTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.TrainingTime">
            <summary>
            TrainingTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.MachineIp">
            <summary>
            MachineIP : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.TrainUserId">
            <summary>
            TrainUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.SessionId">
            <summary>
            SessionID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.CourseWareId">
            <summary>
            CourseWareID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.CourseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogBase.TrainingLogEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLog.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.TrainingLog"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwUserGroupBase">
            <summary>
             An object representation of the 'VW_UserGroup' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._groupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._groupName">
            <summary>
            GroupName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._groupStatus">
            <summary>
            GroupStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._leaderUserId">
            <summary>
            LeaderUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._userName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._userCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._feBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwUserGroupBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.#ctor(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwUserGroupBase"/> instance.
            </summary>
            <param name="_groupId"></param>
            <param name="_groupName"></param>
            <param name="_description"></param>
            <param name="_groupStatus"></param>
            <param name="_leaderUserId"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_email"></param>
            <param name="_feBadgeId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.CreateVwUserGroup(System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwUserGroup"/> instance.
            </summary>
            <param name="_groupId"></param>
            <param name="_groupName"></param>
            <param name="_description"></param>
            <param name="_groupStatus"></param>
            <param name="_leaderUserId"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_email"></param>
            <param name="_feBadgeId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.Copy">
            <summary>
              Returns a Typed VwUserGroupBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.Equals(GE.MyLearning.BL.VwUserGroupBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwUserGroupBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.Equals(GE.MyLearning.BL.VwUserGroupBase,GE.MyLearning.BL.VwUserGroupBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwUserGroupBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwUserGroupBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwUserGroupBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.GetPropertyValueByName(GE.MyLearning.BL.VwUserGroup,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.GroupId">
            <summary>
            	Gets or Sets the GroupID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.GroupName">
            <summary>
            	Gets or Sets the GroupName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.Description">
            <summary>
            	Gets or Sets the Description property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.GroupStatus">
            <summary>
            	Gets or Sets the GroupStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.LeaderUserId">
            <summary>
            	Gets or Sets the LeaderUserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.UserName">
            <summary>
            	Gets or Sets the UserName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.UserCnName">
            <summary>
            	Gets or Sets the UserCNName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.Email">
            <summary>
            	Gets or Sets the Email property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.FeBadgeId">
            <summary>
            	Gets or Sets the FEBadgeID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwUserGroupBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwUserGroupBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwUserGroupColumn">
            <summary>
            Enumerate the VwUserGroup columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupColumn.GroupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupColumn.GroupName">
            <summary>
            GroupName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupColumn.GroupStatus">
            <summary>
            GroupStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupColumn.LeaderUserId">
            <summary>
            LeaderUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupColumn.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupColumn.Email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupColumn.FeBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstitutes">
            <summary>
             An object representation of the 'VW_Institutes' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.VwInstitutesBase">
            <summary>
             An object representation of the 'VW_Institutes' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._instituteId">
            <summary>
            InstituteID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._instituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._instituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._createtime">
            <summary>
            Createtime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._createUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._userName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._userCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._feBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstitutesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstitutesBase"/> instance.
            </summary>
            <param name="_instituteId"></param>
            <param name="_instituteName"></param>
            <param name="_description"></param>
            <param name="_instituteDean"></param>
            <param name="_createtime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_feBadgeId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.CreateVwInstitutes(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwInstitutes"/> instance.
            </summary>
            <param name="_instituteId"></param>
            <param name="_instituteName"></param>
            <param name="_description"></param>
            <param name="_instituteDean"></param>
            <param name="_createtime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_feBadgeId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.Copy">
            <summary>
              Returns a Typed VwInstitutesBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.Equals(GE.MyLearning.BL.VwInstitutesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwInstitutesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.Equals(GE.MyLearning.BL.VwInstitutesBase,GE.MyLearning.BL.VwInstitutesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwInstitutesBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwInstitutesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwInstitutesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.GetPropertyValueByName(GE.MyLearning.BL.VwInstitutes,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.InstituteId">
            <summary>
            	Gets or Sets the InstituteID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.InstituteName">
            <summary>
            	Gets or Sets the InstituteName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.Description">
            <summary>
            	Gets or Sets the Description property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.InstituteDean">
            <summary>
            	Gets or Sets the InstituteDean property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.Createtime">
            <summary>
            	Gets or Sets the Createtime property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreatetimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.CreateUserId">
            <summary>
            	Gets or Sets the CreateUserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.Status">
            <summary>
            	Gets or Sets the Status property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.UserName">
            <summary>
            	Gets or Sets the UserName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.UserCnName">
            <summary>
            	Gets or Sets the UserCNName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.FeBadgeId">
            <summary>
            	Gets or Sets the FEBadgeID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwInstitutesBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwInstitutesBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwInstitutesBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwInstitutes.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstitutes"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstituteDegreeCourses">
            <summary>
             An object representation of the 'VW_InstituteDegreeCourses' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeCourses.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCourses"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlVScoreBase">
            <summary>
             An object representation of the 'evl_v_score' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._id">
            <summary>
            id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._userid">
            <summary>
            userid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._assessmentid">
            <summary>
            assessmentid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._catalogOneid">
            <summary>
            catalog_oneid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._catalogTwoid">
            <summary>
            catalog_twoid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._behaviorid">
            <summary>
            behaviorid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._scorelevel">
            <summary>
            scorelevel : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._evltimes">
            <summary>
            evltimes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._modelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._assessmentname">
            <summary>
            assessmentname : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._catalogOnename">
            <summary>
            catalog_onename : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._catalogTwoname">
            <summary>
            catalog_twoname : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlVScoreBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.#ctor(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlVScoreBase"/> instance.
            </summary>
            <param name="_id"></param>
            <param name="_userid"></param>
            <param name="_assessmentid"></param>
            <param name="_catalogOneid"></param>
            <param name="_catalogTwoid"></param>
            <param name="_behaviorid"></param>
            <param name="_scorelevel"></param>
            <param name="_score"></param>
            <param name="_evltimes"></param>
            <param name="_modelId"></param>
            <param name="_assessmentname"></param>
            <param name="_catalogOnename"></param>
            <param name="_catalogTwoname"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.CreateEvlVScore(System.Int32,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlVScore"/> instance.
            </summary>
            <param name="_id"></param>
            <param name="_userid"></param>
            <param name="_assessmentid"></param>
            <param name="_catalogOneid"></param>
            <param name="_catalogTwoid"></param>
            <param name="_behaviorid"></param>
            <param name="_scorelevel"></param>
            <param name="_score"></param>
            <param name="_evltimes"></param>
            <param name="_modelId"></param>
            <param name="_assessmentname"></param>
            <param name="_catalogOnename"></param>
            <param name="_catalogTwoname"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.Copy">
            <summary>
              Returns a Typed EvlVScoreBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.Equals(GE.MyLearning.BL.EvlVScoreBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlVScoreBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.Equals(GE.MyLearning.BL.EvlVScoreBase,GE.MyLearning.BL.EvlVScoreBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlVScoreBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlVScoreBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlVScoreBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.GetPropertyValueByName(GE.MyLearning.BL.EvlVScore,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScoreBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.Id">
            <summary>
            	Gets or Sets the id property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.Userid">
            <summary>
            	Gets or Sets the userid property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.Assessmentid">
            <summary>
            	Gets or Sets the assessmentid property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsAssessmentidNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.CatalogOneid">
            <summary>
            	Gets or Sets the catalog_oneid property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCatalogOneidNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.CatalogTwoid">
            <summary>
            	Gets or Sets the catalog_twoid property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCatalogTwoidNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.Behaviorid">
            <summary>
            	Gets or Sets the behaviorid property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsBehavioridNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.Scorelevel">
            <summary>
            	Gets or Sets the scorelevel property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsScorelevelNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.Score">
            <summary>
            	Gets or Sets the score property. 
            	
            </summary>
            <value>This type is decimal</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsScoreNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.Evltimes">
            <summary>
            	Gets or Sets the evltimes property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsEvltimesNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.ModelId">
            <summary>
            	Gets or Sets the model_id property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsModelIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.Assessmentname">
            <summary>
            	Gets or Sets the assessmentname property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.CatalogOnename">
            <summary>
            	Gets or Sets the catalog_onename property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.CatalogTwoname">
            <summary>
            	Gets or Sets the catalog_twoname property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.EvlVScoreBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVScoreBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlVScoreBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlVScoreColumn">
            <summary>
            Enumerate the EvlVScore columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.Id">
            <summary>
            id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.Userid">
            <summary>
            userid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.Assessmentid">
            <summary>
            assessmentid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.CatalogOneid">
            <summary>
            catalog_oneid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.CatalogTwoid">
            <summary>
            catalog_twoid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.Behaviorid">
            <summary>
            behaviorid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.Scorelevel">
            <summary>
            scorelevel : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.Evltimes">
            <summary>
            evltimes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.Assessmentname">
            <summary>
            assessmentname : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.CatalogOnename">
            <summary>
            catalog_onename : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVScoreColumn.CatalogTwoname">
            <summary>
            catalog_twoname : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlVScore">
            <summary>
             An object representation of the 'evl_v_score' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlVScore.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlVScore"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EntityManager">
            <summary>
            Entity Manager provides the management of entity location and creation.
            This is responsible for providing the health and validity of entities as a whole.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityManager.LocateOrCreate``1(System.String,System.String,System.Type)">
            <summary>
            Locates an entity for retrieval from the <see cref="T:Microsoft.Practices.ObjectBuilder2.Locator"/>, or instatiates a new instance 
            of the entity if not currently being tracked.
            </summary>
            <typeparam name="Entity">Must implement <see cref="T:GE.MyLearning.BL.IEntity"/> and is the default type to create, and will be the return type.</typeparam>
            <param name="key">primary key representation</param>
            <param name="typeString">type string to create</param>
            <param name="entityFactoryType">factory used to try to create this entity.</param>
            <returns>Created entity of T</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityManager.LocateOrCreate``1(System.String,System.String,System.Type,System.Boolean)">
            <summary>
            Locates an entity for retrieval from the <see cref="T:Microsoft.Practices.ObjectBuilder2.Locator"/>, or instatiates a new instance 
            of the entity if not currently being tracked.
            </summary>
            <typeparam name="Entity">Must implement <see cref="T:GE.MyLearning.BL.IEntity"/> and is the default type to create, and will be the return type.</typeparam>
            <param name="key">primary key representation</param>
            <param name="typeString">type string to create</param>
            <param name="entityFactoryType">factory used to try to create this entity.</param>
            <param name="isLocatorEnabled">bool determining whether to use Entity Locating.</param>
            <returns>Created entity of T</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityManager.CreateViewEntity``1(System.String,System.Type)">
            <summary>
            instatiates a new instance of the entity for view entities that don't implement IEntity and can't be tracked
            </summary>
            <typeparam name="Entity">is the default type to create, and will be the return type.</typeparam>
            <param name="typeString">type string to create</param>
            <param name="entityFactoryType">factory used to try to create this entity.</param>
            <returns>Created entity of T</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityManager.LocateEntity``1(System.String,System.Boolean)">
            <summary>
            Locates an entity for retrieval from the <see cref="T:Microsoft.Practices.ObjectBuilder2.Locator"/> if tracking is enabled.
            </summary>
            <typeparam name="Entity">Must implement <see cref="T:GE.MyLearning.BL.IEntity"/> and is the default type to create, and will be the return type.</typeparam>
            <param name="key">primary key representation</param>
            <param name="isLocatorEnabled">bool determining whether to use Entity Locating.</param>
            <returns>found entity of T, or null</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityManager.StopTracking(System.String)">
            <summary>
            Stops Tracking an Entity, it will be re-added in the next round.
            </summary>
            <param name="key">Entity Key used in the Locator's Bucket</param>
            <returns>true if found, false if not found</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityManager.StartTracking(System.String,GE.MyLearning.BL.IEntity,System.Boolean)">
            <summary>
            Starts Tracking an Entity, it will be tracked until modified or persisted.
            </summary>
            <param name="key">Entity Key used in the Locator's Bucket</param>
            <param name="entity">entity to be tracked</param>
            <param name="isTrackingEnabled">Determines whether tracking is enabled</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityManager.TryAddEntityFactory(System.Type)">
            <summary>
            Adds a factory to the EntityFactories property if the parameter type is valid.
            </summary>
            <param name="entityFactoryTypeToCreate">The entity factory type to create.</param>
            <returns>true if successful.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EntityManager.TrackChangedEntities">
            <summary>
            Get or set whether an entity should stop being tracked if it is modified or not.
            If true entities are tracked until saved even if modified. If false entities are
            stopped being tracked when they are modified.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EntityManager.EntityFactories">
            <summary>
            Exposes the current entity factory instance.
            </summary>
            <value>The entity factories.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityManager.EntityLocator">
            <summary>
            Expose the current entity locator for consumption by the API.
            </summary>
            <value>The entity locator.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EntityNotValidException">
            <summary>
            Exception used to pass information along to the UI when an entity is not valid. <see cref="T:GE.MyLearning.BL.EntityBase"/>.IsValid.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityNotValidException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.EntityNotValidException"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityNotValidException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.EntityNotValidException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityNotValidException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.EntityNotValidException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityNotValidException.#ctor(GE.MyLearning.BL.EntityBase,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.EntityNotValidException"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="method">The method.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityNotValidException.#ctor(GE.MyLearning.BL.EntityBase,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.EntityNotValidException"/> class.
            </summary>
            <param name="entity">The entity.</param>
            <param name="method">The method.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityNotValidException.#ctor(System.Collections.IList,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.EntityNotValidException"/> class.
            </summary>
            <param name="entityList">The entity list.</param>
            <param name="method">The method.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityNotValidException.#ctor(System.Collections.IList,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.EntityNotValidException"/> class.
            </summary>
            <param name="entityList">The entity list.</param>
            <param name="method">The method.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityNotValidException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.EntityNotValidException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"></see> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"></see> is zero (0). </exception>
            <exception cref="T:System.ArgumentNullException">The info parameter is null. </exception>
        </member>
        <member name="P:GE.MyLearning.BL.EntityNotValidException.Entity">
            <summary>
            Gets or sets the entity.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityNotValidException.EntityList">
            <summary>
            Gets or sets the entity list.
            </summary>
            <value>The entity list.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EntityNotValidException.ExecutingMethod">
            <summary>
            Gets or sets the executing method.
            </summary>
            <value>The executing method.</value>
        </member>
        <member name="T:GE.MyLearning.BL.TrackingPolicy">
            <summary>
            Determines what entities are tracked with respect to Entity.EntityState.
            </summary>
            <remarks>TrackingPolicy is marked with Flags to allow future extensions, for example tracking of inserted items.</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.TrackingPolicy.TrackingUnchanged">
            <summary>
            Track unchanged entities (default). 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrackingPolicy.TrackingChanged">
            <summary>
            Track changed entities. 
            </summary>
            <remarks>Normally an entity stops being tracked when it is modified unless TrackingChanged is specified.</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.VuRightsBase">
            <summary>
             An object representation of the 'VU_rights' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuRightsBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.#ctor(System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuRightsBase"/> instance.
            </summary>
            <param name="_rights"></param>
            <param name="_shuoming"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.CreateVuRights(System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuRights"/> instance.
            </summary>
            <param name="_rights"></param>
            <param name="_shuoming"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuRights Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.Copy">
            <summary>
              Returns a Typed VuRights Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.DeepCopy">
            <summary>
              Returns a Typed VuRights Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.IsPropertyChanged(GE.MyLearning.BL.VuRightsColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.GetOriginalEntity">
            <summary>
              Returns a VuRights Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuRightsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuRightsBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.Equals(GE.MyLearning.BL.VuRightsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuRightsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.ValueEquals(GE.MyLearning.BL.VuRightsBase,GE.MyLearning.BL.VuRightsBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuRightsBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuRightsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuRightsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.OnColumnChanging(GE.MyLearning.BL.VuRightsColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuRightsBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuRightsColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.OnColumnChanged(GE.MyLearning.BL.VuRightsColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuRightsBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuRightsColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.OnColumnChanging(GE.MyLearning.BL.VuRightsColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuRightsBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuRightsColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.OnColumnChanged(GE.MyLearning.BL.VuRightsColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuRightsBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuRightsColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuRightsBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuRightsBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.Rights">
            <summary>
            	Gets or sets the Rights property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.Shuoming">
            <summary>
            	Gets or sets the Shuoming property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuRightsBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuRightsBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuRightsBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuRightsBase.VuRightsEntityData">
            <summary>
            	The data structure representation of the 'VU_rights' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsBase.VuRightsEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_rights"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsBase.VuRightsEntityData.Rights">
            <summary>
            rights : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsBase.VuRightsEntityData.Shuoming">
            <summary>
            shuoming : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.VuRightsEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsBase.VuRightsEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsBase.VuRightsEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.VuRightsEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuRights"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsEventArgs.#ctor(GE.MyLearning.BL.VuRightsColumn)">
            <summary>
             Initalizes a new Instance of the VuRightsEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsEventArgs.#ctor(GE.MyLearning.BL.VuRightsColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuRightsEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsEventArgs.Column">
            <summary>
             The VuRightsColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuRightsColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuRightsEventHandler">
            <summary>
             Define a delegate for all VuRights related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuRightsComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuRightsComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsComparer.#ctor(GE.MyLearning.BL.VuRightsColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuRightsComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsComparer.Equals(GE.MyLearning.BL.VuRights,GE.MyLearning.BL.VuRights)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuRights"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuRights"/> to compare.</param>
            <param name="b">The second <c>VuRights</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsComparer.GetHashCode(GE.MyLearning.BL.VuRights)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsComparer.Compare(GE.MyLearning.BL.VuRights,GE.MyLearning.BL.VuRights)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuRightsKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuRights"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsKey.#ctor">
            <summary>
            Initializes a new instance of the VuRightsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsKey.#ctor(GE.MyLearning.BL.VuRightsBase)">
            <summary>
            Initializes a new instance of the VuRightsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuRightsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRightsKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRightsKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuRightsColumn">
            <summary>
            Enumerate the VuRights columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsColumn.Rights">
            <summary>
            Rights : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRightsColumn.Shuoming">
            <summary>
            Shuoming : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlModel">
            <summary>
             An object representation of the 'evl_model' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlModel.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlModel"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ILearningRecordCsv">
            <summary>
            	The data structure representation of the 'LearningRecordCsv' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.ILearningRecordCsv.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordCsv.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "LearningRecordCsv"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordCsv.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordCsv.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordCsv.Sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordCsv.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordCsv.CompletedDate">
            <summary>
            CompletedDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordCsv.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordCsv.Courseid">
            <summary>
            courseid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ILearningRecordCsv.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCatalogBase">
            <summary>
             An object representation of the 'evl_catalog' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlCatalog">
            <summary>
            	The data structure representation of the 'evl_catalog' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlCatalog.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCatalog.CId">
            <summary>			
            c_id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_catalog"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCatalog.CName">
            <summary>
            c_name : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCatalog.Pid">
            <summary>
            pid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCatalog.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCatalog.ScoreMin">
            <summary>
            ScoreMin : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCatalog.ScoreMax">
            <summary>
            ScoreMax : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCatalog.ScoreScopeTitle">
            <summary>
            ScoreScopeTitle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlCatalogBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlCatalogBase"/> instance.
            </summary>
            <param name="_cName"></param>
            <param name="_pid"></param>
            <param name="_modelId"></param>
            <param name="_scoreMin"></param>
            <param name="_scoreMax"></param>
            <param name="_scoreScopeTitle"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.CreateEvlCatalog(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlCatalog"/> instance.
            </summary>
            <param name="_cName"></param>
            <param name="_pid"></param>
            <param name="_modelId"></param>
            <param name="_scoreMin"></param>
            <param name="_scoreMax"></param>
            <param name="_scoreScopeTitle"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlCatalog Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.Copy">
            <summary>
              Returns a Typed EvlCatalog Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.DeepCopy">
            <summary>
              Returns a Typed EvlCatalog Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.IsPropertyChanged(GE.MyLearning.BL.EvlCatalogColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.GetOriginalEntity">
            <summary>
              Returns a EvlCatalog Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlCatalogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlCatalogBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.Equals(GE.MyLearning.BL.EvlCatalogBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlCatalogBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.ValueEquals(GE.MyLearning.BL.EvlCatalogBase,GE.MyLearning.BL.EvlCatalogBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlCatalogBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlCatalogBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlCatalogBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.OnColumnChanging(GE.MyLearning.BL.EvlCatalogColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlCatalogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlCatalogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.OnColumnChanged(GE.MyLearning.BL.EvlCatalogColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlCatalogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlCatalogColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.OnColumnChanging(GE.MyLearning.BL.EvlCatalogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlCatalogBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlCatalogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.OnColumnChanged(GE.MyLearning.BL.EvlCatalogColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlCatalogBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlCatalogColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlCatalogBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlCatalogBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.CId">
            <summary>
            	Gets or sets the CId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.CName">
            <summary>
            	Gets or sets the CName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.Pid">
            <summary>
            	Gets or sets the Pid property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsPidNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.ModelId">
            <summary>
            	Gets or sets the ModelId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsModelIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.ScoreMin">
            <summary>
            	Gets or sets the ScoreMin property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsScoreMinNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.ScoreMax">
            <summary>
            	Gets or sets the ScoreMax property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsScoreMaxNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.ScoreScopeTitle">
            <summary>
            	Gets or sets the ScoreScopeTitle property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlCatalogBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlCatalogBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCatalogBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData">
            <summary>
            	The data structure representation of the 'evl_catalog' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData.CId">
            <summary>			
            c_id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_catalog"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData.CName">
            <summary>
            c_name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData.Pid">
            <summary>
            pid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData.ScoreMin">
            <summary>
            ScoreMin : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData.ScoreMax">
            <summary>
            ScoreMax : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData.ScoreScopeTitle">
            <summary>
            ScoreScopeTitle : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogBase.EvlCatalogEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCatalogEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogEventArgs.#ctor(GE.MyLearning.BL.EvlCatalogColumn)">
            <summary>
             Initalizes a new Instance of the EvlCatalogEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogEventArgs.#ctor(GE.MyLearning.BL.EvlCatalogColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlCatalogEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogEventArgs.Column">
            <summary>
             The EvlCatalogColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlCatalogColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCatalogEventHandler">
            <summary>
             Define a delegate for all EvlCatalog related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCatalogComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlCatalogComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogComparer.#ctor(GE.MyLearning.BL.EvlCatalogColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlCatalogComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogComparer.Equals(GE.MyLearning.BL.EvlCatalog,GE.MyLearning.BL.EvlCatalog)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlCatalog"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlCatalog"/> to compare.</param>
            <param name="b">The second <c>EvlCatalog</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogComparer.GetHashCode(GE.MyLearning.BL.EvlCatalog)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogComparer.Compare(GE.MyLearning.BL.EvlCatalog,GE.MyLearning.BL.EvlCatalog)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCatalogKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogKey.#ctor">
            <summary>
            Initializes a new instance of the EvlCatalogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogKey.#ctor(GE.MyLearning.BL.EvlCatalogBase)">
            <summary>
            Initializes a new instance of the EvlCatalogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlCatalogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalogKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCatalogKey.CId">
            <summary>
            Gets or sets the CId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCatalogColumn">
            <summary>
            Enumerate the EvlCatalog columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogColumn.CId">
            <summary>
            CId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogColumn.CName">
            <summary>
            CName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogColumn.Pid">
            <summary>
            Pid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogColumn.ModelId">
            <summary>
            ModelId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogColumn.ScoreMin">
            <summary>
            ScoreMin : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogColumn.ScoreMax">
            <summary>
            ScoreMax : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCatalogColumn.ScoreScopeTitle">
            <summary>
            ScoreScopeTitle : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeApplyBase">
            <summary>
             An object representation of the 'DegreeApply' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IDegreeApply">
            <summary>
            	The data structure representation of the 'DegreeApply' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IDegreeApply.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeApply.DegreeApplyId">
            <summary>			
            DegreeApplyID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "DegreeApply"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeApply.InstituteId">
            <summary>
            InstituteID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeApply.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeApply.ApplyUserId">
            <summary>
            ApplyUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeApply.ApproveUserId">
            <summary>
            ApproveUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeApply.ApplyDate">
            <summary>
            ApplyDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeApply.ApproveDate">
            <summary>
            ApproveDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeApply.StudentId">
            <summary>
            StudentID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeApply.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IDegreeApply.Status">
            <summary>
            status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.DegreeApplyBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.DegreeApplyBase"/> instance.
            </summary>
            <param name="_instituteId"></param>
            <param name="_degreeId"></param>
            <param name="_applyUserId"></param>
            <param name="_approveUserId"></param>
            <param name="_applyDate"></param>
            <param name="_approveDate"></param>
            <param name="_studentId"></param>
            <param name="_description"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.CreateDegreeApply(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.DegreeApply"/> instance.
            </summary>
            <param name="_instituteId"></param>
            <param name="_degreeId"></param>
            <param name="_applyUserId"></param>
            <param name="_approveUserId"></param>
            <param name="_applyDate"></param>
            <param name="_approveDate"></param>
            <param name="_studentId"></param>
            <param name="_description"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed DegreeApply Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.Copy">
            <summary>
              Returns a Typed DegreeApply Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.DeepCopy">
            <summary>
              Returns a Typed DegreeApply Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.IsPropertyChanged(GE.MyLearning.BL.DegreeApplyColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.GetOriginalEntity">
            <summary>
              Returns a DegreeApply Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.DegreeApplyBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.DegreeApplyBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.Equals(GE.MyLearning.BL.DegreeApplyBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.DegreeApplyBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.ValueEquals(GE.MyLearning.BL.DegreeApplyBase,GE.MyLearning.BL.DegreeApplyBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.DegreeApplyBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.DegreeApplyBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.DegreeApplyBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.OnColumnChanging(GE.MyLearning.BL.DegreeApplyColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreeApplyBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreeApplyColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.OnColumnChanged(GE.MyLearning.BL.DegreeApplyColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreeApplyBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreeApplyColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.OnColumnChanging(GE.MyLearning.BL.DegreeApplyColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreeApplyBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreeApplyColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.OnColumnChanged(GE.MyLearning.BL.DegreeApplyColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.DegreeApplyBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.DegreeApplyColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.DegreeApplyBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DegreeApplyBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyId">
            <summary>
            	Gets or sets the DegreeApplyId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.InstituteId">
            <summary>
            	Gets or sets the InstituteId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.DegreeId">
            <summary>
            	Gets or sets the DegreeId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsDegreeIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.ApplyUserId">
            <summary>
            	Gets or sets the ApplyUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.ApproveUserId">
            <summary>
            	Gets or sets the ApproveUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.ApplyDate">
            <summary>
            	Gets or sets the ApplyDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsApplyDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.ApproveDate">
            <summary>
            	Gets or sets the ApproveDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsApproveDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.StudentId">
            <summary>
            	Gets or sets the StudentId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsStudentIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DegreeApplyBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.DegreeApplyBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeApplyBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData">
            <summary>
            	The data structure representation of the 'DegreeApply' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.DegreeApplyId">
            <summary>			
            DegreeApplyID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "DegreeApply"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.InstituteId">
            <summary>
            InstituteID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.ApplyUserId">
            <summary>
            ApplyUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.ApproveUserId">
            <summary>
            ApproveUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.ApplyDate">
            <summary>
            ApplyDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.ApproveDate">
            <summary>
            ApproveDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.StudentId">
            <summary>
            StudentID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.Status">
            <summary>
            status : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyBase.DegreeApplyEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeApplyEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.DegreeApply"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyEventArgs.#ctor(GE.MyLearning.BL.DegreeApplyColumn)">
            <summary>
             Initalizes a new Instance of the DegreeApplyEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyEventArgs.#ctor(GE.MyLearning.BL.DegreeApplyColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the DegreeApplyEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyEventArgs.Column">
            <summary>
             The DegreeApplyColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.DegreeApplyColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeApplyEventHandler">
            <summary>
             Define a delegate for all DegreeApply related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeApplyComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DegreeApplyComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyComparer.#ctor(GE.MyLearning.BL.DegreeApplyColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:DegreeApplyComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyComparer.Equals(GE.MyLearning.BL.DegreeApply,GE.MyLearning.BL.DegreeApply)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.DegreeApply"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.DegreeApply"/> to compare.</param>
            <param name="b">The second <c>DegreeApply</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyComparer.GetHashCode(GE.MyLearning.BL.DegreeApply)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyComparer.Compare(GE.MyLearning.BL.DegreeApply,GE.MyLearning.BL.DegreeApply)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeApplyKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.DegreeApply"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyKey.#ctor">
            <summary>
            Initializes a new instance of the DegreeApplyKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyKey.#ctor(GE.MyLearning.BL.DegreeApplyBase)">
            <summary>
            Initializes a new instance of the DegreeApplyKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the DegreeApplyKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApplyKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeApplyKey.DegreeApplyId">
            <summary>
            Gets or sets the DegreeApplyId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeApplyColumn">
            <summary>
            Enumerate the DegreeApply columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyColumn.DegreeApplyId">
            <summary>
            DegreeApplyId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyColumn.InstituteId">
            <summary>
            InstituteId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyColumn.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyColumn.ApplyUserId">
            <summary>
            ApplyUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyColumn.ApproveUserId">
            <summary>
            ApproveUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyColumn.ApplyDate">
            <summary>
            ApplyDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyColumn.ApproveDate">
            <summary>
            ApproveDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyColumn.StudentId">
            <summary>
            StudentId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeApplyColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlBehaviordescription">
            <summary>
            	The data structure representation of the 'evl_behaviordescription' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlBehaviordescription.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlBehaviordescription.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_behaviordescription"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlBehaviordescription.BehaviorId">
            <summary>
            behavior_id : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlBehaviordescription.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlBehaviordescription.Dept">
            <summary>
            dept : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuClassInfoEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoEventArgs.#ctor(GE.MyLearning.BL.VuClassInfoColumn)">
            <summary>
             Initalizes a new Instance of the VuClassInfoEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoEventArgs.#ctor(GE.MyLearning.BL.VuClassInfoColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuClassInfoEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoEventArgs.Column">
            <summary>
             The VuClassInfoColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuClassInfoColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuClassInfoEventHandler">
            <summary>
             Define a delegate for all VuClassInfo related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuClassInfoComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuClassInfoComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoComparer.#ctor(GE.MyLearning.BL.VuClassInfoColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuClassInfoComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoComparer.Equals(GE.MyLearning.BL.VuClassInfo,GE.MyLearning.BL.VuClassInfo)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuClassInfo"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuClassInfo"/> to compare.</param>
            <param name="b">The second <c>VuClassInfo</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoComparer.GetHashCode(GE.MyLearning.BL.VuClassInfo)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoComparer.Compare(GE.MyLearning.BL.VuClassInfo,GE.MyLearning.BL.VuClassInfo)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuClassInfoKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoKey.#ctor">
            <summary>
            Initializes a new instance of the VuClassInfoKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoKey.#ctor(GE.MyLearning.BL.VuClassInfoBase)">
            <summary>
            Initializes a new instance of the VuClassInfoKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuClassInfoKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuClassInfoKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuClassInfoKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuClassInfoColumn">
            <summary>
            Enumerate the VuClassInfo columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoColumn.ClassId">
            <summary>
            ClassId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoColumn.FuId">
            <summary>
            FuId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoColumn.ClassName">
            <summary>
            ClassName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoColumn.CreatDate">
            <summary>
            CreatDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoColumn.ClassOwner">
            <summary>
            ClassOwner : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoColumn.ClassDesc">
            <summary>
            ClassDesc : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoColumn.Counter">
            <summary>
            Counter : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuClassInfoColumn.Closed">
            <summary>
            Closed : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuFriendship">
            <summary>
            	The data structure representation of the 'vu_friendship' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuFriendship.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuFriendship.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "vu_friendship"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuFriendship.Webname">
            <summary>
            webname : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuFriendship.Weburl">
            <summary>
            weburl : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuFriendship.Classid">
            <summary>
            classid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuFriendship.Orderlist">
            <summary>
            orderlist : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuFriendship.Pic">
            <summary>
            pic : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserGroupEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.UserGroup"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupEventArgs.#ctor(GE.MyLearning.BL.UserGroupColumn)">
            <summary>
             Initalizes a new Instance of the UserGroupEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupEventArgs.#ctor(GE.MyLearning.BL.UserGroupColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the UserGroupEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupEventArgs.Column">
            <summary>
             The UserGroupColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.UserGroupColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.UserGroupEventHandler">
            <summary>
             Define a delegate for all UserGroup related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserGroupComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UserGroupComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupComparer.#ctor(GE.MyLearning.BL.UserGroupColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:UserGroupComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupComparer.Equals(GE.MyLearning.BL.UserGroup,GE.MyLearning.BL.UserGroup)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.UserGroup"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.UserGroup"/> to compare.</param>
            <param name="b">The second <c>UserGroup</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupComparer.GetHashCode(GE.MyLearning.BL.UserGroup)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupComparer.Compare(GE.MyLearning.BL.UserGroup,GE.MyLearning.BL.UserGroup)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.UserGroupKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.UserGroup"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupKey.#ctor">
            <summary>
            Initializes a new instance of the UserGroupKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupKey.#ctor(GE.MyLearning.BL.UserGroupBase)">
            <summary>
            Initializes a new instance of the UserGroupKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the UserGroupKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserGroupKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserGroupKey.AutoId">
            <summary>
            Gets or sets the AutoId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserGroupColumn">
            <summary>
            Enumerate the UserGroup columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupColumn.GroupId">
            <summary>
            GroupId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupColumn.UserId">
            <summary>
            UserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserGroupColumn.AutoId">
            <summary>
            AutoId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingLogEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.TrainingLog"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogEventArgs.#ctor(GE.MyLearning.BL.TrainingLogColumn)">
            <summary>
             Initalizes a new Instance of the TrainingLogEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogEventArgs.#ctor(GE.MyLearning.BL.TrainingLogColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the TrainingLogEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogEventArgs.Column">
            <summary>
             The TrainingLogColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.TrainingLogColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingLogEventHandler">
            <summary>
             Define a delegate for all TrainingLog related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingLogComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TrainingLogComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogComparer.#ctor(GE.MyLearning.BL.TrainingLogColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:TrainingLogComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogComparer.Equals(GE.MyLearning.BL.TrainingLog,GE.MyLearning.BL.TrainingLog)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.TrainingLog"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.TrainingLog"/> to compare.</param>
            <param name="b">The second <c>TrainingLog</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogComparer.GetHashCode(GE.MyLearning.BL.TrainingLog)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogComparer.Compare(GE.MyLearning.BL.TrainingLog,GE.MyLearning.BL.TrainingLog)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingLogKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.TrainingLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogKey.#ctor">
            <summary>
            Initializes a new instance of the TrainingLogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogKey.#ctor(GE.MyLearning.BL.TrainingLogBase)">
            <summary>
            Initializes a new instance of the TrainingLogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogKey.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the TrainingLogKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.TrainingLogKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.TrainingLogKey.TrainingLogId">
            <summary>
            Gets or sets the TrainingLogId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingLogColumn">
            <summary>
            Enumerate the TrainingLog columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogColumn.TrainingLogId">
            <summary>
            TrainingLogId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogColumn.LogBeginTime">
            <summary>
            LogBeginTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogColumn.LogEndTime">
            <summary>
            LogEndTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogColumn.TrainingTime">
            <summary>
            TrainingTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogColumn.MachineIp">
            <summary>
            MachineIp : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogColumn.TrainUserId">
            <summary>
            TrainUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogColumn.SessionId">
            <summary>
            SessionId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogColumn.CourseWareId">
            <summary>
            CourseWareId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.TrainingLogColumn.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwUserGroup">
            <summary>
             An object representation of the 'VW_UserGroup' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroup.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwUserGroup"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwStudentCourseRelationBase">
            <summary>
             An object representation of the 'VW_StudentCourseRelation' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._studentId">
            <summary>
            StudentID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._studentNote">
            <summary>
            StudentNote : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._studies">
            <summary>
            studies : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._userName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._userCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._autoId">
            <summary>
            AutoID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._updatetime">
            <summary>
            Updatetime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._credentialsStyle">
            <summary>
            CredentialsStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._degreeId">
            <summary>
            DegreeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._degreeCourseId">
            <summary>
            degreeCourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._studentStatus">
            <summary>
            StudentStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._feBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._attachmentFileStyle">
            <summary>
            AttachmentFileStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._attachmentFilePath">
            <summary>
            AttachmentFilePath : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._courseId">
            <summary>
            courseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._updateUserId">
            <summary>
            UpdateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwStudentCourseRelationBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.#ctor(System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwStudentCourseRelationBase"/> instance.
            </summary>
            <param name="_studentId"></param>
            <param name="_studentNote"></param>
            <param name="_studies"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_autoId"></param>
            <param name="_updatetime"></param>
            <param name="_credentialsStyle"></param>
            <param name="_degreeId"></param>
            <param name="_degreeCourseId"></param>
            <param name="_studentStatus"></param>
            <param name="_feBadgeId"></param>
            <param name="_attachmentFileStyle"></param>
            <param name="_attachmentFilePath"></param>
            <param name="_courseId"></param>
            <param name="_updateUserId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.CreateVwStudentCourseRelation(System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwStudentCourseRelation"/> instance.
            </summary>
            <param name="_studentId"></param>
            <param name="_studentNote"></param>
            <param name="_studies"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_autoId"></param>
            <param name="_updatetime"></param>
            <param name="_credentialsStyle"></param>
            <param name="_degreeId"></param>
            <param name="_degreeCourseId"></param>
            <param name="_studentStatus"></param>
            <param name="_feBadgeId"></param>
            <param name="_attachmentFileStyle"></param>
            <param name="_attachmentFilePath"></param>
            <param name="_courseId"></param>
            <param name="_updateUserId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.Copy">
            <summary>
              Returns a Typed VwStudentCourseRelationBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.Equals(GE.MyLearning.BL.VwStudentCourseRelationBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwStudentCourseRelationBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.Equals(GE.MyLearning.BL.VwStudentCourseRelationBase,GE.MyLearning.BL.VwStudentCourseRelationBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwStudentCourseRelationBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwStudentCourseRelationBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwStudentCourseRelationBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.GetPropertyValueByName(GE.MyLearning.BL.VwStudentCourseRelation,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelationBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.StudentId">
            <summary>
            	Gets or Sets the StudentID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.StudentNote">
            <summary>
            	Gets or Sets the StudentNote property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.Studies">
            <summary>
            	Gets or Sets the studies property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.UserName">
            <summary>
            	Gets or Sets the UserName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.UserCnName">
            <summary>
            	Gets or Sets the UserCNName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.AutoId">
            <summary>
            	Gets or Sets the AutoID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.Updatetime">
            <summary>
            	Gets or Sets the Updatetime property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsUpdatetimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.CredentialsStyle">
            <summary>
            	Gets or Sets the CredentialsStyle property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCredentialsStyleNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.DegreeId">
            <summary>
            	Gets or Sets the DegreeID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.DegreeCourseId">
            <summary>
            	Gets or Sets the degreeCourseID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.StudentStatus">
            <summary>
            	Gets or Sets the StudentStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.FeBadgeId">
            <summary>
            	Gets or Sets the FEBadgeID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.AttachmentFileStyle">
            <summary>
            	Gets or Sets the AttachmentFileStyle property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.AttachmentFilePath">
            <summary>
            	Gets or Sets the AttachmentFilePath property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.CourseId">
            <summary>
            	Gets or Sets the courseID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.UpdateUserId">
            <summary>
            	Gets or Sets the UpdateUserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwStudentCourseRelationBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentCourseRelationBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwStudentCourseRelationBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwStudentCourseRelationColumn">
            <summary>
            Enumerate the VwStudentCourseRelation columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.StudentId">
            <summary>
            StudentID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.StudentNote">
            <summary>
            StudentNote : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.Studies">
            <summary>
            studies : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.AutoId">
            <summary>
            AutoID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.Updatetime">
            <summary>
            Updatetime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.CredentialsStyle">
            <summary>
            CredentialsStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.DegreeId">
            <summary>
            DegreeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.DegreeCourseId">
            <summary>
            degreeCourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.StudentStatus">
            <summary>
            StudentStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.FeBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.AttachmentFileStyle">
            <summary>
            AttachmentFileStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.AttachmentFilePath">
            <summary>
            AttachmentFilePath : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.CourseId">
            <summary>
            courseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentCourseRelationColumn.UpdateUserId">
            <summary>
            UpdateUserID : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlVLearningRecordCsv">
            <summary>
             An object representation of the 'evl_v_LearningRecordCsv' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.EvlVLearningRecordCsvBase">
            <summary>
             An object representation of the 'evl_v_LearningRecordCsv' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase._courseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase._description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase._sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase._userName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase._completedDate">
            <summary>
            CompletedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase._status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase._courseid">
            <summary>
            courseid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase._id">
            <summary>
            ID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase._createdDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsvBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Nullable{System.DateTime})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsvBase"/> instance.
            </summary>
            <param name="_courseName"></param>
            <param name="_description"></param>
            <param name="_sso"></param>
            <param name="_userName"></param>
            <param name="_completedDate"></param>
            <param name="_status"></param>
            <param name="_courseid"></param>
            <param name="_id"></param>
            <param name="_createdDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.CreateEvlVLearningRecordCsv(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Nullable{System.DateTime})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsv"/> instance.
            </summary>
            <param name="_courseName"></param>
            <param name="_description"></param>
            <param name="_sso"></param>
            <param name="_userName"></param>
            <param name="_completedDate"></param>
            <param name="_status"></param>
            <param name="_courseid"></param>
            <param name="_id"></param>
            <param name="_createdDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.Copy">
            <summary>
              Returns a Typed EvlVLearningRecordCsvBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.Equals(GE.MyLearning.BL.EvlVLearningRecordCsvBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsvBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.Equals(GE.MyLearning.BL.EvlVLearningRecordCsvBase,GE.MyLearning.BL.EvlVLearningRecordCsvBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsvBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsvBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsvBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.GetPropertyValueByName(GE.MyLearning.BL.EvlVLearningRecordCsv,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.CourseName">
            <summary>
            	Gets or Sets the CourseName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.Description">
            <summary>
            	Gets or Sets the Description property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.Sso">
            <summary>
            	Gets or Sets the SSO property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.UserName">
            <summary>
            	Gets or Sets the UserName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.CompletedDate">
            <summary>
            	Gets or Sets the CompletedDate property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.Status">
            <summary>
            	Gets or Sets the Status property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.Courseid">
            <summary>
            	Gets or Sets the courseid property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.Id">
            <summary>
            	Gets or Sets the ID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.CreatedDate">
            <summary>
            	Gets or Sets the CreatedDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreatedDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.EvlVLearningRecordCsvBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlVLearningRecordCsvBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlVLearningRecordCsvBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordCsv.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsv"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlCompetencyScoreDept">
            <summary>
            	The data structure representation of the 'evl_competencyScoreDept' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlCompetencyScoreDept.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCompetencyScoreDept.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_competencyScoreDept"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCompetencyScoreDept.Competencyid">
            <summary>
            competencyid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCompetencyScoreDept.Scorestart">
            <summary>
            scorestart : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCompetencyScoreDept.Scoreend">
            <summary>
            scoreend : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlCompetencyScoreDept.Dept">
            <summary>
            dept : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase">
            <summary>
             An object representation of the 'evl_competencyScoreDept' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase"/> instance.
            </summary>
            <param name="_competencyid"></param>
            <param name="_scorestart"></param>
            <param name="_scoreend"></param>
            <param name="_dept"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.CreateEvlCompetencyScoreDept(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> instance.
            </summary>
            <param name="_competencyid"></param>
            <param name="_scorestart"></param>
            <param name="_scoreend"></param>
            <param name="_dept"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlCompetencyScoreDept Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Copy">
            <summary>
              Returns a Typed EvlCompetencyScoreDept Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.DeepCopy">
            <summary>
              Returns a Typed EvlCompetencyScoreDept Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.IsPropertyChanged(GE.MyLearning.BL.EvlCompetencyScoreDeptColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.GetOriginalEntity">
            <summary>
              Returns a EvlCompetencyScoreDept Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Equals(GE.MyLearning.BL.EvlCompetencyScoreDeptBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.ValueEquals(GE.MyLearning.BL.EvlCompetencyScoreDeptBase,GE.MyLearning.BL.EvlCompetencyScoreDeptBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.OnColumnChanging(GE.MyLearning.BL.EvlCompetencyScoreDeptColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.OnColumnChanged(GE.MyLearning.BL.EvlCompetencyScoreDeptColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.OnColumnChanging(GE.MyLearning.BL.EvlCompetencyScoreDeptColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.OnColumnChanged(GE.MyLearning.BL.EvlCompetencyScoreDeptColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Competencyid">
            <summary>
            	Gets or sets the Competencyid property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCompetencyidNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Scorestart">
            <summary>
            	Gets or sets the Scorestart property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsScorestartNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Scoreend">
            <summary>
            	Gets or sets the Scoreend property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsScoreendNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Dept">
            <summary>
            	Gets or sets the Dept property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EvlCompetencyScoreDeptEntityData">
            <summary>
            	The data structure representation of the 'evl_competencyScoreDept' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EvlCompetencyScoreDeptEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_competencyScoreDept"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EvlCompetencyScoreDeptEntityData.Competencyid">
            <summary>
            competencyid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EvlCompetencyScoreDeptEntityData.Scorestart">
            <summary>
            scorestart : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EvlCompetencyScoreDeptEntityData.Scoreend">
            <summary>
            scoreend : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EvlCompetencyScoreDeptEntityData.Dept">
            <summary>
            dept : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EvlCompetencyScoreDeptEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EvlCompetencyScoreDeptEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptBase.EvlCompetencyScoreDeptEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCompetencyScoreDeptEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptEventArgs.#ctor(GE.MyLearning.BL.EvlCompetencyScoreDeptColumn)">
            <summary>
             Initalizes a new Instance of the EvlCompetencyScoreDeptEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptEventArgs.#ctor(GE.MyLearning.BL.EvlCompetencyScoreDeptColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlCompetencyScoreDeptEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptEventArgs.Column">
            <summary>
             The EvlCompetencyScoreDeptColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCompetencyScoreDeptEventHandler">
            <summary>
             Define a delegate for all EvlCompetencyScoreDept related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCompetencyScoreDeptComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlCompetencyScoreDeptComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptComparer.#ctor(GE.MyLearning.BL.EvlCompetencyScoreDeptColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlCompetencyScoreDeptComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptComparer.Equals(GE.MyLearning.BL.EvlCompetencyScoreDept,GE.MyLearning.BL.EvlCompetencyScoreDept)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> to compare.</param>
            <param name="b">The second <c>EvlCompetencyScoreDept</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptComparer.GetHashCode(GE.MyLearning.BL.EvlCompetencyScoreDept)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptComparer.Compare(GE.MyLearning.BL.EvlCompetencyScoreDept,GE.MyLearning.BL.EvlCompetencyScoreDept)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCompetencyScoreDeptKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptKey.#ctor">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptKey.#ctor(GE.MyLearning.BL.EvlCompetencyScoreDeptBase)">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDeptKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlCompetencyScoreDeptKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn">
            <summary>
            Enumerate the EvlCompetencyScoreDept columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn.Competencyid">
            <summary>
            Competencyid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn.Scorestart">
            <summary>
            Scorestart : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn.Scoreend">
            <summary>
            Scoreend : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlCompetencyScoreDeptColumn.Dept">
            <summary>
            Dept : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeApply">
            <summary>
             An object representation of the 'DegreeApply' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.DegreeApply.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.DegreeApply"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviordescriptionBase">
            <summary>
             An object representation of the 'evl_behaviordescription' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionBase"/> instance.
            </summary>
            <param name="_behaviorId"></param>
            <param name="_score"></param>
            <param name="_dept"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.CreateEvlBehaviordescription(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> instance.
            </summary>
            <param name="_behaviorId"></param>
            <param name="_score"></param>
            <param name="_dept"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlBehaviordescription Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.Copy">
            <summary>
              Returns a Typed EvlBehaviordescription Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.DeepCopy">
            <summary>
              Returns a Typed EvlBehaviordescription Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.IsPropertyChanged(GE.MyLearning.BL.EvlBehaviordescriptionColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.GetOriginalEntity">
            <summary>
              Returns a EvlBehaviordescription Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.Equals(GE.MyLearning.BL.EvlBehaviordescriptionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.ValueEquals(GE.MyLearning.BL.EvlBehaviordescriptionBase,GE.MyLearning.BL.EvlBehaviordescriptionBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.OnColumnChanging(GE.MyLearning.BL.EvlBehaviordescriptionColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlBehaviordescriptionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.OnColumnChanged(GE.MyLearning.BL.EvlBehaviordescriptionColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlBehaviordescriptionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.OnColumnChanging(GE.MyLearning.BL.EvlBehaviordescriptionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlBehaviordescriptionBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.OnColumnChanged(GE.MyLearning.BL.EvlBehaviordescriptionColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlBehaviordescriptionBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlBehaviordescriptionColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlBehaviordescriptionBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlBehaviordescriptionBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.BehaviorId">
            <summary>
            	Gets or sets the BehaviorId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsBehaviorIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.Score">
            <summary>
            	Gets or sets the Score property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsScoreNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.Dept">
            <summary>
            	Gets or sets the Dept property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlBehaviordescriptionBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlBehaviordescriptionBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviordescriptionBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviordescriptionBase.EvlBehaviordescriptionEntityData">
            <summary>
            	The data structure representation of the 'evl_behaviordescription' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionBase.EvlBehaviordescriptionEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_behaviordescription"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionBase.EvlBehaviordescriptionEntityData.BehaviorId">
            <summary>
            behavior_id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionBase.EvlBehaviordescriptionEntityData.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionBase.EvlBehaviordescriptionEntityData.Dept">
            <summary>
            dept : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.EvlBehaviordescriptionEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionBase.EvlBehaviordescriptionEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionBase.EvlBehaviordescriptionEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviordescriptionEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionEventArgs.#ctor(GE.MyLearning.BL.EvlBehaviordescriptionColumn)">
            <summary>
             Initalizes a new Instance of the EvlBehaviordescriptionEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionEventArgs.#ctor(GE.MyLearning.BL.EvlBehaviordescriptionColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlBehaviordescriptionEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionEventArgs.Column">
            <summary>
             The EvlBehaviordescriptionColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlBehaviordescriptionColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviordescriptionEventHandler">
            <summary>
             Define a delegate for all EvlBehaviordescription related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviordescriptionComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlBehaviordescriptionComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionComparer.#ctor(GE.MyLearning.BL.EvlBehaviordescriptionColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlBehaviordescriptionComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionComparer.Equals(GE.MyLearning.BL.EvlBehaviordescription,GE.MyLearning.BL.EvlBehaviordescription)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> to compare.</param>
            <param name="b">The second <c>EvlBehaviordescription</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionComparer.GetHashCode(GE.MyLearning.BL.EvlBehaviordescription)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionComparer.Compare(GE.MyLearning.BL.EvlBehaviordescription,GE.MyLearning.BL.EvlBehaviordescription)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviordescriptionKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionKey.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionKey.#ctor(GE.MyLearning.BL.EvlBehaviordescriptionBase)">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescriptionKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlBehaviordescriptionKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviordescriptionColumn">
            <summary>
            Enumerate the EvlBehaviordescription columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionColumn.BehaviorId">
            <summary>
            BehaviorId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionColumn.Score">
            <summary>
            Score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlBehaviordescriptionColumn.Dept">
            <summary>
            Dept : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehavior">
            <summary>
             An object representation of the 'evl_Behavior' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehavior.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlBehavior"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupItem">
            <summary>
             An object representation of the 'VU_GroupItem' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupItem.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuGroupItem"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.RolePermission">
            <summary>
             An object representation of the 'RolePermission' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.RolePermission.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.RolePermission"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwTrainingUserLog">
            <summary>
             An object representation of the 'VW_TrainingUserLog' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwTrainingUserLog.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwTrainingUserLog"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoreBase">
            <summary>
             An object representation of the 'evl_score' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlScore">
            <summary>
            	The data structure representation of the 'evl_score' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlScore.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_score"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.Userid">
            <summary>
            userid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.Assessmentid">
            <summary>
            assessmentid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.CatalogOneid">
            <summary>
            catalog_oneid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.CatalogTwoid">
            <summary>
            catalog_twoid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.Behaviorid">
            <summary>
            behaviorid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.Scorelevel">
            <summary>
            scorelevel : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.Scorereal">
            <summary>
            scorereal : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.EvlDate">
            <summary>
            evlDate : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlScore.EvlTimes">
            <summary>
            evlTimes : 评测次数
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlScoreBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.DateTime,System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlScoreBase"/> instance.
            </summary>
            <param name="_userid"></param>
            <param name="_assessmentid"></param>
            <param name="_catalogOneid"></param>
            <param name="_catalogTwoid"></param>
            <param name="_behaviorid"></param>
            <param name="_scorelevel"></param>
            <param name="_score"></param>
            <param name="_scorereal"></param>
            <param name="_modelId"></param>
            <param name="_evlDate"></param>
            <param name="_evlTimes">评测次数</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.CreateEvlScore(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Int32},System.DateTime,System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlScore"/> instance.
            </summary>
            <param name="_userid"></param>
            <param name="_assessmentid"></param>
            <param name="_catalogOneid"></param>
            <param name="_catalogTwoid"></param>
            <param name="_behaviorid"></param>
            <param name="_scorelevel"></param>
            <param name="_score"></param>
            <param name="_scorereal"></param>
            <param name="_modelId"></param>
            <param name="_evlDate"></param>
            <param name="_evlTimes">评测次数</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlScore Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.Copy">
            <summary>
              Returns a Typed EvlScore Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.DeepCopy">
            <summary>
              Returns a Typed EvlScore Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.IsPropertyChanged(GE.MyLearning.BL.EvlScoreColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.GetOriginalEntity">
            <summary>
              Returns a EvlScore Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlScoreBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlScoreBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.Equals(GE.MyLearning.BL.EvlScoreBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlScoreBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.ValueEquals(GE.MyLearning.BL.EvlScoreBase,GE.MyLearning.BL.EvlScoreBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlScoreBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlScoreBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlScoreBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.OnColumnChanging(GE.MyLearning.BL.EvlScoreColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlScoreBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlScoreColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.OnColumnChanged(GE.MyLearning.BL.EvlScoreColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlScoreBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlScoreColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.OnColumnChanging(GE.MyLearning.BL.EvlScoreColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlScoreBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlScoreColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.OnColumnChanged(GE.MyLearning.BL.EvlScoreColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlScoreBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlScoreColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlScoreBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlScoreBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.Userid">
            <summary>
            	Gets or sets the Userid property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.Assessmentid">
            <summary>
            	Gets or sets the Assessmentid property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsAssessmentidNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.CatalogOneid">
            <summary>
            	Gets or sets the CatalogOneid property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCatalogOneidNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.CatalogTwoid">
            <summary>
            	Gets or sets the CatalogTwoid property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCatalogTwoidNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.Behaviorid">
            <summary>
            	Gets or sets the Behaviorid property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsBehavioridNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.Scorelevel">
            <summary>
            	Gets or sets the Scorelevel property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsScorelevelNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.Score">
            <summary>
            	Gets or sets the Score property. 
            	
            </summary>
            <value>This type is decimal.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsScoreNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.Scorereal">
            <summary>
            	Gets or sets the Scorereal property. 
            	
            </summary>
            <value>This type is decimal.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsScorerealNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.ModelId">
            <summary>
            	Gets or sets the ModelId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsModelIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.EvlDate">
            <summary>
            	Gets or sets the EvlDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.EvlTimes">
            <summary>
            	Gets or sets the EvlTimes property. 
            	评测次数
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsEvlTimesNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlScoreBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlScoreBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoreBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData">
            <summary>
            	The data structure representation of the 'evl_score' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_score"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.Userid">
            <summary>
            userid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.Assessmentid">
            <summary>
            assessmentid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.CatalogOneid">
            <summary>
            catalog_oneid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.CatalogTwoid">
            <summary>
            catalog_twoid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.Behaviorid">
            <summary>
            behaviorid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.Scorelevel">
            <summary>
            scorelevel : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.Scorereal">
            <summary>
            scorereal : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.EvlDate">
            <summary>
            evlDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.EvlTimes">
            <summary>
            evlTimes : 评测次数
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreBase.EvlScoreEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoreEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlScore"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreEventArgs.#ctor(GE.MyLearning.BL.EvlScoreColumn)">
            <summary>
             Initalizes a new Instance of the EvlScoreEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreEventArgs.#ctor(GE.MyLearning.BL.EvlScoreColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlScoreEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreEventArgs.Column">
            <summary>
             The EvlScoreColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlScoreColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoreEventHandler">
            <summary>
             Define a delegate for all EvlScore related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoreComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlScoreComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreComparer.#ctor(GE.MyLearning.BL.EvlScoreColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlScoreComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreComparer.Equals(GE.MyLearning.BL.EvlScore,GE.MyLearning.BL.EvlScore)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlScore"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlScore"/> to compare.</param>
            <param name="b">The second <c>EvlScore</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreComparer.GetHashCode(GE.MyLearning.BL.EvlScore)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreComparer.Compare(GE.MyLearning.BL.EvlScore,GE.MyLearning.BL.EvlScore)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoreKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlScore"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreKey.#ctor">
            <summary>
            Initializes a new instance of the EvlScoreKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreKey.#ctor(GE.MyLearning.BL.EvlScoreBase)">
            <summary>
            Initializes a new instance of the EvlScoreKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlScoreKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoreKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlScoreKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoreColumn">
            <summary>
            Enumerate the EvlScore columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.Userid">
            <summary>
            Userid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.Assessmentid">
            <summary>
            Assessmentid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.CatalogOneid">
            <summary>
            CatalogOneid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.CatalogTwoid">
            <summary>
            CatalogTwoid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.Behaviorid">
            <summary>
            Behaviorid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.Scorelevel">
            <summary>
            Scorelevel : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.Score">
            <summary>
            Score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.Scorereal">
            <summary>
            Scorereal : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.ModelId">
            <summary>
            ModelId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.EvlDate">
            <summary>
            EvlDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlScoreColumn.EvlTimes">
            <summary>
            EvlTimes : 评测次数
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScore">
            <summary>
             An object representation of the 'evl_score' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlScore.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlScore"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlGuestevl">
            <summary>
             An object representation of the 'evl_guestevl' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.EvlGuestevlBase">
            <summary>
             An object representation of the 'evl_guestevl' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlGuestevl">
            <summary>
            	The data structure representation of the 'evl_guestevl' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlGuestevl.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlGuestevl.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_guestevl"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlGuestevl.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlGuestevl.AssmId">
            <summary>
            assm_id : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlGuestevl.Email">
            <summary>
            email : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlGuestevl.BeEvaluationUserId">
            <summary>
            beEvaluationUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlGuestevl.Link">
            <summary>
            link : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlGuestevlBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlGuestevlBase"/> instance.
            </summary>
            <param name="_modelId"></param>
            <param name="_assmId"></param>
            <param name="_email"></param>
            <param name="_beEvaluationUserId"></param>
            <param name="_link"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.CreateEvlGuestevl(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> instance.
            </summary>
            <param name="_modelId"></param>
            <param name="_assmId"></param>
            <param name="_email"></param>
            <param name="_beEvaluationUserId"></param>
            <param name="_link"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlGuestevl Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.Copy">
            <summary>
              Returns a Typed EvlGuestevl Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.DeepCopy">
            <summary>
              Returns a Typed EvlGuestevl Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.IsPropertyChanged(GE.MyLearning.BL.EvlGuestevlColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.GetOriginalEntity">
            <summary>
              Returns a EvlGuestevl Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlGuestevlBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlGuestevlBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.Equals(GE.MyLearning.BL.EvlGuestevlBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlGuestevlBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.ValueEquals(GE.MyLearning.BL.EvlGuestevlBase,GE.MyLearning.BL.EvlGuestevlBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlGuestevlBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlGuestevlBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlGuestevlBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.OnColumnChanging(GE.MyLearning.BL.EvlGuestevlColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlGuestevlBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlGuestevlColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.OnColumnChanged(GE.MyLearning.BL.EvlGuestevlColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlGuestevlBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlGuestevlColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.OnColumnChanging(GE.MyLearning.BL.EvlGuestevlColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlGuestevlBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlGuestevlColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.OnColumnChanged(GE.MyLearning.BL.EvlGuestevlColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlGuestevlBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlGuestevlColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlGuestevlBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlGuestevlBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.ModelId">
            <summary>
            	Gets or sets the ModelId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsModelIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.AssmId">
            <summary>
            	Gets or sets the AssmId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsAssmIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.Email">
            <summary>
            	Gets or sets the Email property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.BeEvaluationUserId">
            <summary>
            	Gets or sets the BeEvaluationUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.Link">
            <summary>
            	Gets or sets the Link property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlGuestevlBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlGuestevlBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlGuestevlBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlGuestevlBase.EvlGuestevlEntityData">
            <summary>
            	The data structure representation of the 'evl_guestevl' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase.EvlGuestevlEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_guestevl"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase.EvlGuestevlEntityData.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase.EvlGuestevlEntityData.AssmId">
            <summary>
            assm_id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase.EvlGuestevlEntityData.Email">
            <summary>
            email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase.EvlGuestevlEntityData.BeEvaluationUserId">
            <summary>
            beEvaluationUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlBase.EvlGuestevlEntityData.Link">
            <summary>
            link : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.EvlGuestevlEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlBase.EvlGuestevlEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlBase.EvlGuestevlEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevl.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CoursewaresEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Coursewares"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresEventArgs.#ctor(GE.MyLearning.BL.CoursewaresColumn)">
            <summary>
             Initalizes a new Instance of the CoursewaresEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresEventArgs.#ctor(GE.MyLearning.BL.CoursewaresColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CoursewaresEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresEventArgs.Column">
            <summary>
             The CoursewaresColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.CoursewaresColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.CoursewaresEventHandler">
            <summary>
             Define a delegate for all Coursewares related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CoursewaresComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CoursewaresComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresComparer.#ctor(GE.MyLearning.BL.CoursewaresColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CoursewaresComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresComparer.Equals(GE.MyLearning.BL.Coursewares,GE.MyLearning.BL.Coursewares)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Coursewares"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Coursewares"/> to compare.</param>
            <param name="b">The second <c>Coursewares</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresComparer.GetHashCode(GE.MyLearning.BL.Coursewares)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresComparer.Compare(GE.MyLearning.BL.Coursewares,GE.MyLearning.BL.Coursewares)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.CoursewaresKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Coursewares"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresKey.#ctor">
            <summary>
            Initializes a new instance of the CoursewaresKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresKey.#ctor(GE.MyLearning.BL.CoursewaresBase)">
            <summary>
            Initializes a new instance of the CoursewaresKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CoursewaresKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CoursewaresKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CoursewaresKey.CoursewareId">
            <summary>
            Gets or sets the CoursewareId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CoursewaresColumn">
            <summary>
            Enumerate the Coursewares columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.CoursewareId">
            <summary>
            CoursewareId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.CoursewareName">
            <summary>
            CoursewareName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.CreateUserId">
            <summary>
            CreateUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.CoursewareFileName">
            <summary>
            CoursewareFileName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.CoursewareFilePath">
            <summary>
            CoursewareFilePath : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.CoursewareDifficulty">
            <summary>
            CoursewareDifficulty : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.CoursewareOrder">
            <summary>
            CoursewareOrder : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.CoursewareType">
            <summary>
            CoursewareType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CoursewaresColumn.ResourceType">
            <summary>
            ResourceType : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Courses">
            <summary>
             An object representation of the 'Courses' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.Courses.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Courses"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryManager">
            <summary>
             An object representation of the 'VU_Catogary_Manager' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryManager.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryExperts">
            <summary>
             An object representation of the 'VU_Catogary_Experts' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryExpertsBase">
            <summary>
             An object representation of the 'VU_Catogary_Experts' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.#ctor(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsBase"/> instance.
            </summary>
            <param name="_catogaryId"></param>
            <param name="_owner"></param>
            <param name="_email"></param>
            <param name="_area"></param>
            <param name="_name"></param>
            <param name="_classid"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.CreateVuCatogaryExperts(System.Nullable{System.Int32},System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> instance.
            </summary>
            <param name="_catogaryId"></param>
            <param name="_owner"></param>
            <param name="_email"></param>
            <param name="_area"></param>
            <param name="_name"></param>
            <param name="_classid"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuCatogaryExperts Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.Copy">
            <summary>
              Returns a Typed VuCatogaryExperts Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.DeepCopy">
            <summary>
              Returns a Typed VuCatogaryExperts Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.IsPropertyChanged(GE.MyLearning.BL.VuCatogaryExpertsColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.GetOriginalEntity">
            <summary>
              Returns a VuCatogaryExperts Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.Equals(GE.MyLearning.BL.VuCatogaryExpertsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.ValueEquals(GE.MyLearning.BL.VuCatogaryExpertsBase,GE.MyLearning.BL.VuCatogaryExpertsBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.OnColumnChanging(GE.MyLearning.BL.VuCatogaryExpertsColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryExpertsBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.OnColumnChanged(GE.MyLearning.BL.VuCatogaryExpertsColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryExpertsBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.OnColumnChanging(GE.MyLearning.BL.VuCatogaryExpertsColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryExpertsBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.OnColumnChanged(GE.MyLearning.BL.VuCatogaryExpertsColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryExpertsBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryExpertsColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryExpertsBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryExpertsBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.CatogaryId">
            <summary>
            	Gets or sets the CatogaryId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCatogaryIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.Owner">
            <summary>
            	Gets or sets the Owner property. 
            	
            </summary>
            <value>This type is char.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.Email">
            <summary>
            	Gets or sets the Email property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.Area">
            <summary>
            	Gets or sets the Area property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.Classid">
            <summary>
            	Gets or sets the Classid property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryExpertsBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryExpertsBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryExpertsBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData">
            <summary>
            	The data structure representation of the 'VU_Catogary_Experts' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_Catogary_Experts"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData.CatogaryId">
            <summary>
            CatogaryID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData.Owner">
            <summary>
            Owner : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData.Email">
            <summary>
            email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData.Area">
            <summary>
            area : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData.Name">
            <summary>
            name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsBase.VuCatogaryExpertsEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExperts.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuFriendship">
            <summary>
             An object representation of the 'vu_friendship' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.VuFriendshipBase">
            <summary>
             An object representation of the 'vu_friendship' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuFriendshipBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.#ctor(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuFriendshipBase"/> instance.
            </summary>
            <param name="_webname"></param>
            <param name="_weburl"></param>
            <param name="_classid"></param>
            <param name="_orderlist"></param>
            <param name="_pic"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.CreateVuFriendship(System.String,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuFriendship"/> instance.
            </summary>
            <param name="_webname"></param>
            <param name="_weburl"></param>
            <param name="_classid"></param>
            <param name="_orderlist"></param>
            <param name="_pic"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuFriendship Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.Copy">
            <summary>
              Returns a Typed VuFriendship Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.DeepCopy">
            <summary>
              Returns a Typed VuFriendship Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.IsPropertyChanged(GE.MyLearning.BL.VuFriendshipColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.GetOriginalEntity">
            <summary>
              Returns a VuFriendship Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuFriendshipBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuFriendshipBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.Equals(GE.MyLearning.BL.VuFriendshipBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuFriendshipBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.ValueEquals(GE.MyLearning.BL.VuFriendshipBase,GE.MyLearning.BL.VuFriendshipBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuFriendshipBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuFriendshipBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuFriendshipBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.OnColumnChanging(GE.MyLearning.BL.VuFriendshipColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuFriendshipBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuFriendshipColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.OnColumnChanged(GE.MyLearning.BL.VuFriendshipColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuFriendshipBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuFriendshipColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.OnColumnChanging(GE.MyLearning.BL.VuFriendshipColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuFriendshipBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuFriendshipColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.OnColumnChanged(GE.MyLearning.BL.VuFriendshipColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuFriendshipBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuFriendshipColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuFriendshipBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuFriendshipBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.Webname">
            <summary>
            	Gets or sets the Webname property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.Weburl">
            <summary>
            	Gets or sets the Weburl property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.Classid">
            <summary>
            	Gets or sets the Classid property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.Orderlist">
            <summary>
            	Gets or sets the Orderlist property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsOrderlistNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.Pic">
            <summary>
            	Gets or sets the Pic property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuFriendshipBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuFriendshipBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuFriendshipBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuFriendshipBase.VuFriendshipEntityData">
            <summary>
            	The data structure representation of the 'vu_friendship' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase.VuFriendshipEntityData.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "vu_friendship"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase.VuFriendshipEntityData.Webname">
            <summary>
            webname : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase.VuFriendshipEntityData.Weburl">
            <summary>
            weburl : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase.VuFriendshipEntityData.Classid">
            <summary>
            classid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase.VuFriendshipEntityData.Orderlist">
            <summary>
            orderlist : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipBase.VuFriendshipEntityData.Pic">
            <summary>
            pic : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.VuFriendshipEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipBase.VuFriendshipEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipBase.VuFriendshipEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendship.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuFriendship"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuNewpost">
            <summary>
             An object representation of the 'VU_NEWPOST' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VuNewpost.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuNewpost"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuArticleEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuArticle"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleEventArgs.#ctor(GE.MyLearning.BL.VuArticleColumn)">
            <summary>
             Initalizes a new Instance of the VuArticleEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleEventArgs.#ctor(GE.MyLearning.BL.VuArticleColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuArticleEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleEventArgs.Column">
            <summary>
             The VuArticleColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuArticleColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuArticleEventHandler">
            <summary>
             Define a delegate for all VuArticle related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuArticleComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuArticleComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleComparer.#ctor(GE.MyLearning.BL.VuArticleColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuArticleComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleComparer.Equals(GE.MyLearning.BL.VuArticle,GE.MyLearning.BL.VuArticle)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuArticle"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuArticle"/> to compare.</param>
            <param name="b">The second <c>VuArticle</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleComparer.GetHashCode(GE.MyLearning.BL.VuArticle)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleComparer.Compare(GE.MyLearning.BL.VuArticle,GE.MyLearning.BL.VuArticle)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuArticleKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuArticle"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleKey.#ctor">
            <summary>
            Initializes a new instance of the VuArticleKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleKey.#ctor(GE.MyLearning.BL.VuArticleBase)">
            <summary>
            Initializes a new instance of the VuArticleKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuArticleKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuArticleKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuArticleKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuArticleColumn">
            <summary>
            Enumerate the VuArticle columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleColumn.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleColumn.Biaoti">
            <summary>
            Biaoti : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleColumn.Lianjie">
            <summary>
            Lianjie : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleColumn.Neirong">
            <summary>
            Neirong : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleColumn.Today">
            <summary>
            Today : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleColumn.Sorts">
            <summary>
            Sorts : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuArticleColumn.Closed">
            <summary>
            Closed : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserInfo">
            <summary>
             An object representation of the 'UserInfo' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.UserInfoBase">
            <summary>
             An object representation of the 'UserInfo' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IUserInfo">
            <summary>
            	The data structure representation of the 'UserInfo' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IUserInfo.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.UserId">
            <summary>			
            UserID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "UserInfo"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.OriginalUserId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.Password">
            <summary>
            Password : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.Telephone">
            <summary>
            Telephone : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.Email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.UserStatus">
            <summary>
            UserStatus : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.FeBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.Mobile">
            <summary>
            Mobile : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.UserType">
            <summary>
            UserType : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.UserCredit">
            <summary>
            UserCredit : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.Department">
            <summary>
            department : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.OhrSolidLineMgrId">
            <summary>
            OHR_Solid_Line_Mgr_ID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IUserInfo.OhrHrRep">
            <summary>
            OHR_HR_Rep : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.UserInfoBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.UserInfoBase"/> instance.
            </summary>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_password"></param>
            <param name="_telephone"></param>
            <param name="_email"></param>
            <param name="_userStatus"></param>
            <param name="_createTime"></param>
            <param name="_feBadgeId"></param>
            <param name="_mobile"></param>
            <param name="_userType"></param>
            <param name="_userCredit"></param>
            <param name="_department"></param>
            <param name="_ohrSolidLineMgrId"></param>
            <param name="_ohrHrRep"></param>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.CreateUserInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.UserInfo"/> instance.
            </summary>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_password"></param>
            <param name="_telephone"></param>
            <param name="_email"></param>
            <param name="_userStatus"></param>
            <param name="_createTime"></param>
            <param name="_feBadgeId"></param>
            <param name="_mobile"></param>
            <param name="_userType"></param>
            <param name="_userCredit"></param>
            <param name="_department"></param>
            <param name="_ohrSolidLineMgrId"></param>
            <param name="_ohrHrRep"></param>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed UserInfo Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.Copy">
            <summary>
              Returns a Typed UserInfo Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.DeepCopy">
            <summary>
              Returns a Typed UserInfo Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.IsPropertyChanged(GE.MyLearning.BL.UserInfoColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.GetOriginalEntity">
            <summary>
              Returns a UserInfo Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.UserInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.UserInfoBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.Equals(GE.MyLearning.BL.UserInfoBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.UserInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.ValueEquals(GE.MyLearning.BL.UserInfoBase,GE.MyLearning.BL.UserInfoBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.UserInfoBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.UserInfoBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.UserInfoBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.OnColumnChanging(GE.MyLearning.BL.UserInfoColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserInfoBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserInfoColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.OnColumnChanged(GE.MyLearning.BL.UserInfoColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserInfoBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserInfoColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.OnColumnChanging(GE.MyLearning.BL.UserInfoColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserInfoBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserInfoColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.OnColumnChanged(GE.MyLearning.BL.UserInfoColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.UserInfoBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.UserInfoColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.UserInfoBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.UserInfoBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.UserId">
            <summary>
            	Gets or sets the UserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.OriginalUserId">
            <summary>
            	Get the original value of the UserID property.
            	
            </summary>
            <remarks>This is the original value of the UserID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.UserName">
            <summary>
            	Gets or sets the UserName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.UserCnName">
            <summary>
            	Gets or sets the UserCnName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.Password">
            <summary>
            	Gets or sets the Password property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.Telephone">
            <summary>
            	Gets or sets the Telephone property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.Email">
            <summary>
            	Gets or sets the Email property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.UserStatus">
            <summary>
            	Gets or sets the UserStatus property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsUserStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.CreateTime">
            <summary>
            	Gets or sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreateTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.FeBadgeId">
            <summary>
            	Gets or sets the FeBadgeId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.Mobile">
            <summary>
            	Gets or sets the Mobile property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.UserType">
            <summary>
            	Gets or sets the UserType property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsUserTypeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.UserCredit">
            <summary>
            	Gets or sets the UserCredit property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsUserCreditNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.Department">
            <summary>
            	Gets or sets the Department property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.OhrSolidLineMgrId">
            <summary>
            	Gets or sets the OhrSolidLineMgrId property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.OhrHrRep">
            <summary>
            	Gets or sets the OhrHrRep property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.UserInfoBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.UserInfoBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserInfoBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData">
            <summary>
            	The data structure representation of the 'UserInfo' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.UserId">
            <summary>			
            UserID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "UserInfo"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.OriginalUserId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.Password">
            <summary>
            Password : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.Telephone">
            <summary>
            Telephone : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.Email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.UserStatus">
            <summary>
            UserStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.FeBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.Mobile">
            <summary>
            Mobile : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.UserType">
            <summary>
            UserType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.UserCredit">
            <summary>
            UserCredit : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.Department">
            <summary>
            department : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.OhrSolidLineMgrId">
            <summary>
            OHR_Solid_Line_Mgr_ID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.OhrHrRep">
            <summary>
            OHR_HR_Rep : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoBase.UserInfoEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfo.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.UserInfo"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwTrainingUserColumn">
            <summary>
            Enumerate the VwTrainingUser columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TrainUserId">
            <summary>
            TrainUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TrainingUserType">
            <summary>
            TrainingUserType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TrainUserStatus">
            <summary>
            TrainUserStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TrainAuditingStatus">
            <summary>
            TrainAuditingStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TrainAuditingMan">
            <summary>
            TrainAuditingMan : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TrainAuditingDate">
            <summary>
            TrainAuditingDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TrainAuditingDescription">
            <summary>
            TrainAuditingDescription : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.Email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.FeBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.GroupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TrainingFinishTime">
            <summary>
            TrainingFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TestFinishTime">
            <summary>
            TestFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.InvestigationFinishTime">
            <summary>
            InvestigationFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.StudyFinishTime">
            <summary>
            StudyFinishTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TrainTimeUseCredit">
            <summary>
            TrainTimeUseCredit : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.TrainTimeAddPoint">
            <summary>
            TrainTimeAddPoint : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwTrainingUserColumn.CourseId">
            <summary>
            CourseID : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwStudentsBase">
            <summary>
             An object representation of the 'VW_Students' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._studentId">
            <summary>
            StudentID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._createTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._notes">
            <summary>
            Notes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._studies">
            <summary>
            studies : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._userName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._userCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._degreeId">
            <summary>
            DegreeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._feBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._department">
            <summary>
            department : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._applyDate">
            <summary>
            ApplyDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._approvalofHuman">
            <summary>
            ApprovalofHuman : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._approveofDate">
            <summary>
            ApproveofDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwStudentsBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.#ctor(System.Int32,System.Nullable{System.DateTime},System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwStudentsBase"/> instance.
            </summary>
            <param name="_studentId"></param>
            <param name="_createTime"></param>
            <param name="_status"></param>
            <param name="_notes"></param>
            <param name="_studies"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_degreeId"></param>
            <param name="_feBadgeId"></param>
            <param name="_department"></param>
            <param name="_email"></param>
            <param name="_applyDate"></param>
            <param name="_approvalofHuman"></param>
            <param name="_approveofDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.CreateVwStudents(System.Int32,System.Nullable{System.DateTime},System.Int32,System.String,System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.Nullable{System.DateTime},System.String,System.Nullable{System.DateTime})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwStudents"/> instance.
            </summary>
            <param name="_studentId"></param>
            <param name="_createTime"></param>
            <param name="_status"></param>
            <param name="_notes"></param>
            <param name="_studies"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_degreeId"></param>
            <param name="_feBadgeId"></param>
            <param name="_department"></param>
            <param name="_email"></param>
            <param name="_applyDate"></param>
            <param name="_approvalofHuman"></param>
            <param name="_approveofDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.Copy">
            <summary>
              Returns a Typed VwStudentsBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.Equals(GE.MyLearning.BL.VwStudentsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwStudentsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.Equals(GE.MyLearning.BL.VwStudentsBase,GE.MyLearning.BL.VwStudentsBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwStudentsBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwStudentsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwStudentsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.GetPropertyValueByName(GE.MyLearning.BL.VwStudents,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.StudentId">
            <summary>
            	Gets or Sets the StudentID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.CreateTime">
            <summary>
            	Gets or Sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreateTimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.Status">
            <summary>
            	Gets or Sets the Status property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.Notes">
            <summary>
            	Gets or Sets the Notes property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.Studies">
            <summary>
            	Gets or Sets the studies property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.UserName">
            <summary>
            	Gets or Sets the UserName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.UserCnName">
            <summary>
            	Gets or Sets the UserCNName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.DegreeId">
            <summary>
            	Gets or Sets the DegreeID property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.FeBadgeId">
            <summary>
            	Gets or Sets the FEBadgeID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.Department">
            <summary>
            	Gets or Sets the department property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.Email">
            <summary>
            	Gets or Sets the Email property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.ApplyDate">
            <summary>
            	Gets or Sets the ApplyDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsApplyDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.ApprovalofHuman">
            <summary>
            	Gets or Sets the ApprovalofHuman property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.ApproveofDate">
            <summary>
            	Gets or Sets the ApproveofDate property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsApproveofDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwStudentsBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwStudentsBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwStudentsBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwStudentsColumn">
            <summary>
            Enumerate the VwStudents columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.StudentId">
            <summary>
            StudentID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.Notes">
            <summary>
            Notes : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.Studies">
            <summary>
            studies : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.DegreeId">
            <summary>
            DegreeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.FeBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.Department">
            <summary>
            department : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.Email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.ApplyDate">
            <summary>
            ApplyDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.ApprovalofHuman">
            <summary>
            ApprovalofHuman : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwStudentsColumn.ApproveofDate">
            <summary>
            ApproveofDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstitutesColumn">
            <summary>
            Enumerate the VwInstitutes columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.InstituteId">
            <summary>
            InstituteID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.InstituteName">
            <summary>
            InstituteName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.InstituteDean">
            <summary>
            InstituteDean : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.Createtime">
            <summary>
            Createtime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwInstitutesColumn.FeBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwEvlUserColumn">
            <summary>
            Enumerate the VwEvlUser columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserColumn.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserColumn.Name">
            <summary>
            name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserColumn.ValiddateStart">
            <summary>
            validdateStart : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserColumn.Validdateend">
            <summary>
            validdateend : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserColumn.Isused">
            <summary>
            isused : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwEvlUserColumn.Evltimes">
            <summary>
            evltimes : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlVLearningRecordExcel">
            <summary>
             An object representation of the 'evl_v_LearningRecordExcel' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlVLearningRecordExcel.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcel"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlVLearningRecordCsvColumn">
            <summary>
            Enumerate the EvlVLearningRecordCsv columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvColumn.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvColumn.Sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvColumn.CompletedDate">
            <summary>
            CompletedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvColumn.Courseid">
            <summary>
            courseid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvColumn.Id">
            <summary>
            ID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlVLearningRecordCsvColumn.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Validation.PropertyValidatorValueAccessBuilder">
            <summary>
            Property Validator Value Access Builder
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidatorValueAccessBuilder.DoGetFieldValueAccess(System.Reflection.FieldInfo)">
            <summary>
            Does the get field value access.
            </summary>
            <param name="fieldInfo">The field info.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidatorValueAccessBuilder.DoGetMethodValueAccess(System.Reflection.MethodInfo)">
            <summary>
            Does the get method value access.
            </summary>
            <param name="methodInfo">The method info.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.Validation.PropertyValidatorValueAccessBuilder.DoGetPropertyValueAccess(System.Reflection.PropertyInfo)">
            <summary>
            Does the get property value access.
            </summary>
            <param name="propertyInfo">The property info.</param>
            <returns></returns>
        </member>
        <member name="T:GE.MyLearning.BL.EvlGuestevlEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlEventArgs.#ctor(GE.MyLearning.BL.EvlGuestevlColumn)">
            <summary>
             Initalizes a new Instance of the EvlGuestevlEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlEventArgs.#ctor(GE.MyLearning.BL.EvlGuestevlColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlGuestevlEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlEventArgs.Column">
            <summary>
             The EvlGuestevlColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlGuestevlColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlGuestevlEventHandler">
            <summary>
             Define a delegate for all EvlGuestevl related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlGuestevlComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlGuestevlComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlComparer.#ctor(GE.MyLearning.BL.EvlGuestevlColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlGuestevlComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlComparer.Equals(GE.MyLearning.BL.EvlGuestevl,GE.MyLearning.BL.EvlGuestevl)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlGuestevl"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlGuestevl"/> to compare.</param>
            <param name="b">The second <c>EvlGuestevl</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlComparer.GetHashCode(GE.MyLearning.BL.EvlGuestevl)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlComparer.Compare(GE.MyLearning.BL.EvlGuestevl,GE.MyLearning.BL.EvlGuestevl)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlGuestevlKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlKey.#ctor">
            <summary>
            Initializes a new instance of the EvlGuestevlKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlKey.#ctor(GE.MyLearning.BL.EvlGuestevlBase)">
            <summary>
            Initializes a new instance of the EvlGuestevlKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlGuestevlKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlGuestevlKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlGuestevlKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlGuestevlColumn">
            <summary>
            Enumerate the EvlGuestevl columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlColumn.ModelId">
            <summary>
            ModelId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlColumn.AssmId">
            <summary>
            AssmId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlColumn.Email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlColumn.BeEvaluationUserId">
            <summary>
            BeEvaluationUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlGuestevlColumn.Link">
            <summary>
            Link : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordExcel">
            <summary>
             An object representation of the 'LearningRecordExcel' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordExcelBase">
            <summary>
             An object representation of the 'LearningRecordExcel' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.LearningRecordExcelBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.#ctor(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.LearningRecordExcelBase"/> instance.
            </summary>
            <param name="_courseName"></param>
            <param name="_sso"></param>
            <param name="_userName"></param>
            <param name="_function"></param>
            <param name="_startDate"></param>
            <param name="_completedDate"></param>
            <param name="_location"></param>
            <param name="_trainer"></param>
            <param name="_courseid"></param>
            <param name="_createdDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.CreateLearningRecordExcel(System.String,System.String,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> instance.
            </summary>
            <param name="_courseName"></param>
            <param name="_sso"></param>
            <param name="_userName"></param>
            <param name="_function"></param>
            <param name="_startDate"></param>
            <param name="_completedDate"></param>
            <param name="_location"></param>
            <param name="_trainer"></param>
            <param name="_courseid"></param>
            <param name="_createdDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed LearningRecordExcel Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.Copy">
            <summary>
              Returns a Typed LearningRecordExcel Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.DeepCopy">
            <summary>
              Returns a Typed LearningRecordExcel Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.IsPropertyChanged(GE.MyLearning.BL.LearningRecordExcelColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.GetOriginalEntity">
            <summary>
              Returns a LearningRecordExcel Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.LearningRecordExcelBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.LearningRecordExcelBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.Equals(GE.MyLearning.BL.LearningRecordExcelBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.LearningRecordExcelBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.ValueEquals(GE.MyLearning.BL.LearningRecordExcelBase,GE.MyLearning.BL.LearningRecordExcelBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.LearningRecordExcelBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.LearningRecordExcelBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.LearningRecordExcelBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.OnColumnChanging(GE.MyLearning.BL.LearningRecordExcelColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LearningRecordExcelBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LearningRecordExcelColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.OnColumnChanged(GE.MyLearning.BL.LearningRecordExcelColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LearningRecordExcelBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LearningRecordExcelColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.OnColumnChanging(GE.MyLearning.BL.LearningRecordExcelColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LearningRecordExcelBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LearningRecordExcelColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.OnColumnChanged(GE.MyLearning.BL.LearningRecordExcelColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LearningRecordExcelBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LearningRecordExcelColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.LearningRecordExcelBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.LearningRecordExcelBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.CourseName">
            <summary>
            	Gets or sets the CourseName property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.Sso">
            <summary>
            	Gets or sets the Sso property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.UserName">
            <summary>
            	Gets or sets the UserName property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.Function">
            <summary>
            	Gets or sets the Function property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.StartDate">
            <summary>
            	Gets or sets the StartDate property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsStartDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.CompletedDate">
            <summary>
            	Gets or sets the CompletedDate property. 
            	
            </summary>
            <value>This type is smalldatetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCompletedDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.Location">
            <summary>
            	Gets or sets the Location property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.Trainer">
            <summary>
            	Gets or sets the Trainer property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.Courseid">
            <summary>
            	Gets or sets the Courseid property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.CreatedDate">
            <summary>
            	Gets or sets the CreatedDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreatedDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.LearningRecordExcelBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.LearningRecordExcelBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordExcelBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData">
            <summary>
            	The data structure representation of the 'LearningRecordExcel' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "LearningRecordExcel"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.Sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.Function">
            <summary>
            Function : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.StartDate">
            <summary>
            StartDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.CompletedDate">
            <summary>
            CompletedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.Location">
            <summary>
            Location : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.Trainer">
            <summary>
            Trainer : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.Courseid">
            <summary>
            courseid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelBase.LearningRecordExcelEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcel.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordCsvBase">
            <summary>
             An object representation of the 'LearningRecordCsv' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.LearningRecordCsvBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.LearningRecordCsvBase"/> instance.
            </summary>
            <param name="_courseName"></param>
            <param name="_description"></param>
            <param name="_sso"></param>
            <param name="_userName"></param>
            <param name="_completedDate"></param>
            <param name="_status"></param>
            <param name="_courseid"></param>
            <param name="_createdDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.CreateLearningRecordCsv(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.DateTime})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> instance.
            </summary>
            <param name="_courseName"></param>
            <param name="_description"></param>
            <param name="_sso"></param>
            <param name="_userName"></param>
            <param name="_completedDate"></param>
            <param name="_status"></param>
            <param name="_courseid"></param>
            <param name="_createdDate"></param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed LearningRecordCsv Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.Copy">
            <summary>
              Returns a Typed LearningRecordCsv Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.DeepCopy">
            <summary>
              Returns a Typed LearningRecordCsv Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.IsPropertyChanged(GE.MyLearning.BL.LearningRecordCsvColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.GetOriginalEntity">
            <summary>
              Returns a LearningRecordCsv Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.LearningRecordCsvBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.LearningRecordCsvBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.Equals(GE.MyLearning.BL.LearningRecordCsvBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.LearningRecordCsvBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.ValueEquals(GE.MyLearning.BL.LearningRecordCsvBase,GE.MyLearning.BL.LearningRecordCsvBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.LearningRecordCsvBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.LearningRecordCsvBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.LearningRecordCsvBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.OnColumnChanging(GE.MyLearning.BL.LearningRecordCsvColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LearningRecordCsvBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LearningRecordCsvColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.OnColumnChanged(GE.MyLearning.BL.LearningRecordCsvColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LearningRecordCsvBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LearningRecordCsvColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.OnColumnChanging(GE.MyLearning.BL.LearningRecordCsvColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LearningRecordCsvBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LearningRecordCsvColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.OnColumnChanged(GE.MyLearning.BL.LearningRecordCsvColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.LearningRecordCsvBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.LearningRecordCsvColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.LearningRecordCsvBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.LearningRecordCsvBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.CourseName">
            <summary>
            	Gets or sets the CourseName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.Sso">
            <summary>
            	Gets or sets the Sso property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.UserName">
            <summary>
            	Gets or sets the UserName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.CompletedDate">
            <summary>
            	Gets or sets the CompletedDate property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.Courseid">
            <summary>
            	Gets or sets the Courseid property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.CreatedDate">
            <summary>
            	Gets or sets the CreatedDate property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsCreatedDateNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.LearningRecordCsvBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.LearningRecordCsvBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordCsvBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData">
            <summary>
            	The data structure representation of the 'LearningRecordCsv' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "LearningRecordCsv"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.Sso">
            <summary>
            SSO : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.CompletedDate">
            <summary>
            CompletedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.Courseid">
            <summary>
            courseid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvBase.LearningRecordCsvEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordCsvEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvEventArgs.#ctor(GE.MyLearning.BL.LearningRecordCsvColumn)">
            <summary>
             Initalizes a new Instance of the LearningRecordCsvEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvEventArgs.#ctor(GE.MyLearning.BL.LearningRecordCsvColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the LearningRecordCsvEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvEventArgs.Column">
            <summary>
             The LearningRecordCsvColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.LearningRecordCsvColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordCsvEventHandler">
            <summary>
             Define a delegate for all LearningRecordCsv related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordCsvComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LearningRecordCsvComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvComparer.#ctor(GE.MyLearning.BL.LearningRecordCsvColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:LearningRecordCsvComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvComparer.Equals(GE.MyLearning.BL.LearningRecordCsv,GE.MyLearning.BL.LearningRecordCsv)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.LearningRecordCsv"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.LearningRecordCsv"/> to compare.</param>
            <param name="b">The second <c>LearningRecordCsv</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvComparer.GetHashCode(GE.MyLearning.BL.LearningRecordCsv)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvComparer.Compare(GE.MyLearning.BL.LearningRecordCsv,GE.MyLearning.BL.LearningRecordCsv)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordCsvKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvKey.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordCsvKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvKey.#ctor(GE.MyLearning.BL.LearningRecordCsvBase)">
            <summary>
            Initializes a new instance of the LearningRecordCsvKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the LearningRecordCsvKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsvKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordCsvKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordCsvColumn">
            <summary>
            Enumerate the LearningRecordCsv columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvColumn.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvColumn.Sso">
            <summary>
            Sso : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvColumn.CompletedDate">
            <summary>
            CompletedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvColumn.Courseid">
            <summary>
            Courseid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordCsvColumn.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCatalog">
            <summary>
             An object representation of the 'evl_catalog' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlCatalog.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlCatalog"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CourseIdeaEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.CourseIdea"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaEventArgs.#ctor(GE.MyLearning.BL.CourseIdeaColumn)">
            <summary>
             Initalizes a new Instance of the CourseIdeaEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaEventArgs.#ctor(GE.MyLearning.BL.CourseIdeaColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the CourseIdeaEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaEventArgs.Column">
            <summary>
             The CourseIdeaColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.CourseIdeaColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.CourseIdeaEventHandler">
            <summary>
             Define a delegate for all CourseIdea related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CourseIdeaComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CourseIdeaComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaComparer.#ctor(GE.MyLearning.BL.CourseIdeaColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:CourseIdeaComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaComparer.Equals(GE.MyLearning.BL.CourseIdea,GE.MyLearning.BL.CourseIdea)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.CourseIdea"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.CourseIdea"/> to compare.</param>
            <param name="b">The second <c>CourseIdea</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaComparer.GetHashCode(GE.MyLearning.BL.CourseIdea)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaComparer.Compare(GE.MyLearning.BL.CourseIdea,GE.MyLearning.BL.CourseIdea)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.CourseIdeaKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.CourseIdea"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaKey.#ctor">
            <summary>
            Initializes a new instance of the CourseIdeaKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaKey.#ctor(GE.MyLearning.BL.CourseIdeaBase)">
            <summary>
            Initializes a new instance of the CourseIdeaKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaKey.#ctor(System.Int64)">
            <summary>
            Initializes a new instance of the CourseIdeaKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.CourseIdeaKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.CourseIdeaKey.CourseideaId">
            <summary>
            Gets or sets the CourseideaId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.CourseIdeaColumn">
            <summary>
            Enumerate the CourseIdea columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.CourseideaId">
            <summary>
            CourseideaId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.CourseUserId">
            <summary>
            CourseUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.CourseUserDate">
            <summary>
            CourseUserDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.CourseKnowledge">
            <summary>
            CourseKnowledge : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.Courseinstance">
            <summary>
            Courseinstance : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.CourseUserIdea">
            <summary>
            CourseUserIdea : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.CheckUserId">
            <summary>
            CheckUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.CheckUserDate">
            <summary>
            CheckUserDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.CheckUserIdea">
            <summary>
            CheckUserIdea : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.CourseIdeaColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlBehaviordescription">
            <summary>
             An object representation of the 'evl_behaviordescription' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlBehaviordescription.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlAssessmentBase">
            <summary>
             An object representation of the 'evl_assessment' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlAssessmentBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.#ctor(System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlAssessmentBase"/> instance.
            </summary>
            <param name="_name"></param>
            <param name="_usertype"></param>
            <param name="_weight"></param>
            <param name="_modelId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.CreateEvlAssessment(System.String,System.Nullable{System.Int32},System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlAssessment"/> instance.
            </summary>
            <param name="_name"></param>
            <param name="_usertype"></param>
            <param name="_weight"></param>
            <param name="_modelId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlAssessment Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.Copy">
            <summary>
              Returns a Typed EvlAssessment Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.DeepCopy">
            <summary>
              Returns a Typed EvlAssessment Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.IsPropertyChanged(GE.MyLearning.BL.EvlAssessmentColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.GetOriginalEntity">
            <summary>
              Returns a EvlAssessment Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlAssessmentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlAssessmentBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.Equals(GE.MyLearning.BL.EvlAssessmentBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlAssessmentBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.ValueEquals(GE.MyLearning.BL.EvlAssessmentBase,GE.MyLearning.BL.EvlAssessmentBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlAssessmentBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlAssessmentBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlAssessmentBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.OnColumnChanging(GE.MyLearning.BL.EvlAssessmentColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlAssessmentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlAssessmentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.OnColumnChanged(GE.MyLearning.BL.EvlAssessmentColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlAssessmentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlAssessmentColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.OnColumnChanging(GE.MyLearning.BL.EvlAssessmentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlAssessmentBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlAssessmentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.OnColumnChanged(GE.MyLearning.BL.EvlAssessmentColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlAssessmentBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlAssessmentColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlAssessmentBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlAssessmentBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.Usertype">
            <summary>
            	Gets or sets the Usertype property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsUsertypeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.Weight">
            <summary>
            	Gets or sets the Weight property. 
            	
            </summary>
            <value>This type is decimal.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsWeightNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.ModelId">
            <summary>
            	Gets or sets the ModelId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsModelIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlAssessmentBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlAssessmentBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlAssessmentBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlAssessmentBase.EvlAssessmentEntityData">
            <summary>
            	The data structure representation of the 'evl_assessment' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentBase.EvlAssessmentEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_assessment"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentBase.EvlAssessmentEntityData.Name">
            <summary>
            name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentBase.EvlAssessmentEntityData.Usertype">
            <summary>
            usertype : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentBase.EvlAssessmentEntityData.Weight">
            <summary>
            weight : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentBase.EvlAssessmentEntityData.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.EvlAssessmentEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentBase.EvlAssessmentEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentBase.EvlAssessmentEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.EvlAssessmentEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentEventArgs.#ctor(GE.MyLearning.BL.EvlAssessmentColumn)">
            <summary>
             Initalizes a new Instance of the EvlAssessmentEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentEventArgs.#ctor(GE.MyLearning.BL.EvlAssessmentColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlAssessmentEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentEventArgs.Column">
            <summary>
             The EvlAssessmentColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlAssessmentColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlAssessmentEventHandler">
            <summary>
             Define a delegate for all EvlAssessment related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlAssessmentComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlAssessmentComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentComparer.#ctor(GE.MyLearning.BL.EvlAssessmentColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlAssessmentComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentComparer.Equals(GE.MyLearning.BL.EvlAssessment,GE.MyLearning.BL.EvlAssessment)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlAssessment"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlAssessment"/> to compare.</param>
            <param name="b">The second <c>EvlAssessment</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentComparer.GetHashCode(GE.MyLearning.BL.EvlAssessment)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentComparer.Compare(GE.MyLearning.BL.EvlAssessment,GE.MyLearning.BL.EvlAssessment)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlAssessmentKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentKey.#ctor">
            <summary>
            Initializes a new instance of the EvlAssessmentKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentKey.#ctor(GE.MyLearning.BL.EvlAssessmentBase)">
            <summary>
            Initializes a new instance of the EvlAssessmentKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlAssessmentKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessmentKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlAssessmentKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlAssessmentColumn">
            <summary>
            Enumerate the EvlAssessment columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentColumn.Name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentColumn.Usertype">
            <summary>
            Usertype : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentColumn.Weight">
            <summary>
            Weight : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlAssessmentColumn.ModelId">
            <summary>
            ModelId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.NoticesEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Notices"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesEventArgs.#ctor(GE.MyLearning.BL.NoticesColumn)">
            <summary>
             Initalizes a new Instance of the NoticesEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesEventArgs.#ctor(GE.MyLearning.BL.NoticesColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the NoticesEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesEventArgs.Column">
            <summary>
             The NoticesColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.NoticesColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.NoticesEventHandler">
            <summary>
             Define a delegate for all Notices related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.NoticesComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NoticesComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesComparer.#ctor(GE.MyLearning.BL.NoticesColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:NoticesComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesComparer.Equals(GE.MyLearning.BL.Notices,GE.MyLearning.BL.Notices)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Notices"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Notices"/> to compare.</param>
            <param name="b">The second <c>Notices</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesComparer.GetHashCode(GE.MyLearning.BL.Notices)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesComparer.Compare(GE.MyLearning.BL.Notices,GE.MyLearning.BL.Notices)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.NoticesKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Notices"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesKey.#ctor">
            <summary>
            Initializes a new instance of the NoticesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesKey.#ctor(GE.MyLearning.BL.NoticesBase)">
            <summary>
            Initializes a new instance of the NoticesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the NoticesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.NoticesKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.NoticesKey.NoticeId">
            <summary>
            Gets or sets the NoticeId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.NoticesColumn">
            <summary>
            Enumerate the Notices columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesColumn.NoticeId">
            <summary>
            NoticeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesColumn.NoticeTitle">
            <summary>
            NoticeTitle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesColumn.NoticeDetail">
            <summary>
            NoticeDetail : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesColumn.NoticeType">
            <summary>
            NoticeType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesColumn.UserId">
            <summary>
            UserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesColumn.UserReadTime">
            <summary>
            UserReadTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesColumn.CreateUserId">
            <summary>
            CreateUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.NoticesColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuFriendshipEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuFriendship"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipEventArgs.#ctor(GE.MyLearning.BL.VuFriendshipColumn)">
            <summary>
             Initalizes a new Instance of the VuFriendshipEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipEventArgs.#ctor(GE.MyLearning.BL.VuFriendshipColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuFriendshipEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipEventArgs.Column">
            <summary>
             The VuFriendshipColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuFriendshipColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuFriendshipEventHandler">
            <summary>
             Define a delegate for all VuFriendship related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuFriendshipComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuFriendshipComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipComparer.#ctor(GE.MyLearning.BL.VuFriendshipColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuFriendshipComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipComparer.Equals(GE.MyLearning.BL.VuFriendship,GE.MyLearning.BL.VuFriendship)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuFriendship"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuFriendship"/> to compare.</param>
            <param name="b">The second <c>VuFriendship</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipComparer.GetHashCode(GE.MyLearning.BL.VuFriendship)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipComparer.Compare(GE.MyLearning.BL.VuFriendship,GE.MyLearning.BL.VuFriendship)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuFriendshipKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuFriendship"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipKey.#ctor">
            <summary>
            Initializes a new instance of the VuFriendshipKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipKey.#ctor(GE.MyLearning.BL.VuFriendshipBase)">
            <summary>
            Initializes a new instance of the VuFriendshipKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuFriendshipKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuFriendshipKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuFriendshipKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuFriendshipColumn">
            <summary>
            Enumerate the VuFriendship columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipColumn.Webname">
            <summary>
            Webname : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipColumn.Weburl">
            <summary>
            Weburl : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipColumn.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipColumn.Orderlist">
            <summary>
            Orderlist : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuFriendshipColumn.Pic">
            <summary>
            Pic : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuRenyuanBase">
            <summary>
             An object representation of the 'VU_renyuan' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuRenyuan">
            <summary>
            	The data structure representation of the 'VU_renyuan' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuRenyuan.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_renyuan"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Xingming">
            <summary>
            xingming : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Mima">
            <summary>
            mima : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Quanxian">
            <summary>
            quanxian : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Username">
            <summary>
            username : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Email">
            <summary>
            email : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Closed">
            <summary>
            closed : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Headpic">
            <summary>
            headpic : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Nicename">
            <summary>
            nicename : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Bbsscore">
            <summary>
            bbsscore : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Tel">
            <summary>
            tel : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Title">
            <summary>
            title : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Team">
            <summary>
            team : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.Team1">
            <summary>
            team1 : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuRenyuan.ClassId">
            <summary>
            ClassID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuRenyuanBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuRenyuanBase"/> instance.
            </summary>
            <param name="_xingming"></param>
            <param name="_mima"></param>
            <param name="_quanxian"></param>
            <param name="_username"></param>
            <param name="_email"></param>
            <param name="_closed"></param>
            <param name="_headpic"></param>
            <param name="_nicename"></param>
            <param name="_bbsscore"></param>
            <param name="_tel"></param>
            <param name="_title"></param>
            <param name="_team"></param>
            <param name="_team1"></param>
            <param name="_classId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.CreateVuRenyuan(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Decimal},System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuRenyuan"/> instance.
            </summary>
            <param name="_xingming"></param>
            <param name="_mima"></param>
            <param name="_quanxian"></param>
            <param name="_username"></param>
            <param name="_email"></param>
            <param name="_closed"></param>
            <param name="_headpic"></param>
            <param name="_nicename"></param>
            <param name="_bbsscore"></param>
            <param name="_tel"></param>
            <param name="_title"></param>
            <param name="_team"></param>
            <param name="_team1"></param>
            <param name="_classId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuRenyuan Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.Copy">
            <summary>
              Returns a Typed VuRenyuan Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.DeepCopy">
            <summary>
              Returns a Typed VuRenyuan Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.IsPropertyChanged(GE.MyLearning.BL.VuRenyuanColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.GetOriginalEntity">
            <summary>
              Returns a VuRenyuan Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuRenyuanBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuRenyuanBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.Equals(GE.MyLearning.BL.VuRenyuanBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuRenyuanBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.ValueEquals(GE.MyLearning.BL.VuRenyuanBase,GE.MyLearning.BL.VuRenyuanBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuRenyuanBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuRenyuanBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuRenyuanBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.OnColumnChanging(GE.MyLearning.BL.VuRenyuanColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuRenyuanBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuRenyuanColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.OnColumnChanged(GE.MyLearning.BL.VuRenyuanColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuRenyuanBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuRenyuanColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.OnColumnChanging(GE.MyLearning.BL.VuRenyuanColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuRenyuanBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuRenyuanColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.OnColumnChanged(GE.MyLearning.BL.VuRenyuanColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuRenyuanBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuRenyuanColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuRenyuanBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuRenyuanBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Xingming">
            <summary>
            	Gets or sets the Xingming property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Mima">
            <summary>
            	Gets or sets the Mima property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Quanxian">
            <summary>
            	Gets or sets the Quanxian property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Username">
            <summary>
            	Gets or sets the Username property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Email">
            <summary>
            	Gets or sets the Email property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Closed">
            <summary>
            	Gets or sets the Closed property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsClosedNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Headpic">
            <summary>
            	Gets or sets the Headpic property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Nicename">
            <summary>
            	Gets or sets the Nicename property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Bbsscore">
            <summary>
            	Gets or sets the Bbsscore property. 
            	
            </summary>
            <value>This type is numeric.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsBbsscoreNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Tel">
            <summary>
            	Gets or sets the Tel property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Title">
            <summary>
            	Gets or sets the Title property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Team">
            <summary>
            	Gets or sets the Team property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Team1">
            <summary>
            	Gets or sets the Team1 property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.ClassId">
            <summary>
            	Gets or sets the ClassId property. 
            	
            </summary>
            <value>This type is char.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuRenyuanBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuRenyuanBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuRenyuanBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData">
            <summary>
            	The data structure representation of the 'VU_renyuan' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_renyuan"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Xingming">
            <summary>
            xingming : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Mima">
            <summary>
            mima : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Quanxian">
            <summary>
            quanxian : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Username">
            <summary>
            username : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Email">
            <summary>
            email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Closed">
            <summary>
            closed : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Headpic">
            <summary>
            headpic : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Nicename">
            <summary>
            nicename : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Bbsscore">
            <summary>
            bbsscore : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Tel">
            <summary>
            tel : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Title">
            <summary>
            title : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Team">
            <summary>
            team : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Team1">
            <summary>
            team1 : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.ClassId">
            <summary>
            ClassID : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanBase.VuRenyuanEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.VuRenyuanEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanEventArgs.#ctor(GE.MyLearning.BL.VuRenyuanColumn)">
            <summary>
             Initalizes a new Instance of the VuRenyuanEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanEventArgs.#ctor(GE.MyLearning.BL.VuRenyuanColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuRenyuanEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanEventArgs.Column">
            <summary>
             The VuRenyuanColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuRenyuanColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuRenyuanEventHandler">
            <summary>
             Define a delegate for all VuRenyuan related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuRenyuanComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuRenyuanComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanComparer.#ctor(GE.MyLearning.BL.VuRenyuanColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuRenyuanComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanComparer.Equals(GE.MyLearning.BL.VuRenyuan,GE.MyLearning.BL.VuRenyuan)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuRenyuan"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuRenyuan"/> to compare.</param>
            <param name="b">The second <c>VuRenyuan</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanComparer.GetHashCode(GE.MyLearning.BL.VuRenyuan)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanComparer.Compare(GE.MyLearning.BL.VuRenyuan,GE.MyLearning.BL.VuRenyuan)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuRenyuanKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanKey.#ctor">
            <summary>
            Initializes a new instance of the VuRenyuanKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanKey.#ctor(GE.MyLearning.BL.VuRenyuanBase)">
            <summary>
            Initializes a new instance of the VuRenyuanKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuRenyuanKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuanKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuRenyuanKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuRenyuanColumn">
            <summary>
            Enumerate the VuRenyuan columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Xingming">
            <summary>
            Xingming : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Mima">
            <summary>
            Mima : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Quanxian">
            <summary>
            Quanxian : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Username">
            <summary>
            Username : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Closed">
            <summary>
            Closed : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Headpic">
            <summary>
            Headpic : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Nicename">
            <summary>
            Nicename : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Bbsscore">
            <summary>
            Bbsscore : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Tel">
            <summary>
            Tel : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Title">
            <summary>
            Title : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Team">
            <summary>
            Team : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.Team1">
            <summary>
            Team1 : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuRenyuanColumn.ClassId">
            <summary>
            ClassId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwUserRoleBase">
            <summary>
             An object representation of the 'VW_UserRole' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._roleId">
            <summary>
            RoleID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._roleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._userName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._userCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._telephone">
            <summary>
            Telephone : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._userStatus">
            <summary>
            UserStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._feBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._mobile">
            <summary>
            Mobile : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._userType">
            <summary>
            UserType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._userCredit">
            <summary>
            UserCredit : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._password">
            <summary>
            Password : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwUserRoleBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwUserRoleBase"/> instance.
            </summary>
            <param name="_roleId"></param>
            <param name="_roleName"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_telephone"></param>
            <param name="_email"></param>
            <param name="_userStatus"></param>
            <param name="_feBadgeId"></param>
            <param name="_mobile"></param>
            <param name="_userType"></param>
            <param name="_userCredit"></param>
            <param name="_password"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.CreateVwUserRole(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwUserRole"/> instance.
            </summary>
            <param name="_roleId"></param>
            <param name="_roleName"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_telephone"></param>
            <param name="_email"></param>
            <param name="_userStatus"></param>
            <param name="_feBadgeId"></param>
            <param name="_mobile"></param>
            <param name="_userType"></param>
            <param name="_userCredit"></param>
            <param name="_password"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.Copy">
            <summary>
              Returns a Typed VwUserRoleBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.Equals(GE.MyLearning.BL.VwUserRoleBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwUserRoleBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.Equals(GE.MyLearning.BL.VwUserRoleBase,GE.MyLearning.BL.VwUserRoleBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwUserRoleBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwUserRoleBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwUserRoleBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.GetPropertyValueByName(GE.MyLearning.BL.VwUserRole,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRoleBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.RoleId">
            <summary>
            	Gets or Sets the RoleID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.RoleName">
            <summary>
            	Gets or Sets the RoleName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.UserName">
            <summary>
            	Gets or Sets the UserName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.UserCnName">
            <summary>
            	Gets or Sets the UserCNName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.Telephone">
            <summary>
            	Gets or Sets the Telephone property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.Email">
            <summary>
            	Gets or Sets the Email property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.UserStatus">
            <summary>
            	Gets or Sets the UserStatus property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsUserStatusNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.FeBadgeId">
            <summary>
            	Gets or Sets the FEBadgeID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.Mobile">
            <summary>
            	Gets or Sets the Mobile property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.UserType">
            <summary>
            	Gets or Sets the UserType property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsUserTypeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.UserCredit">
            <summary>
            	Gets or Sets the UserCredit property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsUserCreditNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.Password">
            <summary>
            	Gets or Sets the Password property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwUserRoleBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserRoleBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwUserRoleBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwUserRoleColumn">
            <summary>
            Enumerate the VwUserRole columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.RoleId">
            <summary>
            RoleID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.RoleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.Telephone">
            <summary>
            Telephone : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.Email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.UserStatus">
            <summary>
            UserStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.FeBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.Mobile">
            <summary>
            Mobile : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.UserType">
            <summary>
            UserType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.UserCredit">
            <summary>
            UserCredit : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserRoleColumn.Password">
            <summary>
            Password : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwUserGroupPermissionBase">
            <summary>
             An object representation of the 'VW_UserGroupPermission' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionBase._userCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionBase._roleId">
            <summary>
            RoleID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionBase._roleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionBase._permissionId">
            <summary>
            PermissionID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionBase._permissionName">
            <summary>
            PermissionName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionBase._groupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwUserGroupPermissionBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwUserGroupPermissionBase"/> instance.
            </summary>
            <param name="_userCnName"></param>
            <param name="_userId"></param>
            <param name="_roleId"></param>
            <param name="_roleName"></param>
            <param name="_permissionId"></param>
            <param name="_permissionName"></param>
            <param name="_groupId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.CreateVwUserGroupPermission(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwUserGroupPermission"/> instance.
            </summary>
            <param name="_userCnName"></param>
            <param name="_userId"></param>
            <param name="_roleId"></param>
            <param name="_roleName"></param>
            <param name="_permissionId"></param>
            <param name="_permissionName"></param>
            <param name="_groupId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.Copy">
            <summary>
              Returns a Typed VwUserGroupPermissionBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.Equals(GE.MyLearning.BL.VwUserGroupPermissionBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwUserGroupPermissionBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.Equals(GE.MyLearning.BL.VwUserGroupPermissionBase,GE.MyLearning.BL.VwUserGroupPermissionBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwUserGroupPermissionBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwUserGroupPermissionBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwUserGroupPermissionBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.GetPropertyValueByName(GE.MyLearning.BL.VwUserGroupPermission,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermissionBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.UserCnName">
            <summary>
            	Gets or Sets the UserCNName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.RoleId">
            <summary>
            	Gets or Sets the RoleID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.RoleName">
            <summary>
            	Gets or Sets the RoleName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.PermissionId">
            <summary>
            	Gets or Sets the PermissionID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.PermissionName">
            <summary>
            	Gets or Sets the PermissionName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.GroupId">
            <summary>
            	Gets or Sets the GroupID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwUserGroupPermissionBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwUserGroupPermissionBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwUserGroupPermissionBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwUserGroupPermissionColumn">
            <summary>
            Enumerate the VwUserGroupPermission columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionColumn.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionColumn.RoleId">
            <summary>
            RoleID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionColumn.RoleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionColumn.PermissionId">
            <summary>
            PermissionID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionColumn.PermissionName">
            <summary>
            PermissionName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwUserGroupPermissionColumn.GroupId">
            <summary>
            GroupID : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwStudents">
            <summary>
             An object representation of the 'VW_Students' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwStudents.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwStudents"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwRolePermission">
            <summary>
             An object representation of the 'VW_RolePermission' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwRolePermission.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwRolePermission"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstituteDegrees">
            <summary>
             An object representation of the 'VW_InstituteDegrees' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegrees.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstituteDegrees"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EntityPropertyComparer">
            <summary>
            Provide a generic comparer for our entity objects.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EntityPropertyComparer.#ctor(System.String)">
            <summary>
            Provides Comparison opreations.
            </summary>
            <param name="propertyName">The property to compare</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityPropertyComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares 2 objects by their properties, given on the constructor
            </summary>
            <param name="x">First value to compare</param>
            <param name="y">Second value to compare</param>
            <returns></returns>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUser">
            <summary>
             An object representation of the 'evl_user' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.EvlUserBase">
            <summary>
             An object representation of the 'evl_user' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IEvlUser">
            <summary>
            	The data structure representation of the 'evl_user' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IEvlUser.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlUser.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_user"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlUser.Userid">
            <summary>
            userid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IEvlUser.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlUserBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlUserBase"/> instance.
            </summary>
            <param name="_userid"></param>
            <param name="_modelId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.CreateEvlUser(System.String,System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.EvlUser"/> instance.
            </summary>
            <param name="_userid"></param>
            <param name="_modelId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed EvlUser Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.Copy">
            <summary>
              Returns a Typed EvlUser Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.DeepCopy">
            <summary>
              Returns a Typed EvlUser Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.IsPropertyChanged(GE.MyLearning.BL.EvlUserColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.GetOriginalEntity">
            <summary>
              Returns a EvlUser Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.EvlUserBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.EvlUserBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.Equals(GE.MyLearning.BL.EvlUserBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.EvlUserBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.ValueEquals(GE.MyLearning.BL.EvlUserBase,GE.MyLearning.BL.EvlUserBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.EvlUserBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.EvlUserBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.EvlUserBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.OnColumnChanging(GE.MyLearning.BL.EvlUserColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlUserBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlUserColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.OnColumnChanged(GE.MyLearning.BL.EvlUserColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlUserBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlUserColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.OnColumnChanging(GE.MyLearning.BL.EvlUserColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlUserBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlUserColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.OnColumnChanged(GE.MyLearning.BL.EvlUserColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.EvlUserBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.EvlUserColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.EvlUserBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlUserBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.Userid">
            <summary>
            	Gets or sets the Userid property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.ModelId">
            <summary>
            	Gets or sets the ModelId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsModelIdNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlUserBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.EvlUserBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUserBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUserBase.EvlUserEntityData">
            <summary>
            	The data structure representation of the 'evl_user' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserBase.EvlUserEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "evl_user"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserBase.EvlUserEntityData.Userid">
            <summary>
            userid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserBase.EvlUserEntityData.ModelId">
            <summary>
            model_id : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.EvlUserEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserBase.EvlUserEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserBase.EvlUserEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUser.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlUser"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Groups">
            <summary>
             An object representation of the 'Groups' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.GroupsBase">
            <summary>
             An object representation of the 'Groups' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.GroupsBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.#ctor(System.String,System.String,System.String,System.Int32,System.String,System.DateTime,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.GroupsBase"/> instance.
            </summary>
            <param name="_groupId"></param>
            <param name="_groupName"></param>
            <param name="_description"></param>
            <param name="_status"></param>
            <param name="_leaderUserId"></param>
            <param name="_createTime"></param>
            <param name="_createUserId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.CreateGroups(System.String,System.String,System.String,System.Int32,System.String,System.DateTime,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Groups"/> instance.
            </summary>
            <param name="_groupId"></param>
            <param name="_groupName"></param>
            <param name="_description"></param>
            <param name="_status"></param>
            <param name="_leaderUserId"></param>
            <param name="_createTime"></param>
            <param name="_createUserId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Groups Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.Copy">
            <summary>
              Returns a Typed Groups Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.DeepCopy">
            <summary>
              Returns a Typed Groups Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.IsPropertyChanged(GE.MyLearning.BL.GroupsColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.GetOriginalEntity">
            <summary>
              Returns a Groups Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.GroupsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.GroupsBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.Equals(GE.MyLearning.BL.GroupsBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.GroupsBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.ValueEquals(GE.MyLearning.BL.GroupsBase,GE.MyLearning.BL.GroupsBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.GroupsBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.GroupsBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.GroupsBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.OnColumnChanging(GE.MyLearning.BL.GroupsColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.GroupsBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.GroupsColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.OnColumnChanged(GE.MyLearning.BL.GroupsColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.GroupsBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.GroupsColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.OnColumnChanging(GE.MyLearning.BL.GroupsColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.GroupsBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.GroupsColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.OnColumnChanged(GE.MyLearning.BL.GroupsColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.GroupsBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.GroupsColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.GroupsBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.GroupsBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.GroupId">
            <summary>
            	Gets or sets the GroupId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.OriginalGroupId">
            <summary>
            	Get the original value of the GroupID property.
            	
            </summary>
            <remarks>This is the original value of the GroupID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.GroupName">
            <summary>
            	Gets or sets the GroupName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.LeaderUserId">
            <summary>
            	Gets or sets the LeaderUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.CreateTime">
            <summary>
            	Gets or sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.CreateUserId">
            <summary>
            	Gets or sets the CreateUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.GroupsBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.GroupsBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.GroupsBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.GroupsBase.GroupsEntityData">
            <summary>
            	The data structure representation of the 'Groups' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.GroupsEntityData.GroupId">
            <summary>			
            GroupID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Groups"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.GroupsEntityData.OriginalGroupId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.GroupsEntityData.GroupName">
            <summary>
            GroupName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.GroupsEntityData.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.GroupsEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.GroupsEntityData.LeaderUserId">
            <summary>
            LeaderUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.GroupsEntityData.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsBase.GroupsEntityData.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.GroupsEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsBase.GroupsEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsBase.GroupsEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.Groups.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Groups"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuReplypostEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuReplypost"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostEventArgs.#ctor(GE.MyLearning.BL.VuReplypostColumn)">
            <summary>
             Initalizes a new Instance of the VuReplypostEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostEventArgs.#ctor(GE.MyLearning.BL.VuReplypostColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuReplypostEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostEventArgs.Column">
            <summary>
             The VuReplypostColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuReplypostColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuReplypostEventHandler">
            <summary>
             Define a delegate for all VuReplypost related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuReplypostComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuReplypostComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostComparer.#ctor(GE.MyLearning.BL.VuReplypostColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuReplypostComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostComparer.Equals(GE.MyLearning.BL.VuReplypost,GE.MyLearning.BL.VuReplypost)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuReplypost"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuReplypost"/> to compare.</param>
            <param name="b">The second <c>VuReplypost</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostComparer.GetHashCode(GE.MyLearning.BL.VuReplypost)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostComparer.Compare(GE.MyLearning.BL.VuReplypost,GE.MyLearning.BL.VuReplypost)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuReplypostKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuReplypost"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostKey.#ctor">
            <summary>
            Initializes a new instance of the VuReplypostKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostKey.#ctor(GE.MyLearning.BL.VuReplypostBase)">
            <summary>
            Initializes a new instance of the VuReplypostKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuReplypostKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuReplypostKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuReplypostKey.Ids">
            <summary>
            Gets or sets the Ids property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuReplypostColumn">
            <summary>
            Enumerate the VuReplypost columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Conent">
            <summary>
            Conent : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Replyman">
            <summary>
            Replyman : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Sso">
            <summary>
            Sso : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Replytime">
            <summary>
            Replytime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Tupian">
            <summary>
            Tupian : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Fujian">
            <summary>
            Fujian : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Icon">
            <summary>
            Icon : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Ids">
            <summary>
            Ids : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Catogary">
            <summary>
            Catogary : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Isxingming">
            <summary>
            Isxingming : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Score">
            <summary>
            Score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Closed">
            <summary>
            Closed : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Isdescore">
            <summary>
            Isdescore : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Comment">
            <summary>
            Comment : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Recommend">
            <summary>
            Recommend : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuReplypostColumn.Isjake">
            <summary>
            Isjake : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupListBase">
            <summary>
             An object representation of the 'VU_GroupList' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuGroupListBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.#ctor(System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuGroupListBase"/> instance.
            </summary>
            <param name="_groupname"></param>
            <param name="_exeSso"></param>
            <param name="_classid"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.CreateVuGroupList(System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuGroupList"/> instance.
            </summary>
            <param name="_groupname"></param>
            <param name="_exeSso"></param>
            <param name="_classid"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuGroupList Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.Copy">
            <summary>
              Returns a Typed VuGroupList Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.DeepCopy">
            <summary>
              Returns a Typed VuGroupList Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.IsPropertyChanged(GE.MyLearning.BL.VuGroupListColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.GetOriginalEntity">
            <summary>
              Returns a VuGroupList Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuGroupListBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuGroupListBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.Equals(GE.MyLearning.BL.VuGroupListBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuGroupListBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.ValueEquals(GE.MyLearning.BL.VuGroupListBase,GE.MyLearning.BL.VuGroupListBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuGroupListBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuGroupListBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuGroupListBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.OnColumnChanging(GE.MyLearning.BL.VuGroupListColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuGroupListBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuGroupListColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.OnColumnChanged(GE.MyLearning.BL.VuGroupListColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuGroupListBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuGroupListColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.OnColumnChanging(GE.MyLearning.BL.VuGroupListColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuGroupListBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuGroupListColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.OnColumnChanged(GE.MyLearning.BL.VuGroupListColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuGroupListBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuGroupListColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuGroupListBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuGroupListBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.Groupname">
            <summary>
            	Gets or sets the Groupname property. 
            	
            </summary>
            <value>This type is char.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.ExeSso">
            <summary>
            	Gets or sets the ExeSso property. 
            	
            </summary>
            <value>This type is char.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.Classid">
            <summary>
            	Gets or sets the Classid property. 
            	
            </summary>
            <value>This type is char.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuGroupListBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuGroupListBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupListBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupListBase.VuGroupListEntityData">
            <summary>
            	The data structure representation of the 'VU_GroupList' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListBase.VuGroupListEntityData.Id">
            <summary>			
            ID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_GroupList"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListBase.VuGroupListEntityData.Groupname">
            <summary>
            Groupname : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListBase.VuGroupListEntityData.ExeSso">
            <summary>
            ExeSSO : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListBase.VuGroupListEntityData.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.VuGroupListEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListBase.VuGroupListEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListBase.VuGroupListEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupListEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuGroupList"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListEventArgs.#ctor(GE.MyLearning.BL.VuGroupListColumn)">
            <summary>
             Initalizes a new Instance of the VuGroupListEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListEventArgs.#ctor(GE.MyLearning.BL.VuGroupListColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuGroupListEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListEventArgs.Column">
            <summary>
             The VuGroupListColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuGroupListColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupListEventHandler">
            <summary>
             Define a delegate for all VuGroupList related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupListComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuGroupListComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListComparer.#ctor(GE.MyLearning.BL.VuGroupListColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuGroupListComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListComparer.Equals(GE.MyLearning.BL.VuGroupList,GE.MyLearning.BL.VuGroupList)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuGroupList"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuGroupList"/> to compare.</param>
            <param name="b">The second <c>VuGroupList</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListComparer.GetHashCode(GE.MyLearning.BL.VuGroupList)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListComparer.Compare(GE.MyLearning.BL.VuGroupList,GE.MyLearning.BL.VuGroupList)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupListKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuGroupList"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListKey.#ctor">
            <summary>
            Initializes a new instance of the VuGroupListKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListKey.#ctor(GE.MyLearning.BL.VuGroupListBase)">
            <summary>
            Initializes a new instance of the VuGroupListKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuGroupListKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupListKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuGroupListKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupListColumn">
            <summary>
            Enumerate the VuGroupList columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListColumn.Groupname">
            <summary>
            Groupname : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListColumn.ExeSso">
            <summary>
            ExeSso : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuGroupListColumn.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuGroupList">
            <summary>
             An object representation of the 'VU_GroupList' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VuGroupList.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuGroupList"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IStudentCourseRelation">
            <summary>
            	The data structure representation of the 'StudentCourseRelation' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IStudentCourseRelation.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.AutoId">
            <summary>			
            AutoID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "StudentCourseRelation"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.StudentId">
            <summary>
            StudentID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.DegreeCourseId">
            <summary>
            degreeCourseID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.Credentials">
            <summary>
            Credentials : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.Updatetime">
            <summary>
            Updatetime : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.UpdateUserId">
            <summary>
            UpdateUserID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.CredentialsStyle">
            <summary>
            CredentialsStyle : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.AttachmentFileStyle">
            <summary>
            AttachmentFileStyle : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.AttachmentFilePath">
            <summary>
            AttachmentFilePath : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.CourseId">
            <summary>
            courseID : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IStudentCourseRelation.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Students">
            <summary>
             An object representation of the 'Students' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.Students.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Students"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwStudentCourseRelation">
            <summary>
             An object representation of the 'VW_StudentCourseRelation' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwStudentCourseRelation.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwStudentCourseRelation"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwMenuPermission">
            <summary>
             An object representation of the 'VW_MenuPermission' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwMenuPermission.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwMenuPermission"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordExcelEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelEventArgs.#ctor(GE.MyLearning.BL.LearningRecordExcelColumn)">
            <summary>
             Initalizes a new Instance of the LearningRecordExcelEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelEventArgs.#ctor(GE.MyLearning.BL.LearningRecordExcelColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the LearningRecordExcelEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelEventArgs.Column">
            <summary>
             The LearningRecordExcelColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.LearningRecordExcelColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordExcelEventHandler">
            <summary>
             Define a delegate for all LearningRecordExcel related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordExcelComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LearningRecordExcelComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelComparer.#ctor(GE.MyLearning.BL.LearningRecordExcelColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:LearningRecordExcelComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelComparer.Equals(GE.MyLearning.BL.LearningRecordExcel,GE.MyLearning.BL.LearningRecordExcel)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.LearningRecordExcel"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.LearningRecordExcel"/> to compare.</param>
            <param name="b">The second <c>LearningRecordExcel</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelComparer.GetHashCode(GE.MyLearning.BL.LearningRecordExcel)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelComparer.Compare(GE.MyLearning.BL.LearningRecordExcel,GE.MyLearning.BL.LearningRecordExcel)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordExcelKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelKey.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordExcelKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelKey.#ctor(GE.MyLearning.BL.LearningRecordExcelBase)">
            <summary>
            Initializes a new instance of the LearningRecordExcelKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the LearningRecordExcelKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordExcelKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.LearningRecordExcelKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordExcelColumn">
            <summary>
            Enumerate the LearningRecordExcel columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.Sso">
            <summary>
            Sso : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.Function">
            <summary>
            Function : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.StartDate">
            <summary>
            StartDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.CompletedDate">
            <summary>
            CompletedDate : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.Location">
            <summary>
            Location : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.Trainer">
            <summary>
            Trainer : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.Courseid">
            <summary>
            Courseid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.LearningRecordExcelColumn.CreatedDate">
            <summary>
            CreatedDate : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.LearningRecordCsv">
            <summary>
             An object representation of the 'LearningRecordCsv' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.LearningRecordCsv.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlCompetencyScoreDept">
            <summary>
             An object representation of the 'evl_competencyScoreDept' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlCompetencyScoreDept.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeCoursesEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesEventArgs.#ctor(GE.MyLearning.BL.DegreeCoursesColumn)">
            <summary>
             Initalizes a new Instance of the DegreeCoursesEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesEventArgs.#ctor(GE.MyLearning.BL.DegreeCoursesColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the DegreeCoursesEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesEventArgs.Column">
            <summary>
             The DegreeCoursesColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.DegreeCoursesColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeCoursesEventHandler">
            <summary>
             Define a delegate for all DegreeCourses related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeCoursesComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DegreeCoursesComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesComparer.#ctor(GE.MyLearning.BL.DegreeCoursesColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:DegreeCoursesComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesComparer.Equals(GE.MyLearning.BL.DegreeCourses,GE.MyLearning.BL.DegreeCourses)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.DegreeCourses"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.DegreeCourses"/> to compare.</param>
            <param name="b">The second <c>DegreeCourses</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesComparer.GetHashCode(GE.MyLearning.BL.DegreeCourses)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesComparer.Compare(GE.MyLearning.BL.DegreeCourses,GE.MyLearning.BL.DegreeCourses)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeCoursesKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesKey.#ctor">
            <summary>
            Initializes a new instance of the DegreeCoursesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesKey.#ctor(GE.MyLearning.BL.DegreeCoursesBase)">
            <summary>
            Initializes a new instance of the DegreeCoursesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the DegreeCoursesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.DegreeCoursesKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.DegreeCoursesKey.DegreeCourseId">
            <summary>
            Gets or sets the DegreeCourseId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.DegreeCoursesColumn">
            <summary>
            Enumerate the DegreeCourses columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.DegreeCourseId">
            <summary>
            DegreeCourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.CourseName">
            <summary>
            CourseName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.CourseStyle">
            <summary>
            CourseStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.CreditHour">
            <summary>
            CreditHour : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.CreateUserId">
            <summary>
            CreateUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.DegreeId">
            <summary>
            DegreeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.DegreeCoursesColumn.IsRequiredCourse">
            <summary>
            IsRequiredCourse : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Degrees">
            <summary>
             An object representation of the 'Degrees' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.Degrees.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Degrees"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogary">
            <summary>
             An object representation of the 'VU_catogary' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryBase">
            <summary>
             An object representation of the 'VU_catogary' table. [No description found the database]	
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.IVuCatogary">
            <summary>
            	The data structure representation of the 'VU_catogary' table via interface.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.IVuCatogary.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogary.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_catogary"</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogary.Classid">
            <summary>
            classid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogary.Fuid">
            <summary>
            fuid : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogary.Name">
            <summary>
            name : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogary.Pic">
            <summary>
            pic : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogary.Closed">
            <summary>
            closed : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogary.Owner">
            <summary>
            owner : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogary.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogary.ReplyRights">
            <summary>
            reply_rights : 
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.IVuCatogary.Isask">
            <summary>
            isask : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuCatogaryBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.#ctor(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuCatogaryBase"/> instance.
            </summary>
            <param name="_classid"></param>
            <param name="_fuid"></param>
            <param name="_name"></param>
            <param name="_pic"></param>
            <param name="_closed"></param>
            <param name="_owner"></param>
            <param name="_score"></param>
            <param name="_replyRights"></param>
            <param name="_isask"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.CreateVuCatogary(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.String,System.Nullable{System.Decimal},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VuCatogary"/> instance.
            </summary>
            <param name="_classid"></param>
            <param name="_fuid"></param>
            <param name="_name"></param>
            <param name="_pic"></param>
            <param name="_closed"></param>
            <param name="_owner"></param>
            <param name="_score"></param>
            <param name="_replyRights"></param>
            <param name="_isask"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed VuCatogary Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.Copy">
            <summary>
              Returns a Typed VuCatogary Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.DeepCopy">
            <summary>
              Returns a Typed VuCatogary Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.IsPropertyChanged(GE.MyLearning.BL.VuCatogaryColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.GetOriginalEntity">
            <summary>
              Returns a VuCatogary Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.VuCatogaryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.VuCatogaryBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.Equals(GE.MyLearning.BL.VuCatogaryBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VuCatogaryBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.ValueEquals(GE.MyLearning.BL.VuCatogaryBase,GE.MyLearning.BL.VuCatogaryBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VuCatogaryBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VuCatogaryBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VuCatogaryBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.OnColumnChanging(GE.MyLearning.BL.VuCatogaryColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.OnColumnChanged(GE.MyLearning.BL.VuCatogaryColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.OnColumnChanging(GE.MyLearning.BL.VuCatogaryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.OnColumnChanged(GE.MyLearning.BL.VuCatogaryColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.VuCatogaryBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.VuCatogaryColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.Id">
            <summary>
            	Gets or sets the Id property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.Classid">
            <summary>
            	Gets or sets the Classid property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.Fuid">
            <summary>
            	Gets or sets the Fuid property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsFuidNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.Name">
            <summary>
            	Gets or sets the Name property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.Pic">
            <summary>
            	Gets or sets the Pic property. 
            	
            </summary>
            <value>This type is nchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.Closed">
            <summary>
            	Gets or sets the Closed property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsClosedNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.Owner">
            <summary>
            	Gets or sets the Owner property. 
            	
            </summary>
            <value>This type is nvarchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.Score">
            <summary>
            	Gets or sets the Score property. 
            	
            </summary>
            <value>This type is numeric.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return 0.0m. It is up to the developer
            to check the value of IsScoreNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.ReplyRights">
            <summary>
            	Gets or sets the ReplyRights property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsReplyRightsNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.Isask">
            <summary>
            	Gets or sets the Isask property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsIsaskNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VuCatogaryBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData">
            <summary>
            	The data structure representation of the 'VU_catogary' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Id">
            <summary>			
            id : 
            </summary>
            <remarks>Member of the primary key of the underlying table "VU_catogary"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Classid">
            <summary>
            classid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Fuid">
            <summary>
            fuid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Name">
            <summary>
            name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Pic">
            <summary>
            pic : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Closed">
            <summary>
            closed : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Owner">
            <summary>
            owner : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Score">
            <summary>
            score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.ReplyRights">
            <summary>
            reply_rights : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Isask">
            <summary>
            isask : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryBase.VuCatogaryEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogary.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuCatogary"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Roles">
            <summary>
             An object representation of the 'Roles' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="T:GE.MyLearning.BL.RolesBase">
            <summary>
             An object representation of the 'Roles' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.RolesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.#ctor(System.String,System.String,System.String,System.DateTime,System.String,System.Int32)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.RolesBase"/> instance.
            </summary>
            <param name="_roleId"></param>
            <param name="_roleName"></param>
            <param name="_description"></param>
            <param name="_createTime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.CreateRoles(System.String,System.String,System.String,System.DateTime,System.String,System.Int32)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.Roles"/> instance.
            </summary>
            <param name="_roleId"></param>
            <param name="_roleName"></param>
            <param name="_description"></param>
            <param name="_createTime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed Roles Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.Copy">
            <summary>
              Returns a Typed Roles Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.DeepCopy">
            <summary>
              Returns a Typed Roles Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.IsPropertyChanged(GE.MyLearning.BL.RolesColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.GetOriginalEntity">
            <summary>
              Returns a Roles Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.RolesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.RolesBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.Equals(GE.MyLearning.BL.RolesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.RolesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.ValueEquals(GE.MyLearning.BL.RolesBase,GE.MyLearning.BL.RolesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.RolesBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.RolesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.RolesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.OnColumnChanging(GE.MyLearning.BL.RolesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.RolesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.RolesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.OnColumnChanged(GE.MyLearning.BL.RolesColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.RolesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.RolesColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.OnColumnChanging(GE.MyLearning.BL.RolesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.RolesBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.RolesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.OnColumnChanged(GE.MyLearning.BL.RolesColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.RolesBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.RolesColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.RolesBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.RolesBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.RoleId">
            <summary>
            	Gets or sets the RoleId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.OriginalRoleId">
            <summary>
            	Get the original value of the RoleID property.
            	
            </summary>
            <remarks>This is the original value of the RoleID property.</remarks>
            <value>This type is varchar</value>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.RoleName">
            <summary>
            	Gets or sets the RoleName property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.Description">
            <summary>
            	Gets or sets the Description property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.CreateTime">
            <summary>
            	Gets or sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.CreateUserId">
            <summary>
            	Gets or sets the CreateUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.Status">
            <summary>
            	Gets or sets the Status property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.RolesBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.RolesBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.RolesBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.RolesBase.RolesEntityData">
            <summary>
            	The data structure representation of the 'Roles' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.RolesEntityData.RoleId">
            <summary>			
            RoleID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "Roles"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.RolesEntityData.OriginalRoleId">
            <summary>
            keep a copy of the original so it can be used for editable primary keys.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.RolesEntityData.RoleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.RolesEntityData.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.RolesEntityData.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.RolesEntityData.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesBase.RolesEntityData.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.RolesEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesBase.RolesEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.RolesBase.RolesEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.Roles.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Roles"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserInfoEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.UserInfo"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoEventArgs.#ctor(GE.MyLearning.BL.UserInfoColumn)">
            <summary>
             Initalizes a new Instance of the UserInfoEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoEventArgs.#ctor(GE.MyLearning.BL.UserInfoColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the UserInfoEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoEventArgs.Column">
            <summary>
             The UserInfoColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.UserInfoColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.UserInfoEventHandler">
            <summary>
             Define a delegate for all UserInfo related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserInfoComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:UserInfoComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoComparer.#ctor(GE.MyLearning.BL.UserInfoColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:UserInfoComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoComparer.Equals(GE.MyLearning.BL.UserInfo,GE.MyLearning.BL.UserInfo)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.UserInfo"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.UserInfo"/> to compare.</param>
            <param name="b">The second <c>UserInfo</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoComparer.GetHashCode(GE.MyLearning.BL.UserInfo)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoComparer.Compare(GE.MyLearning.BL.UserInfo,GE.MyLearning.BL.UserInfo)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.UserInfoKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.UserInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoKey.#ctor">
            <summary>
            Initializes a new instance of the UserInfoKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoKey.#ctor(GE.MyLearning.BL.UserInfoBase)">
            <summary>
            Initializes a new instance of the UserInfoKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the UserInfoKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.UserInfoKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.UserInfoKey.UserId">
            <summary>
            Gets or sets the UserId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserInfoColumn">
            <summary>
            Enumerate the UserInfo columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.UserId">
            <summary>
            UserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.UserCnName">
            <summary>
            UserCnName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.Password">
            <summary>
            Password : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.Telephone">
            <summary>
            Telephone : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.Email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.UserStatus">
            <summary>
            UserStatus : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.FeBadgeId">
            <summary>
            FeBadgeId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.Mobile">
            <summary>
            Mobile : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.UserType">
            <summary>
            UserType : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.UserCredit">
            <summary>
            UserCredit : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.Department">
            <summary>
            Department : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.OhrSolidLineMgrId">
            <summary>
            OhrSolidLineMgrId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.UserInfoColumn.OhrHrRep">
            <summary>
            OhrHrRep : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwUserRole">
            <summary>
             An object representation of the 'VW_UserRole' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwUserRole.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwUserRole"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwUserGroupPermission">
            <summary>
             An object representation of the 'VW_UserGroupPermission' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwUserGroupPermission.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwUserGroupPermission"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EntityHelper">
            <summary>
            This classes contains utilities functions for the <see cref="T:GE.MyLearning.BL.IEntity"/> instances and collections.
            </summary>
            <remarks>All methods static</remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.SerializeBinary(GE.MyLearning.BL.IEntity)">
            <summary>
            Serializes the entity to binary.
            </summary>
            <param name="entity">The Entity to serialize.</param>
            <value>A byte array that contains the serialized entity.</value>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.SerializeBinary(System.Collections.IList)">
            <summary>
            Serializes the entity collection to binary.
            </summary>
            <param name="entityCollection">The Entity collection to serialize.</param>
            <value>A byte array that contains the serialized entity.</value>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.SerializeBinary(GE.MyLearning.BL.IEntity,System.String)">
            <summary>
            Serializes the entity to binary and puts the data into a file.
            </summary>
            <param name="entity">The Entity to serialize.</param>
            <param name="path">The Path to the destination file.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.SerializeBinary(System.Collections.IList,System.String)">
            <summary>
            Serializes the entity collection to binary and puts the data into a file.
            </summary>
            <param name="entityCollection">The Entity collection to serialize.</param>
            <param name="path">The Path to the destination file.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.XmlSerialize``1(``0)">
            <summary>
            serialize an object to xml.
            </summary>
            <param name="item">The item to serialize.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.SerializeXml(GE.MyLearning.BL.IEntity)">
            <summary>
            Serializes the entity to Xml.
            </summary>
            <param name="entity">The Entity to serialize.</param>
            <returns>A string that contains the serialized entity.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.SerializeXml``1(GE.MyLearning.BL.TList{``0})">
            <summary>
            Serializes the <see cref="T:TList{T}"/> of IEntity to XML
            </summary>
            <typeparam name="T">type to return, type must implement IEntity</typeparam>
            <param name="entityCollection">TList of T type to return</param>
            <returns>string of serialized XML</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.SerializeXml(GE.MyLearning.BL.IEntity,System.String)">
            <summary>
            Serializes the entity to xml and puts the data into a file.
            </summary>
            <param name="entity">The Entity to serialize.</param>
            <param name="path">The Path to the destination file.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.SerializeXml``1(GE.MyLearning.BL.TList{``0},System.String)">
            <summary>
            Serializes the entity collection to xml and puts the data into a file.
            </summary>
            <param name="entityCollection">The Entity collection to serialize.</param>
            <param name="path">The Path to the destination file.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.SerializeXml``1(GE.MyLearning.BL.VList{``0})">
            <summary>
            Serializes the <see cref="T:VList{T}"/> of view entities to XML
            </summary>
            <typeparam name="T">type to return</typeparam>
            <param name="entityCollection">VList of T type to return</param>
            <returns>string of serialized XML</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.SerializeXml``1(GE.MyLearning.BL.VList{``0},System.String)">
            <summary>
            Serializes the view collection to xml and puts the data into a file.
            </summary>
            <param name="entityCollection">The Entity View collection to serialize.</param>
            <param name="path">The Path to the destination file.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.DeserializeBinary(System.Byte[])">
            <summary>
            Deserializes the binary data to an object instance.
            </summary>
            <param name="bytes">The byte array that contains binary serialized datas.</param>
            <returns>The deserialized instance</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.XmlDeserialize``1(System.String)">
            <summary>
            deserialize an xml string into an object.
            </summary>
            <param name="xmlData">The XML data.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.DeserializeEntityXml``1(System.String)">
            <summary>
            Deserialize an Entity from an xml string to T
            </summary>
            <typeparam name="T">T where T : IEntity</typeparam>
            <param name="data">string of serialized xml</param>
            <returns>T where T : IEntity</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.DeserializeListXml``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"><see cref="T:TList{T}"/> where T : IEntity, new()</typeparam>
            <param name="data">string of serialized TList of T xml</param>
            <returns><see cref="T:TList{T}"/> where T : IEntity, new()</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.DeserializeXml(System.String,System.Type,System.Xml.XmlReader)">
            <summary>
            Deserializes the XML string to an instance of the specified type.
            </summary>
            <param name="root">The name of the root node.</param>
            <param name="type">The targeted Type.</param>
            <param name="reader">The xmlReader instance that point to the xml data.</param>
            <returns>An instance of the Type class.</returns>		
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.DeserializeVListXml``1(System.String)">
            <summary>
            Deserialize a list of view entity objects from an Xml string
            </summary>
            <typeparam name="T"><see cref="T:VList{T}"/> where T is a view entity class</typeparam>
            <param name="data">string of serialized VList of T xml</param>
            <returns><see cref="T:VList{T}"/></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.GetByteLength(System.Object)">
            <summary>
            Gets the byte length of the specified object.
            </summary>
            <param name="obj">The object we want the length.</param>
            <returns>The byte length of the object.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.ToString(System.Object)">
            <summary>
            Give a string representation of a object, with use of reflection.
            </summary>
            <param name="o">O.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.Clone``1(``0)">
            <summary>
            Generic method to perform a deep copy of an object
            </summary>
            <typeparam name="T">Type of object being cloned and returned</typeparam>
            <param name="sourceEntity">Source object to be cloned.</param>
            <returns>An object that is a deep copy of the sourceEntity object.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.GetBindableProperties(System.Type)">
            <summary>
            Get the collection of properties that have been marked as Bindable
            </summary>
            <param name="type">The type of the object to get the properties for.</param>
            <returns><see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> of bindable properties.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.GetEnumTextValue(System.Enum)">
            <summary>
             Allows the discovery of an enumeration text value based on the <c>EnumTextValueAttribute</c>
            </summary>
             <param name="e">The enum to get the reader friendly text value for.</param>
             <returns><see cref="T:System.String"/> </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.GetEnumValue(System.String,System.Type)">
            <summary>
             Allows the discovery of an enumeration value based on the <c>EnumTextValueAttribute</c>
            </summary>
             <param name="text">The text of the <c>EnumTextValueAttribute</c>.</param>
             <param name="enumType">The type of the enum to get the value for.</param>
             <returns><see cref="T:System.Object"/> boxed representation of the enum value </returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.GetEnumValue``1(System.String)">
            <summary>
             Allows the discovery of an enumeration value based on the <c>Enum.Parse</c>
            </summary>
             <param name="text">The text of a enum value of the specified enumeration.</param>
             <returns>A enum value of the specified enumeration,</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.GetAttribute``1(System.Enum)">
            <summary>
            Gets the first occurrence of the specified type of <see cref="T:System.Attribute"/>.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EntityHelper.GetPascalSpacedName(System.String)">
            <summary>
            Get the Pascal spaced version of a name.  
            </summary>
            <param name="name">Name to be changed</param>
            <returns>PascalSpaced version of the name</returns>
        </member>
        <member name="T:GE.MyLearning.BL.EnumTextValueAttribute">
            <summary>
             Attribute used to decorate enumerations with reader friendly names
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EnumTextValueAttribute.#ctor(System.String)">
            <summary>
             Allows the creation of a friendly text representation of the enumeration.
            </summary>
             <param name="text">The reader friendly text to decorate the enum.</param>
        </member>
        <member name="P:GE.MyLearning.BL.EnumTextValueAttribute.Text">
            <summary>
             Returns the text representation of the value
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.ColumnEnumAttribute">
            <summary>
            Provides column metadata information for an entity column enumeration.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.ColumnEnumAttribute.#ctor(System.String,System.Type,System.Data.DbType,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Initializes a new instance of the ColumnEnumAttribute class.
            </summary>
            <param name="name"></param>
            <param name="systemType"></param>
            <param name="dbType"></param>
            <param name="isPrimaryKey"></param>
            <param name="isIdentity"></param>
            <param name="allowDbNull"></param>
            <param name="length"></param>
        </member>
        <member name="M:GE.MyLearning.BL.ColumnEnumAttribute.#ctor(System.String,System.Type,System.Data.DbType,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ColumnEnumAttribute class.
            </summary>
            <param name="name"></param>
            <param name="systemType"></param>
            <param name="dbType"></param>
            <param name="isPrimaryKey"></param>
            <param name="isIdentity"></param>
            <param name="allowDbNull"></param>
        </member>
        <member name="F:GE.MyLearning.BL.ColumnEnumAttribute.name">
            <summary>
            The Name member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.ColumnEnumAttribute.systemType">
            <summary>
            The SystemType member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.ColumnEnumAttribute.dbType">
            <summary>
            The DbType member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.ColumnEnumAttribute.isPrimaryKey">
            <summary>
            The IsPrimaryKey member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.ColumnEnumAttribute.isIdentity">
            <summary>
            The IsIdentity member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.ColumnEnumAttribute.allowDbNull">
            <summary>
            The AllowDbNull member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.ColumnEnumAttribute.length">
            <summary>
            The Length member variable.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ColumnEnumAttribute.Name">
            <summary>
            Gets or sets the Name property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ColumnEnumAttribute.SystemType">
            <summary>
            Gets or sets the SystemType property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ColumnEnumAttribute.DbType">
            <summary>
            Gets or sets the DbType property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ColumnEnumAttribute.IsPrimaryKey">
            <summary>
            Gets or sets the IsPrimaryKey property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ColumnEnumAttribute.IsIdentity">
            <summary>
            Gets or sets the IsIdentity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ColumnEnumAttribute.AllowDbNull">
            <summary>
            Gets or sets the AllowDbNull property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.ColumnEnumAttribute.Length">
            <summary>
            Gets or sets the Length property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.GenericStateChangedEventArgs`1">
            <summary>
            Provides a generic way to inform interested objects about state change
            Supplies the old value and the new value of the changed state.
            </summary>
            <typeparam name="T">State Object</typeparam>
        </member>
        <member name="M:GE.MyLearning.BL.GenericStateChangedEventArgs`1.#ctor(`0,`0)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.BL.GenericStateChangedEventArgs`1"/> class.
            </summary>
            <param name="oldValue">The old value.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="P:GE.MyLearning.BL.GenericStateChangedEventArgs`1.OldValue">
            <summary>
            Gets the old value.
            </summary>
            <value>The old value.</value>
        </member>
        <member name="P:GE.MyLearning.BL.GenericStateChangedEventArgs`1.NewValue">
            <summary>
            Gets the new value.
            </summary>
            <value>The new value.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUserEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.EvlUser"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserEventArgs.#ctor(GE.MyLearning.BL.EvlUserColumn)">
            <summary>
             Initalizes a new Instance of the EvlUserEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserEventArgs.#ctor(GE.MyLearning.BL.EvlUserColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the EvlUserEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserEventArgs.Column">
            <summary>
             The EvlUserColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.EvlUserColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUserEventHandler">
            <summary>
             Define a delegate for all EvlUser related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUserComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:EvlUserComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserComparer.#ctor(GE.MyLearning.BL.EvlUserColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:EvlUserComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserComparer.Equals(GE.MyLearning.BL.EvlUser,GE.MyLearning.BL.EvlUser)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.EvlUser"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.EvlUser"/> to compare.</param>
            <param name="b">The second <c>EvlUser</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserComparer.GetHashCode(GE.MyLearning.BL.EvlUser)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserComparer.Compare(GE.MyLearning.BL.EvlUser,GE.MyLearning.BL.EvlUser)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUserKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.EvlUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserKey.#ctor">
            <summary>
            Initializes a new instance of the EvlUserKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserKey.#ctor(GE.MyLearning.BL.EvlUserBase)">
            <summary>
            Initializes a new instance of the EvlUserKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the EvlUserKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.EvlUserKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.EvlUserKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUserColumn">
            <summary>
            Enumerate the EvlUser columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserColumn.Userid">
            <summary>
            Userid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.EvlUserColumn.ModelId">
            <summary>
            ModelId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.Institutes">
            <summary>
             An object representation of the 'Institutes' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.Institutes.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.Institutes"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlAssessment">
            <summary>
             An object representation of the 'evl_assessment' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlAssessment.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlAssessment"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuCatogary"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryEventArgs.#ctor(GE.MyLearning.BL.VuCatogaryColumn)">
            <summary>
             Initalizes a new Instance of the VuCatogaryEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryEventArgs.#ctor(GE.MyLearning.BL.VuCatogaryColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuCatogaryEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryEventArgs.Column">
            <summary>
             The VuCatogaryColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuCatogaryColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryEventHandler">
            <summary>
             Define a delegate for all VuCatogary related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuCatogaryComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryComparer.#ctor(GE.MyLearning.BL.VuCatogaryColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuCatogaryComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryComparer.Equals(GE.MyLearning.BL.VuCatogary,GE.MyLearning.BL.VuCatogary)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuCatogary"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuCatogary"/> to compare.</param>
            <param name="b">The second <c>VuCatogary</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryComparer.GetHashCode(GE.MyLearning.BL.VuCatogary)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryComparer.Compare(GE.MyLearning.BL.VuCatogary,GE.MyLearning.BL.VuCatogary)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuCatogary"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryKey.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryKey.#ctor(GE.MyLearning.BL.VuCatogaryBase)">
            <summary>
            Initializes a new instance of the VuCatogaryKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuCatogaryKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryColumn">
            <summary>
            Enumerate the VuCatogary columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryColumn.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryColumn.Fuid">
            <summary>
            Fuid : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryColumn.Name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryColumn.Pic">
            <summary>
            Pic : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryColumn.Closed">
            <summary>
            Closed : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryColumn.Owner">
            <summary>
            Owner : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryColumn.Score">
            <summary>
            Score : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryColumn.ReplyRights">
            <summary>
            ReplyRights : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryColumn.Isask">
            <summary>
            Isask : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.StudentCourseRelationBase">
            <summary>
             An object representation of the 'StudentCourseRelation' table. [No description found the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.entityData">
            <summary>
             Hold the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase._originalData">
            <summary>
            	Hold the original data of the entity, as loaded from the repository.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.backupData">
            <summary>
            	Hold a backup of the inner data of the entity.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.entityTrackingKey">
            <summary>
            	Key used if Tracking is Enabled for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.parentCollection">
            <summary>
            	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
            </summary>
            <remark>Mostly used for databinding</remark>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.StudentCourseRelationBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.#ctor(System.Int32,System.Int32,System.Byte[],System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.StudentCourseRelationBase"/> instance.
            </summary>
            <param name="_studentId"></param>
            <param name="_degreeCourseId"></param>
            <param name="_credentials"></param>
            <param name="_updatetime"></param>
            <param name="_updateUserId"></param>
            <param name="_credentialsStyle"></param>
            <param name="_attachmentFileStyle"></param>
            <param name="_attachmentFilePath"></param>
            <param name="_courseId"></param>
            <param name="_userId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.CreateStudentCourseRelation(System.Int32,System.Int32,System.Byte[],System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> instance.
            </summary>
            <param name="_studentId"></param>
            <param name="_degreeCourseId"></param>
            <param name="_credentials"></param>
            <param name="_updatetime"></param>
            <param name="_updateUserId"></param>
            <param name="_credentialsStyle"></param>
            <param name="_attachmentFileStyle"></param>
            <param name="_attachmentFilePath"></param>
            <param name="_courseId"></param>
            <param name="_userId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.OnCancelAddNew">
            <summary>
            Called when [cancel add new].
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.System#ComponentModel#IEditableObject#BeginEdit">
            <summary>
            Begins an edit on an object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.System#ComponentModel#IEditableObject#CancelEdit">
            <summary>
            Discards changes since the last <c>BeginEdit</c> call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.System#ComponentModel#IEditableObject#EndEdit">
            <summary>
            Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.OnEntityChanged">
            <summary>
            Called when the entity is changed.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.Copy(System.Collections.IDictionary)">
            <summary>
              Returns a Typed StudentCourseRelation Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.Copy">
            <summary>
              Returns a Typed StudentCourseRelation Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.Clone(System.Collections.IDictionary)">
            <summary>
             ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.MakeCopyOf(System.Object,System.Collections.IDictionary)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.DeepCopy">
            <summary>
              Returns a Typed StudentCourseRelation Entity which is a deep copy of the current entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.CancelChanges">
            <summary>
             Revert all changes and restore original values.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object.
            </summary>
            <remarks>
            After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.IsPropertyChanged(GE.MyLearning.BL.StudentCourseRelationColumn)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="column">The column.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.IsPropertyChanged(System.String)">
            <summary>
            Determines whether the property value has changed from the original data.
            </summary>
            <param name="columnName">The column name.</param>
            <returns>
            	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.HasDataChanged">
            <summary>
            Determines whether the data has changed from original.
            </summary>
            <returns>
            	<c>true</c> if data has changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.GetOriginalEntity">
            <summary>
              Returns a StudentCourseRelation Entity with the original data.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.Equals(System.Object)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="Object1">An object to compare to this instance.</param>
            <returns>true if Object1 is a <see cref="T:GE.MyLearning.BL.StudentCourseRelationBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            Provides a hash function that is appropriate for <see cref="T:GE.MyLearning.BL.StudentCourseRelationBase"/> class 
            and that ensures a better distribution in the hash table
            </summary>
            <returns>number (hash code) that corresponds to the value of an object</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.Equals(GE.MyLearning.BL.StudentCourseRelationBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object using value semantics.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.StudentCourseRelationBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.ValueEquals(GE.MyLearning.BL.StudentCourseRelationBase,GE.MyLearning.BL.StudentCourseRelationBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.StudentCourseRelationBase"/> instances are considered equal using value semantics.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.StudentCourseRelationBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.StudentCourseRelationBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.Dispose">
            <summary>
            Clean up. Nothing here though.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.Dispose(System.Boolean)">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.OnColumnChanging(GE.MyLearning.BL.StudentCourseRelationColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.StudentCourseRelationBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.StudentCourseRelationColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.OnColumnChanged(GE.MyLearning.BL.StudentCourseRelationColumn)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.StudentCourseRelationBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.StudentCourseRelationColumn"/> which has raised the event.</param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.OnColumnChanging(GE.MyLearning.BL.StudentCourseRelationColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.StudentCourseRelationBase.ColumnChanging"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.StudentCourseRelationColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.OnColumnChanged(GE.MyLearning.BL.StudentCourseRelationColumn,System.Object)">
            <summary>
            Raises the <see cref="E:GE.MyLearning.BL.StudentCourseRelationBase.ColumnChanged"/> event.
            </summary>
            <param name="column">The <see cref="T:GE.MyLearning.BL.StudentCourseRelationColumn"/> which has raised the event.</param>
            <param name="value">The changed value.</param>
        </member>
        <member name="E:GE.MyLearning.BL.StudentCourseRelationBase.ColumnChanging">
            <summary>
            Occurs when a value is being changed for the specified column.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.StudentCourseRelationBase.ColumnChanged">
            <summary>
            Occurs after a value has been changed for the specified column.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.AutoId">
            <summary>
            	Gets or sets the AutoId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.StudentId">
            <summary>
            	Gets or sets the StudentId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.DegreeCourseId">
            <summary>
            	Gets or sets the DegreeCourseId property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.Credentials">
            <summary>
            	Gets or sets the Credentials property. 
            	
            </summary>
            <value>This type is image.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.Updatetime">
            <summary>
            	Gets or sets the Updatetime property. 
            	
            </summary>
            <value>This type is datetime.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return DateTime.MinValue. It is up to the developer
            to check the value of IsUpdatetimeNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.UpdateUserId">
            <summary>
            	Gets or sets the UpdateUserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.CredentialsStyle">
            <summary>
            	Gets or sets the CredentialsStyle property. 
            	
            </summary>
            <value>This type is int.</value>
            <remarks>
            This property can be set to null. 
            If this column is null, this property will return (int)0. It is up to the developer
            to check the value of IsCredentialsStyleNull() and perform business logic appropriately.
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.AttachmentFileStyle">
            <summary>
            	Gets or sets the AttachmentFileStyle property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.AttachmentFilePath">
            <summary>
            	Gets or sets the AttachmentFilePath property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.CourseId">
            <summary>
            	Gets or sets the CourseId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.UserId">
            <summary>
            	Gets or sets the UserId property. 
            	
            </summary>
            <value>This type is varchar.</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.TableName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.TableColumns">
            <summary>
            	The name of the underlying database table's columns.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.StudentCourseRelationBase.CancelAddNew">
            <summary>
            The CancelAddNew event.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.ParentCollection">
            <summary>
            Gets or sets the parent collection of this current entity, if available.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.Site">
            <summary>
            Gets or Sets the site where this data is located.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.StudentCourseRelationBase.Disposed">
            <summary>
            Notify those that care when we dispose.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.EntityId">
            <summary>
            Gets or sets the EntityId property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.EntityTrackingKey">
            <summary>
             Provides the tracking key for the <see cref="T:GE.MyLearning.BL.EntityLocator"/>
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.StudentCourseRelationBase.CancelAddNewEventHandler">
            <summary>
            The delegate for the CancelAddNew event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData">
            <summary>
            	The data structure representation of the 'StudentCourseRelation' table.
            </summary>
            <remarks>
            	This struct is generated by a tool and should never be modified.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.AutoId">
            <summary>			
            AutoID : 
            </summary>
            <remarks>Member of the primary key of the underlying table "StudentCourseRelation"</remarks>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.StudentId">
            <summary>
            StudentID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.DegreeCourseId">
            <summary>
            degreeCourseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.Credentials">
            <summary>
            Credentials : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.Updatetime">
            <summary>
            Updatetime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.UpdateUserId">
            <summary>
            UpdateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.CredentialsStyle">
            <summary>
            CredentialsStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.AttachmentFileStyle">
            <summary>
            AttachmentFileStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.AttachmentFilePath">
            <summary>
            AttachmentFilePath : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.CourseId">
            <summary>
            courseID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.Clone(System.Collections.IDictionary)">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>A new object that is a copy of this instance.</returns>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationBase.StudentCourseRelationEntityData.EntityState">
            <summary>
            	Indicates state of object
            </summary>
            <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
        </member>
        <member name="T:GE.MyLearning.BL.StudentCourseRelationEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationEventArgs.#ctor(GE.MyLearning.BL.StudentCourseRelationColumn)">
            <summary>
             Initalizes a new Instance of the StudentCourseRelationEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationEventArgs.#ctor(GE.MyLearning.BL.StudentCourseRelationColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the StudentCourseRelationEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationEventArgs.Column">
            <summary>
             The StudentCourseRelationColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.StudentCourseRelationColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.StudentCourseRelationEventHandler">
            <summary>
             Define a delegate for all StudentCourseRelation related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.StudentCourseRelationComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StudentCourseRelationComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationComparer.#ctor(GE.MyLearning.BL.StudentCourseRelationColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:StudentCourseRelationComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationComparer.Equals(GE.MyLearning.BL.StudentCourseRelation,GE.MyLearning.BL.StudentCourseRelation)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.StudentCourseRelation"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.StudentCourseRelation"/> to compare.</param>
            <param name="b">The second <c>StudentCourseRelation</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationComparer.GetHashCode(GE.MyLearning.BL.StudentCourseRelation)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationComparer.Compare(GE.MyLearning.BL.StudentCourseRelation,GE.MyLearning.BL.StudentCourseRelation)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.StudentCourseRelationKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationKey.#ctor">
            <summary>
            Initializes a new instance of the StudentCourseRelationKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationKey.#ctor(GE.MyLearning.BL.StudentCourseRelationBase)">
            <summary>
            Initializes a new instance of the StudentCourseRelationKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the StudentCourseRelationKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelationKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.StudentCourseRelationKey.AutoId">
            <summary>
            Gets or sets the AutoId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.StudentCourseRelationColumn">
            <summary>
            Enumerate the StudentCourseRelation columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.AutoId">
            <summary>
            AutoId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.StudentId">
            <summary>
            StudentId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.DegreeCourseId">
            <summary>
            DegreeCourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.Credentials">
            <summary>
            Credentials : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.Updatetime">
            <summary>
            Updatetime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.UpdateUserId">
            <summary>
            UpdateUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.CredentialsStyle">
            <summary>
            CredentialsStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.AttachmentFileStyle">
            <summary>
            AttachmentFileStyle : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.AttachmentFilePath">
            <summary>
            AttachmentFilePath : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.CourseId">
            <summary>
            CourseId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.StudentCourseRelationColumn.UserId">
            <summary>
            UserId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwRolesBase">
            <summary>
             An object representation of the 'VW_Roles' view. [No description found in the database]	
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._roleId">
            <summary>
            RoleID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._roleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._createTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._createUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._userId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._userName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._userCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._feBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase._tag">
            <summary>
            Object that contains data to associate with this object
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesBase.suppressEntityEvents">
            <summary>
            Suppresses Entity Events from Firing, 
            useful when loading the entities from the database.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwRolesBase"/> instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.#ctor(System.String,System.String,System.String,System.DateTime,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwRolesBase"/> instance.
            </summary>
            <param name="_roleId"></param>
            <param name="_roleName"></param>
            <param name="_description"></param>
            <param name="_createTime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_feBadgeId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.CreateVwRoles(System.String,System.String,System.String,System.DateTime,System.String,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
             A simple factory method to create a new <see cref="T:GE.MyLearning.BL.VwRoles"/> instance.
            </summary>
            <param name="_roleId"></param>
            <param name="_roleName"></param>
            <param name="_description"></param>
            <param name="_createTime"></param>
            <param name="_createUserId"></param>
            <param name="_status"></param>
            <param name="_userId"></param>
            <param name="_userName"></param>
            <param name="_userCnName"></param>
            <param name="_feBadgeId"></param>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.AcceptChanges">
            <summary>
            Accepts the changes made to this object by setting each flags to false.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.CancelChanges">
            <summary>
              Revert all changes and restore original values.
              Currently not supported.
            </summary>
             <exception cref="T:System.NotSupportedException">This method is not currently supported and always throws this exception.</exception>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.MarkToDelete">
            <summary>
               Marks entity to be deleted.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.Copy">
            <summary>
              Returns a Typed VwRolesBase Entity 
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.Clone">
            <summary>
             ICloneable.Clone() Member, returns the Deep Copy of this entity.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.MakeCopyOf(System.Object)">
            <summary>
             Returns a deep copy of the child collection object passed in.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.Equals(GE.MyLearning.BL.VwRolesBase)">
            <summary>
             Returns a value indicating whether this instance is equal to a specified object.
            </summary>
            <param name="toObject">An object to compare to this instance.</param>
            <returns>true if toObject is a <see cref="T:GE.MyLearning.BL.VwRolesBase"/> and has the same value as this instance; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.Equals(GE.MyLearning.BL.VwRolesBase,GE.MyLearning.BL.VwRolesBase)">
            <summary>
             Determines whether the specified <see cref="T:GE.MyLearning.BL.VwRolesBase"/> instances are considered equal.
            </summary>
            <param name="Object1">The first <see cref="T:GE.MyLearning.BL.VwRolesBase"/> to compare.</param>
            <param name="Object2">The second <see cref="T:GE.MyLearning.BL.VwRolesBase"/> to compare. </param>
            <returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.CompareTo(System.Object)">
            <summary>
             Compares this instance to a specified object and returns an indication of their relative values.
            <param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
            </summary>
            <returns>A signed integer that indicates the relative order of this instance and obj.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.OnPropertyChanged(System.String)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="propertyName">The name of the property that has changed.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when a property is changed
            </summary>
            <param name="e">PropertyChangedEventArgs</param>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.GetPropertyValueByName(GE.MyLearning.BL.VwRoles,System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="entity">The entity.</param>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.GetPropertyValueByName(System.String)">
            <summary>
            Gets the property value by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VwRolesBase.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.RoleId">
            <summary>
            	Gets or Sets the RoleID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.RoleName">
            <summary>
            	Gets or Sets the RoleName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.Description">
            <summary>
            	Gets or Sets the Description property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.CreateTime">
            <summary>
            	Gets or Sets the CreateTime property. 
            	
            </summary>
            <value>This type is datetime</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.CreateUserId">
            <summary>
            	Gets or Sets the CreateUserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.Status">
            <summary>
            	Gets or Sets the Status property. 
            	
            </summary>
            <value>This type is int</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.UserId">
            <summary>
            	Gets or Sets the UserID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.UserName">
            <summary>
            	Gets or Sets the UserName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can be set to null. 
            </remarks>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.UserCnName">
            <summary>
            	Gets or Sets the UserCNName property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.FeBadgeId">
            <summary>
            	Gets or Sets the FEBadgeID property. 
            	
            </summary>
            <value>This type is varchar</value>
            <remarks>
            This property can not be set to null. 
            </remarks>
            <exception cref="T:System.ArgumentNullException">If you attempt to set to null.</exception>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.Tag">
            <summary>
                Gets or sets the object that contains supplemental data about this object.
            </summary>
            <value>Object</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.SuppressEntityEvents">
            <summary>
            Determines whether this entity is to suppress events while set to true.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.IsDeleted">
            <summary>
            Gets a value indicating if object has been <see cref="M:GE.MyLearning.BL.VwRolesBase.MarkToDelete"/>. ReadOnly.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.IsDirty">
             <summary>
            	Gets a value indicating  if the object has been modified from its original state.
             </summary>
            <value>True if object has been modified from its original state; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.IsNew">
             <summary>
            	Gets a value indicating if the object is new.
             </summary>
            <value>True if objectis new; otherwise False;</value>
        </member>
        <member name="P:GE.MyLearning.BL.VwRolesBase.ViewName">
            <summary>
            	The name of the underlying database table.
            </summary>
        </member>
        <member name="E:GE.MyLearning.BL.VwRolesBase.PropertyChanged">
            <summary>
            Event to indicate that a property has changed.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwRolesColumn">
            <summary>
            Enumerate the VwRoles columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesColumn.RoleId">
            <summary>
            RoleID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesColumn.RoleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesColumn.CreateUserId">
            <summary>
            CreateUserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesColumn.UserId">
            <summary>
            UserID : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesColumn.UserName">
            <summary>
            UserName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesColumn.UserCnName">
            <summary>
            UserCNName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VwRolesColumn.FeBadgeId">
            <summary>
            FEBadgeID : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuRights">
            <summary>
             An object representation of the 'VU_rights' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VuRights.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuRights"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlScoredescription">
            <summary>
             An object representation of the 'evl_scoredescription' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlScoredescription.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuRenyuan">
            <summary>
             An object representation of the 'VU_renyuan' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VuRenyuan.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VuRenyuan"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.UserRole">
            <summary>
             An object representation of the 'UserRole' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.UserRole.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.UserRole"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.RolesEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Roles"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.RolesEventArgs.#ctor(GE.MyLearning.BL.RolesColumn)">
            <summary>
             Initalizes a new Instance of the RolesEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesEventArgs.#ctor(GE.MyLearning.BL.RolesColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the RolesEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolesEventArgs.Column">
            <summary>
             The RolesColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.RolesColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.RolesEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.RolesEventHandler">
            <summary>
             Define a delegate for all Roles related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.RolesComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:RolesComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesComparer.#ctor(GE.MyLearning.BL.RolesColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:RolesComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.RolesComparer.Equals(GE.MyLearning.BL.Roles,GE.MyLearning.BL.Roles)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Roles"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Roles"/> to compare.</param>
            <param name="b">The second <c>Roles</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesComparer.GetHashCode(GE.MyLearning.BL.Roles)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesComparer.Compare(GE.MyLearning.BL.Roles,GE.MyLearning.BL.Roles)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.RolesComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.RolesKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Roles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesKey.#ctor">
            <summary>
            Initializes a new instance of the RolesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesKey.#ctor(GE.MyLearning.BL.RolesBase)">
            <summary>
            Initializes a new instance of the RolesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the RolesKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.RolesKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.RolesKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.RolesKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolesKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.RolesKey.RoleId">
            <summary>
            Gets or sets the RoleId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.RolesColumn">
            <summary>
            Enumerate the Roles columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesColumn.RoleId">
            <summary>
            RoleId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesColumn.RoleName">
            <summary>
            RoleName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesColumn.CreateUserId">
            <summary>
            CreateUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.RolesColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwInstituteDegreeStudents">
            <summary>
             An object representation of the 'VW_InstituteDegreeStudents' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwInstituteDegreeStudents.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudents"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwDegreeCourses">
            <summary>
             An object representation of the 'VW_DegreeCourses' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwDegreeCourses.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwDegreeCourses"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VList`1">
            <summary>
            A generic collection for the nettiers entities that are generated from views. 
            Supports filtering, databinding, searching and sorting.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VList{T}"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.#ctor(System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:VList{T}"/> class based on another list.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.InsertItem(System.Int32,`0)">
            <summary>
            Inserts the specified item in the list at the specified index.
            </summary>
            <param name="index">The zero-based index where the item is to be inserted.</param>
            <param name="item">The item to insert in the list.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.RemoveItem(System.Int32)">
            <summary>
            Removes the item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.Clone">
            <summary>
             Creates an exact copy of this VList{T} instance.
            </summary>
            <returns>The VList{T} object this method creates, cast as an object.</returns>
            <implements><see cref="M:System.ICloneable.Clone"/></implements>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.Copy">
            <summary>
             Creates an exact copy of this VList{T} object.
            </summary>
            <returns>A new, identical copy of the VList{T}.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.ForEach``1(GE.MyLearning.BL.VList{``0},System.Action{``0})">
            <summary>
            Performs the specified action on each element of the specified array.
            </summary>
            <param name="list">The list.</param>
            <param name="action">The action.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAll(System.Enum,System.Object)">
            <summary>
             Finds a collection of objects in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAll(System.Enum,System.Object,System.Boolean)">
            <summary>
             Finds a collection of objects in the current list matching the search criteria.
            </summary>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAll(System.String,System.Object)">
            <summary>
             Finds a collection of objects in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAll(System.String,System.Object,System.Boolean)">
            <summary>
             Finds a collection of objects in the current list matching the search criteria.
            </summary>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAllBy(GE.MyLearning.BL.VList{`0}.FindAllByType,System.Enum,System.Object)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:GE.MyLearning.BL.VList`1.FindAllByType"/> Type to easily search by</param>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAllBy(GE.MyLearning.BL.VList{`0}.FindAllByType,System.Enum,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:GE.MyLearning.BL.VList`1.FindAllByType"/> Type to easily search by</param>
             <param name="column">Property of the object to search, given as a value of the 'Entity'Columns enum.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAllBy(GE.MyLearning.BL.VList{`0}.FindAllByType,System.String,System.Object)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:GE.MyLearning.BL.VList`1.FindAllByType"/> Type to easily search by</param>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAllBy(GE.MyLearning.BL.VList{`0}.FindAllByType,System.String,System.Object,System.Boolean)">
            <summary>
             Finds a collection of <see cref="T:GE.MyLearning.BL.IEntity"/> objects in the current list matching the search criteria.
            </summary>
             <param name="findAllByType"><see cref="T:GE.MyLearning.BL.VList`1.FindAllByType"/> Type to easily search by</param>
             <param name="propertyName">Property of the object to search.</param>
             <param name="value">Value to find.</param>
             <param name="ignoreCase">A Boolean indicating a case-sensitive or insensitive comparison (true indicates a case-insensitive comparison).  String properties only.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAllBy(GE.MyLearning.BL.VList{`0}.FindAllByType,System.ComponentModel.PropertyDescriptor,System.Object,System.Int32,System.Boolean)">
            <summary>
            Searches for the index of the item that has the specified property descriptor with the specified value.
            </summary>
            <param name="findAllByType"><see cref="T:GE.MyLearning.BL.VList`1.FindAllByType"/> Type to easily search by</param>
            <param name="prop">The <see cref="T:System.ComponentModel.PropertyDescriptor"> to search for.</see></param>
            <param name="key">The value of <i>property</i> to match.</param>
            <param name="start">The index in the list at which to start the search.</param>
            <param name="ignoreCase">Indicator of whether to perform a case-sensitive or case insensitive search (string properties only).</param>
            <returns>The zero-based index of the item that matches the property descriptor and contains the specified value. </returns>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAllDistinct(System.Enum)">
            <summary>
            Finds all distinct elements for the specified column
            </summary>
            <param name="column">The column.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VList`1.FindAllDistinct(System.String)">
            <summary>
            Finds all distinct elements for the specified column
            </summary>
            <param name="columnName">Name of the column.</param>
            <returns></returns>
        </member>
        <member name="T:GE.MyLearning.BL.VList`1.FindAllByType">
            <summary>
             Used to by FindAllBy method to all for easy searching.
             </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VList`1.FindAllByType.StartsWith">
            <summary>
            Starts with Value in List
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VList`1.FindAllByType.EndsWith">
            <summary>
            Ends with Value in List
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VList`1.FindAllByType.Contains">
            <summary>
            Contains Value in List
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.EvlUsertype">
            <summary>
             An object representation of the 'evl_usertype' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.EvlUsertype.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.EvlUsertype"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.GroupsEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.Groups"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsEventArgs.#ctor(GE.MyLearning.BL.GroupsColumn)">
            <summary>
             Initalizes a new Instance of the GroupsEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsEventArgs.#ctor(GE.MyLearning.BL.GroupsColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the GroupsEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsEventArgs.Column">
            <summary>
             The GroupsColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.GroupsColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.GroupsEventHandler">
            <summary>
             Define a delegate for all Groups related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.GroupsComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GroupsComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsComparer.#ctor(GE.MyLearning.BL.GroupsColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:GroupsComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsComparer.Equals(GE.MyLearning.BL.Groups,GE.MyLearning.BL.Groups)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.Groups"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.Groups"/> to compare.</param>
            <param name="b">The second <c>Groups</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsComparer.GetHashCode(GE.MyLearning.BL.Groups)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsComparer.Compare(GE.MyLearning.BL.Groups,GE.MyLearning.BL.Groups)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.GroupsKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.Groups"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsKey.#ctor">
            <summary>
            Initializes a new instance of the GroupsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsKey.#ctor(GE.MyLearning.BL.GroupsBase)">
            <summary>
            Initializes a new instance of the GroupsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the GroupsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.GroupsKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.GroupsKey.GroupId">
            <summary>
            Gets or sets the GroupId property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.GroupsColumn">
            <summary>
            Enumerate the Groups columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsColumn.GroupId">
            <summary>
            GroupId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsColumn.GroupName">
            <summary>
            GroupName : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsColumn.Description">
            <summary>
            Description : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsColumn.Status">
            <summary>
            Status : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsColumn.LeaderUserId">
            <summary>
            LeaderUserId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsColumn.CreateTime">
            <summary>
            CreateTime : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.GroupsColumn.CreateUserId">
            <summary>
            CreateUserId : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryExpertsEventArgs">
            <summary>
            Provides data for the ColumnChanging and ColumnChanged events.
            </summary>
            <remarks>
            The ColumnChanging and ColumnChanged events occur when a change is made to the value 
            of a property of a <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object.
            </remarks>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsEventArgs.#ctor(GE.MyLearning.BL.VuCatogaryExpertsColumn)">
            <summary>
             Initalizes a new Instance of the VuCatogaryExpertsEventArgs class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsEventArgs.#ctor(GE.MyLearning.BL.VuCatogaryExpertsColumn,System.Object)">
            <summary>
             Initalizes a new Instance of the VuCatogaryExpertsEventArgs class.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsEventArgs.Column">
            <summary>
             The VuCatogaryExpertsColumn that was modified, which has raised the event.
            </summary>
            <value cref="T:GE.MyLearning.BL.VuCatogaryExpertsColumn"/>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsEventArgs.Value">
            <summary>
            Gets the current value of the column.
            </summary>
            <value>The current value of the column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryExpertsEventHandler">
            <summary>
             Define a delegate for all VuCatogaryExperts related events.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryExpertsComparer">
            <summary>
            Strongly Typed IComparer
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:VuCatogaryExpertsComparer"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsComparer.#ctor(GE.MyLearning.BL.VuCatogaryExpertsColumn)">
            <summary>
            Initializes a new instance of the <see cref="T:VuCatogaryExpertsComparer"/> class.
            </summary>
            <param name="column">The column to sort on.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsComparer.Equals(GE.MyLearning.BL.VuCatogaryExperts,GE.MyLearning.BL.VuCatogaryExperts)">
            <summary>
            Determines whether the specified <c cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> instances are considered equal.
            </summary>
            <param name="a">The first <c cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> to compare.</param>
            <param name="b">The second <c>VuCatogaryExperts</c> to compare.</param>
            <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsComparer.GetHashCode(GE.MyLearning.BL.VuCatogaryExperts)">
            <summary>
            Gets the hash code of the specified entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsComparer.Compare(GE.MyLearning.BL.VuCatogaryExperts,GE.MyLearning.BL.VuCatogaryExperts)">
            <summary>
            Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
            </summary>
            <param name="a">The first object to compare.</param>
            <param name="b">The second object to compare.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsComparer.WhichComparison">
            <summary>
            Gets or sets the column that will be used for comparison.
            </summary>
            <value>The comparison column.</value>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryExpertsKey">
            <summary>
            Wraps the unique identifier values for the <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsKey.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsKey.#ctor(GE.MyLearning.BL.VuCatogaryExpertsBase)">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsKey.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsKey class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsKey.Load(System.Collections.IDictionary)">
            <summary>
            Reads values from the supplied <see cref="T:System.Collections.IDictionary"/> object into
            properties of the current object.
            </summary>
            <param name="values">An <see cref="T:System.Collections.IDictionary"/> instance that contains
            the key/value pairs to be used as property values.</param>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsKey.ToDictionary">
            <summary>
            Creates a new <see cref="T:System.Collections.IDictionary"/> object and populates it
            with the property values of the current object.
            </summary>
            <returns>A collection of name/value pairs.</returns>
        </member>
        <member name="M:GE.MyLearning.BL.VuCatogaryExpertsKey.ToString">
            <summary>
             Returns a String that represents the current object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsKey.Entity">
            <summary>
            Gets or sets the Entity property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.BL.VuCatogaryExpertsKey.Id">
            <summary>
            Gets or sets the Id property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VuCatogaryExpertsColumn">
            <summary>
            Enumerate the VuCatogaryExperts columns.
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsColumn.Id">
            <summary>
            Id : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsColumn.CatogaryId">
            <summary>
            CatogaryId : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsColumn.Owner">
            <summary>
            Owner : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsColumn.Email">
            <summary>
            Email : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsColumn.Area">
            <summary>
            Area : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsColumn.Name">
            <summary>
            Name : 
            </summary>
        </member>
        <member name="F:GE.MyLearning.BL.VuCatogaryExpertsColumn.Classid">
            <summary>
            Classid : 
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.StudentCourseRelation">
            <summary>
             An object representation of the 'StudentCourseRelation' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.StudentCourseRelation.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.TrainingUser">
            <summary>
             An object representation of the 'TrainingUser' table. [No description found the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.TrainingUser.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.TrainingUser"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.BL.VwRoles">
            <summary>
             An object representation of the 'VW_Roles' view. [No description found in the database]	
            </summary>
             <remarks>
             This file is generated once and will never be overwritten.
             </remarks>	
        </member>
        <member name="M:GE.MyLearning.BL.VwRoles.#ctor">
            <summary>
             Creates a new <see cref="T:GE.MyLearning.BL.VwRoles"/> instance.
            </summary>
        </member>
    </members>
</doc>
