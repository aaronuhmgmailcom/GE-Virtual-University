<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GE.MyLearning.DL</name>
    </assembly>
    <members>
        <member name="T:GE.MyLearning.DL.Bases.NetTiersProviderBase">
            <summary>
             The base class to implements to create a .NetTiers provider.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.INetTiersProvider">
            <summary>
            Interface for NetTiersProvider
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.CreateTransaction">
            <summary>
            Creates the transaction.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteDataSet(GE.MyLearning.DL.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteDataSet(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteDataSet(GE.MyLearning.DL.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteNonQuery(GE.MyLearning.DL.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteNonQuery(GE.MyLearning.DL.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteNonQuery(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteReader(GE.MyLearning.DL.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteReader(GE.MyLearning.DL.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteReader(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteScalar(GE.MyLearning.DL.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteScalar(GE.MyLearning.DL.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteScalar(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.INetTiersProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the specified name.
            </summary>
            <param name="name">The name.</param>
            <param name="config">The config.</param>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.INetTiersProvider.CurrentLoadPolicy">
            <summary>
            Gets or sets the current load policy.
            </summary>
            <value>The current load policy.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.INetTiersProvider.DefaultCommandTimeout">
            <summary>
            Gets or sets the default command timeout.
            </summary>
            <value>The default command timeout.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.INetTiersProvider.EnableEntityTracking">
            <summary>
            Gets or sets a value indicating whether [enable entity tracking].
            </summary>
            <value>
            	<c>true</c> if [enable entity tracking]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.INetTiersProvider.EnableListTracking">
            <summary>
            Gets or sets a value indicating whether [enable list tracking].
            </summary>
            <value><c>true</c> if [enable list tracking]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.INetTiersProvider.EnableMethodAuthorization">
            <summary>
            Gets or sets a value indicating whether [enable method authorization].
            </summary>
            <value>
            	<c>true</c> if [enable method authorization]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.INetTiersProvider.EntityCreationalFactoryType">
            <summary>
            Gets or sets the type of the entity creational factory.
            </summary>
            <value>The type of the entity creational factory.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.INetTiersProvider.IsTransactionSupported">
            <summary>
            Gets a value indicating whether this instance is transaction supported.
            </summary>
            <value>
            	<c>true</c> if this instance is transaction supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.INetTiersProvider.UseEntityFactory">
            <summary>
            Gets or sets a value indicating whether [use entity factory].
            </summary>
            <value><c>true</c> if [use entity factory]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Initializes the provider.
            </summary>
            <param name="name">The friendly name of the provider.</param>
            <param name="config">A collection of the name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
            <exception cref="T:System.ArgumentNullException">The name of the provider is null.</exception>
            <exception cref="T:System.InvalidOperationException">An attempt is made to call <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)"></see> on a provider after the provider has already been initialized.</exception>
            <exception cref="T:System.ArgumentException">The name of the provider has a length of zero.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.CreateTransaction">
            <summary>
            Creates a new <c cref="T:GE.MyLearning.DL.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteNonQuery(System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteNonQuery(GE.MyLearning.DL.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteNonQuery(System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteNonQuery(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteNonQuery(System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteNonQuery(GE.MyLearning.DL.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the non query.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteReader(System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteReader(GE.MyLearning.DL.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteReader(System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteReader(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteReader(System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteReader(GE.MyLearning.DL.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the reader.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteDataSet(System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteDataSet(GE.MyLearning.DL.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteDataSet(System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteDataSet(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteDataSet(System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteDataSet(GE.MyLearning.DL.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the data set.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteScalar(System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteScalar(GE.MyLearning.DL.TransactionManager,System.String,System.Object[])">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="storedProcedureName">Name of the stored procedure.</param>
            <param name="parameterValues">The parameter values.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteScalar(System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteScalar(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandWrapper">The command wrapper.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteScalar(System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderBase.ExecuteScalar(GE.MyLearning.DL.TransactionManager,System.Data.CommandType,System.String)">
            <summary>
            Executes the scalar.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProviderBase.EntityCreationalFactoryType">
            <summary>
            Gets or sets the Creational Entity Factory Type.
            </summary>
            <value>The entity factory type.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProviderBase.EnableEntityTracking">
            <summary>
            Gets or sets the ability to track entities.
            </summary>
            <value>true/false.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProviderBase.EnableListTracking">
            <summary>
            Gets or sets the Entity Factory Type.
            </summary>
            <value>The entity factory type.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProviderBase.UseEntityFactory">
            <summary>
            Gets or sets the use entity factory property to enable the usage of the EntityFactory and it's type cache.
            </summary>
            <value>bool value</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProviderBase.EnableMethodAuthorization">
            <summary>
            Gets or sets the use Enable Method Authorization to enable the usage of the Microsoft Patterns and Practices 
            IAuthorizationRuleProvider for code level authorization.
            </summary>
            <value>A bool value.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProviderBase.DefaultCommandTimeout">
            <summary>
            Gets or sets the default timeout for every command
            </summary>
            <value>integer value in seconds.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProviderBase.CurrentLoadPolicy">
            <summary>
            Get or set the current LoadPolicy in effect
            </summary>
            <value>A <c cref="T:GE.MyLearning.DL.Bases.LoadPolicy"/> enumeration member.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProviderBase.IsTransactionSupported">
            <summary>
             Indicates if the current <c cref="T:GE.MyLearning.DL.Bases.NetTiersProvider"/> implementation is supporting Transactions.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LoadPolicy">
            <summary>
            Possibel load policies that can be applied when a provider Load method is called. Determines 
            how entities with EntityState.Unchanged and EntityState.Changed are treated during a Load
            when entity tracking is enabled.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.Bases.LoadPolicy.PreserveChanges">
            <summary>
            Refresh entities with EntityState.Unchanged if entity tracking is enabled. Entities with 
            EntityState.Changed will not be refreshed with information from the database.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.Bases.LoadPolicy.DiscardChanges">
            <summary>
            Refresh entities with EntityState.Changed as well as EntityState.Unchanged i.e. discard any
            unsaved changes.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EntityProviderBase`2">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityProvider&lt;Entity, EntityKey&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
            <remarks>
            This file is generated once and will never be overwritten.
            </remarks>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityProvider&lt;Entity, EntityKey&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
        </member>
        <member name="T:GE.MyLearning.DL.IEntityProvider`2">
            <summary>
            Defines the common data access methods that can be used by the
            ProviderDataSource control to interact with the underlying data store.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <typeparam name="EntityKey">The class of the EntityId
            property of the specified business object class.</typeparam>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityProvider`2.Get(GE.MyLearning.DL.TransactionManager,`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityProvider`2.GetAll(GE.MyLearning.DL.TransactionManager)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityProvider`2.GetPaged(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityProvider`2.Insert(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityProvider`2.Update(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityProvider`2.Delete(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityProvider`2.Save(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityProvider`2.DeepSave(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Get(`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Get(GE.MyLearning.DL.TransactionManager,`1)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Get(`1,System.Int32,System.Int32)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Get(GE.MyLearning.DL.TransactionManager,`1,System.Int32,System.Int32)">
            <summary>
            Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetAll">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetAll(GE.MyLearning.DL.TransactionManager)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetAll(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetAll(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetAll(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetPaged(System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetPaged(GE.MyLearning.DL.TransactionManager,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetPaged(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetPaged(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetPaged(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a TList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetTotalItems(System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetTotalItems(GE.MyLearning.DL.TransactionManager,System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(System.String)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(System.String,System.Int32,System.Int32)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.TransactionManager,System.String,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows meeting the whereClause condition from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks>Operators must be capitalized (OR, AND)</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> or <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.IFilterParameterCollection,GE.MyLearning.DL.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sortColumn conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> or <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:GE.MyLearning.DL.SqlSortColumn"/> or <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> objects</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.TransactionManager,GE.MyLearning.DL.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> or <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.TransactionManager,GE.MyLearning.DL.IFilterParameterCollection,GE.MyLearning.DL.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sortColumn conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> or <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:GE.MyLearning.DL.SqlSortColumn"/> or <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> objects</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> or <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.TransactionManager,GE.MyLearning.DL.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> or <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> or <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.IFilterParameterCollection,GE.MyLearning.DL.ISortColumnCollection,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sortColumn conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> or <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:GE.MyLearning.DL.SqlSortColumn"/> or <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> objects</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Find(GE.MyLearning.DL.TransactionManager,GE.MyLearning.DL.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> or <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Insert(`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Insert(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Inserts a row into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to insert.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Insert(GE.MyLearning.BL.TList{`0})">
            <summary>
            Inserts rows into the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to insert.</param>
            <returns>Returns the number of rows successfully inserted.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Insert(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0})">
            <summary>
            Inserts rows into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to insert.</param>
            <returns>Returns the number of rows successfully inserted.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.BulkInsert(GE.MyLearning.BL.TList{`0})">
            <summary>
            Efficiently inserts multiple rows into the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to insert.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.BulkInsert(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0})">
            <summary>
            Efficiently inserts multiple rows into the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to insert.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Update(`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Update(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Updates an existing row in the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to update.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Update(GE.MyLearning.BL.TList{`0})">
            <summary>
            Updates existing rows in the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to update.</param>
            <returns>Returns the number of rows successfully updated.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Update(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0})">
            <summary>
            Updates existing rows in the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to update.</param>
            <returns>Returns the number of rows successfully updated.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Save(`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Save(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Save(GE.MyLearning.BL.TList{`0})">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Save(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0})">
            <summary>
            Saves row changes in the DataSource (insert, update ,delete).
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Delete(`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Delete(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Delete(`1)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Delete(GE.MyLearning.DL.TransactionManager,`1)">
            <summary>
            Deletes a row from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if the operation is successful.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Delete(GE.MyLearning.BL.TList{`0})">
            <summary>
            Deletes rows from the DataSource.
            </summary>
            <param name="entities">TList of Entity objects to delete.</param>
            <returns>Returns the number of rows successfully deleted.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0})">
            <summary>
            Deletes rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to delete.</param>
            <returns>Returns the number of rows successfully deleted.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(`0)">
            <summary>
            Deep Load the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="entity">The Entity object to load.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Deep Load the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(`0,System.Boolean)">
            <summary>
            Deep Load the Entity object with all of the child property collections N levels deep.
            </summary>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.DL.TransactionManager,`0,System.Boolean)">
            <summary>
            Deep Load the Entity object with all of the child property collections N levels deep.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(`0,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.DL.TransactionManager,`0,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.DL.TransactionManager,`0,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep load functionality.
            </remarks>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
            <param name="innerList">A collection of child types for easy access.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0},System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Load the entire Entity object with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep load functionality.
            </remarks>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">The Entity List object to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
            <param name="innerList">A collection of child types for easy access.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.BL.TList{`0})">
            <summary>
            Deep Load the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="entities">TList of Entity objects to load.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0})">
            <summary>
            Deep Load the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.BL.TList{`0},System.Boolean)">
            <summary>
            Deep Load the Entity objects with all of the child property collections N levels deep.
            </summary>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0},System.Boolean)">
            <summary>
            Deep Load the Entity objects with all of the child property collections N levels deep.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.BL.TList{`0},System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the Entity objects with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0},System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[])">
            <summary>
            Deep Load the Entity objects with criteria based on the child types array and the DeepLoadType.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with recursion and traverse an entire collection's object graph.
            </remarks>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to load.</param>
            <param name="deep">A flag that indicates whether to recursively load all Property Collections that are descendants of this instance. If True, loads the complete object graph below this object. If False, loads this object only.</param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Load.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSave(`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSave(GE.MyLearning.DL.TransactionManager,`0)">
            <summary>
            Deep Save the Entity object with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSave(`0,GE.MyLearning.DL.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSave(GE.MyLearning.DL.TransactionManager,`0,GE.MyLearning.DL.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSave(GE.MyLearning.DL.TransactionManager,`0,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire Entity object with criteria based on the child types array and the DeepSaveType.
            </summary>
            <remarks>
            This method should be implemented by sub-classes to provide specific deep save functionality.
            </remarks>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entity">The Entity object to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
            <param name="innerList">A <c>DeepSession</c> of child types for easy access.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSave(GE.MyLearning.BL.TList{`0})">
            <summary>
            Deep Save the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0})">
            <summary>
            Deep Save the Entity objects with all of the child property collections only 1 level deep.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSave(GE.MyLearning.BL.TList{`0},GE.MyLearning.DL.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0},GE.MyLearning.DL.DeepSaveType,System.Type[])">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TList{`0},GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the Entity objects with criteria based on the child types array and the DeepSaveType.
            </summary>
            <param name="mgr">The transaction manager.</param>
            <param name="entities">TList of Entity objects to save.</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">Entity Property Collection Type Array To Include or Exclude from Save.</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.CanDeepLoad(GE.MyLearning.BL.IEntity,System.String,GE.MyLearning.DL.DeepLoadType,GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
             Enforces the rules set in order to load this property for a given type.
            </summary>
             <param name="entity">The entity.</param>
             <param name="key">The key.</param>
             <param name="deepLoadType">Type of the deep load.</param>
             <param name="innerList">The inner list.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.CanDeepSave(System.Object,System.String,GE.MyLearning.DL.DeepSaveType,GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Enforces the rules set in order to save this property for a given type.
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <param name="deepSaveType">Type of the deep save.</param>
            <param name="innerList">The inner list.</param>
            <returns>
            	<c>true</c> if this instance [can deep save] the specified entity; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.GetDeepSessionArgs(GE.MyLearning.DL.Bases.DeepSession,System.Enum,System.Object,System.String)">
            <summary>
            Gets the DeepSession Arguments for an event.
            </summary>
            <param name="deepSession">the current DeepSession.</param>
            <param name="deepTypeValue"> The Deep Type Value</param>
            <param name="obj">The current entity or list.</param>
            <param name="key">The key.</param>
            <returns>
            	<c>DeepSessionEventArgs</c> if the item being run is a valid entity or list.
            </returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.OnDataRequesting(GE.MyLearning.DL.Bases.CommandEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just before accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.OnDataRequested(GE.MyLearning.DL.Bases.CommandEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.OnDeepLoading(GE.MyLearning.DL.Bases.DeepSessionEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.OnDeepSaving(GE.MyLearning.DL.Bases.DeepSessionEventArgs)">
            <summary>
                This is the method that is responsible for notifying
                receivers that the event occurred just after accessing the 
                data provider.
            </summary>
        </member>
        <member name="E:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DataRequesting">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DataRequested">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoading">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="E:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSaving">
            <summary>
                An event which occurs just before a data 
                request is made in the data provider.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DataRequestingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DataRequestedEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepLoadingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EntityProviderBaseCore`2.DeepSavingEventHandler">
            <summary>
                This represents the delegate method prototype that
                event receivers must implement 
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlScoredescriptionKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlScoredescriptionKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_scoredescription index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_scoredescription index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_scoredescription index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_scoredescription index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_scoredescription index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_scoredescription index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlScoredescription},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlScoredescription&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlScoredescription)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlScoredescription)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlScoredescription,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlScoredescription Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlScoredescription,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlScoredescription object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlScoredescription instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlScoredescription Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoredescriptionChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlScoredescription</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoredescriptionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.SqlFilterBuilder`1">
            <summary>
            Allows for building SQL filter expressions using strongly-typed
            column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="T:GE.MyLearning.DL.SqlStringBuilder">
            <summary>
            Represents a SQL filter expression.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.#ctor">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlStringBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.Append(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.Append(System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.Append(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendEquals(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotEquals(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendIn(System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendIn(System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendIn(System.String,System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotIn(System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotIn(System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotIn(System.String,System.String,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendInQuery(System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendInQuery(System.String,System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotInQuery(System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotInQuery(System.String,System.String,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendRange(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotRange(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendIsNull(System.String)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendIsNull(System.String,System.String)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendIsNotNull(System.String)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendIsNotNull(System.String,System.String)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendGreaterThan(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendGreaterThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendGreaterThanOrEqual(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendGreaterThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendLessThan(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendLessThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendLessThanOrEqual(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendLessThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendStartsWith(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendStartsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendEndsWith(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendEndsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendContains(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotContains(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendLike(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendLike(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotLike(System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendNotLike(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendInternal(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the SQL expression to the internal <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="junction">The junction.</param>
            <param name="column">The column.</param>
            <param name="compare">The compare.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.AppendInternal(System.String,System.String)">
            <summary>
            Appends the SQL expression to the internal <see cref="T:System.Text.StringBuilder"/>.
            </summary>
            <param name="junction">The junction.</param>
            <param name="query">The query.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.Clear">
            <summary>
            Clears the internal string buffer.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.ToString">
            <summary>
            Converts the value of this instance to a System.String.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.ToString(System.String)">
            <summary>
            Converts the value of this instance to a System.String and
            prepends the specified junction if the expression is not empty.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.Parse(System.String,System.String,System.Boolean)">
            <summary>
            Parses the specified searchText to create a SQL filter expression.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.GetInQueryValues(System.String,System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values">Comma string with the in parameters already in one string</param>
            <param name="encode">tells whether or not to enclose the parameters with ' and to replace ' with '' within the parameters.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.GetInQueryValues(System.String[],System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values">String Array with the in parameters</param>
            <param name="encode">tells whether or not to enclose the parameters with ' and to replace ' with '' within the parameters.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.BeginGroup">
            <summary>
            Begins a new group of parameters by adding an open parenthesis "("
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.BeginGroup(System.String)">
            <summary>
            Begins a new groups of parameters using the specified junction operator
            </summary>
            <param name="junction">The junction operator to be used</param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.EndGroup">
            <summary>
            Ends a group of parameters by add a closing parenthesis ")"
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlStringBuilder.EnsureGroups">
            <summary>
            Makes sure that all groups have been ended (each call to BeginGroup has a corresponding EndGroup)
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlStringBuilder.junction">
            <summary>
            The Junction member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlStringBuilder.ignoreCase">
            <summary>
            The IgnoreCase member variable.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlStringBuilder.Junction">
            <summary>
            Gets or sets the Junction property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlStringBuilder.IgnoreCase">
            <summary>
            Gets or sets the IgnoreCase property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlStringBuilder.Length">
            <summary>
            Gets or sets the length of the internal StringBuilder object.
            </summary>
            <value>The length.</value>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.Append(`0,System.String)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.Append(`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.Append(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendEquals(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotEquals(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendIn(`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendIn(`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendIn(System.String,`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotIn(`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotIn(`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String[])">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendInQuery(`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotInQuery(`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendIsNull(`0)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendIsNull(System.String,`0)">
            <summary>
            Appends an IS NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendIsNotNull(`0)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendIsNotNull(System.String,`0)">
            <summary>
            Appends an IS NOT NULL expression to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendRange(`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotRange(`0,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendGreaterThan(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendGreaterThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendGreaterThanOrEqual(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendLessThan(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendLessThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendLessThanOrEqual(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendLessThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendStartsWith(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendStartsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendEndsWith(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendEndsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendContains(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotContains(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendLike(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendLike(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotLike(`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.AppendNotLike(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterBuilder`1.GetColumnName(`0)">
            <summary>
            Gets the column name from the specified column enumeration value.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlScoredescriptionFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoredescriptionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoredescriptionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoredescriptionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1">
            <summary>
            Allows for building parameterized SQL filter expressions using strongly-typed
            column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="T:GE.MyLearning.DL.IFilterParameterCollection">
            <summary>
              Represents a type which will contain a method to 
              retrieve the A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameterCollection"/> 
              objects to use dynamic and parameterized filters.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.IFilterParameterCollection.GetParameters">
            <summary>
            Gets a collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects
            </summary>
            <returns><see cref="T:GE.MyLearning.DL.SqlFilterParameterCollection"/> object</returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlFilterBuilder&lt;EntityColumn&gt; class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.Append(System.String,`0,System.String,System.Boolean)">
            <summary>
            Appends the specified column and search text to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendNotEquals(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendNotEquals(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter
            as a NOT EQUALS expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendNotIn(System.String,`0,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter.
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendNotIn(System.String,System.String,System.String[],System.Boolean)">
            <summary>
            Appends the specified column and list of values to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendNotInQuery(System.String,`0,System.String)">
            <summary>
            Appends the specified sub-query to the current filter
            as a NOT IN expression.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendNotRange(System.String,`0,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendNotRange(System.String,System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value not in range to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="from"></param>
            <param name="to"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendGreaterThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendGreaterThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendGreaterThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendLessThan(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendLessThan(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendLessThanOrEqual(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendLessThanOrEqual(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendStartsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendStartsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendEndsWith(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendEndsWith(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendNotContains(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendNotContains(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendLike(System.String,`0,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.AppendLike(System.String,System.String,System.String)">
            <summary>
            Appends the specified column and value to the current filter.
            </summary>
            <param name="junction"></param>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.Parse(System.String,System.String,System.Boolean)">
            <summary>
            Parses the specified searchText to create a SQL filter expression.
            </summary>
            <param name="column"></param>
            <param name="searchText"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.GetInQueryValues(System.String,System.Boolean)">
            <summary>
            Gets an encoded list of values for use with an IN clause.
            </summary>
            <param name="values"></param>
            <param name="encode"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.GetParameters">
            <summary>
            Gets the current collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects and
            also sets the collection's FilterExpression property.
            </summary>
            <returns></returns>
        </member>
        <member name="F:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.parameters">
            <summary>
            The Parameters member variable.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.GE#MyLearning#DL#IFilterParameterCollection#GetParameters">
            <summary>
            Gets a collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects 
            </summary>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1.Parameters">
            <summary>
            Gets or sets the Parameters property.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlScoredescriptionParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoredescriptionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoredescriptionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoredescriptionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.SqlSortBuilder`1">
            <summary>
            Allows for building SQL OrderBy expressions using strongly-typed column enumeration values.
            </summary>
            <typeparam name="EntityColumn">An enumeration of entity column names.</typeparam>
        </member>
        <member name="T:GE.MyLearning.DL.ISortColumnCollection">
            <summary>
              Represents a type which will contain a method to 
              retrieve the A collection of <see cref="T:GE.MyLearning.DL.SqlSortColumnCollection"/> 
              objects to generate an OrderBy clause.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ISortColumnCollection.GetSortColumns">
            <summary>
            Gets a collection of <see cref="T:GE.MyLearning.DL.SqlSortColumn"/> objects
            </summary>
            <returns><see cref="T:GE.MyLearning.DL.SqlSortColumnCollection"/> object</returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the SqlFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortBuilder`1.Append(System.Enum,GE.MyLearning.DL.SqlSortDirection)">
            <summary>
            Appends the specified column and sorts it by the specified SqlSortDirection 
            </summary>
            <param name="column">The column to sort</param>
            <param name="sortDirection">The specified column's sort direction</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortBuilder`1.AppendASC(System.Enum)">
            <summary>
            Appends the specified column and sorts it Ascending
            </summary>
            <param name="column">The column to sort</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortBuilder`1.AppendDESC(System.Enum)">
            <summary>
            Appends the specified column and sorts it Descending
            </summary>
            <param name="column">The column to sort</param>
            <returns></returns>
        </member>
        <member name="F:GE.MyLearning.DL.SqlSortBuilder`1.sortColumns">
            <summary>
            The Sort Columns member variable.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortBuilder`1.AddColumn(System.Enum,GE.MyLearning.DL.SqlSortDirection)">
            <summary>
            Adds a column to the sort builder
            </summary>
            <param name="column">The entity's column to sort by</param>
            <param name="sortDirection">The sort direction</param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortBuilder`1.ToString">
            <summary>
            Provides the actual SQL sort string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortBuilder`1.GetColumnName(`0)">
            <summary>
            Gets the column name from the specified column enumeration value.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortBuilder`1.GetSortColumns">
            <summary>
            Gets the current collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects and
            also sets the collection's FilterExpression property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortBuilder`1.GE#MyLearning#DL#ISortColumnCollection#GetSortColumns">
            <summary>
            Gets a collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects 
            </summary>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.DL.SqlSortBuilder`1.SortColumns">
            <summary>
            Gets or sets the SortColumns property.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoredescriptionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlScoredescriptionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlAssessmentProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlAssessmentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlAssessmentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlAssessmentKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlAssessmentKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_assessment index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlAssessment"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_assessment index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlAssessment"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_assessment index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlAssessment"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_assessment index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlAssessment"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_assessment index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlAssessment"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_assessment index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlAssessment"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlAssessment},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlAssessment&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlAssessment)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlAssessment)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlAssessment,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlAssessment Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlAssessment,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlAssessment object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlAssessment instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlAssessment Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DepartmentProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.DepartmentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.DepartmentProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DepartmentKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_departmentName">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_departmentName">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DepartmentKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.GetByDepartmentName(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK__Departme__D949CC356D99A4DE index.
            </summary>
            <param name="_departmentName"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Department"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.GetByDepartmentName(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK__Departme__D949CC356D99A4DE index.
            </summary>
            <param name="_departmentName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Department"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.GetByDepartmentName(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK__Departme__D949CC356D99A4DE index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_departmentName"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Department"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.GetByDepartmentName(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK__Departme__D949CC356D99A4DE index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_departmentName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Department"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.GetByDepartmentName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Departme__D949CC356D99A4DE index.
            </summary>
            <param name="_departmentName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Department"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.GetByDepartmentName(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Departme__D949CC356D99A4DE index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_departmentName"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Department"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Department},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Department&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Department)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Department"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Department"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Department)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Department"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Department"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Department,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Department"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Department Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Department,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Department object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Department instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Department Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuClassInfoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuClassInfoKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuClassInfoKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_ClassInfo index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuClassInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_ClassInfo index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuClassInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_ClassInfo index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuClassInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_ClassInfo index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuClassInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_ClassInfo index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuClassInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_ClassInfo index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuClassInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuClassInfo},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuClassInfo&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuClassInfo)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuClassInfo)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuClassInfo,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuClassInfo Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuClassInfo,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuClassInfo object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuClassInfo instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuClassInfo Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuClassInfoChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuClassInfo</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuClassInfoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuClassInfoFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuClassInfoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuClassInfoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuClassInfoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuClassInfoParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuClassInfoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuClassInfoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuClassInfoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuClassInfoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuClassInfoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuClassInfoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuClassInfoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuNewpostProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuNewpostProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuNewpostProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuNewpostKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuNewpostKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_NEWPOST index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuNewpost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_NEWPOST index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuNewpost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_NEWPOST index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuNewpost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_NEWPOST index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuNewpost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_NEWPOST index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuNewpost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_NEWPOST index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuNewpost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuNewpost},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuNewpost&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuNewpost)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuNewpost"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuNewpost"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuNewpost)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuNewpost"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuNewpost"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuNewpost,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuNewpost"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuNewpost Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuNewpost,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuNewpost object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuNewpost instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuNewpost Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.UserRoleProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserRoleKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.Delete(System.String,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_roleId">. Primary Key.</param>
            <param name="_userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_roleId">. Primary Key.</param>
            <param name="_userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserRoleKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.GetByRoleIdUserId(System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key XPKUserRole index.
            </summary>
            <param name="_roleId"></param>
            <param name="_userId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserRole"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.GetByRoleIdUserId(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKUserRole index.
            </summary>
            <param name="_roleId"></param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserRole"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.GetByRoleIdUserId(GE.MyLearning.DL.TransactionManager,System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the XPKUserRole index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_roleId"></param>
            <param name="_userId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserRole"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.GetByRoleIdUserId(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKUserRole index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_roleId"></param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserRole"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.GetByRoleIdUserId(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKUserRole index.
            </summary>
            <param name="_roleId"></param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserRole"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.GetByRoleIdUserId(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKUserRole index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_roleId"></param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserRole"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.UserRole},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;UserRole&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.UserRole)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.UserRole"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.UserRole"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.UserRole)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.UserRole"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.UserRole"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserRole,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.UserRole"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.UserRole Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserRole,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.UserRole object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.UserRole instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.UserRole Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserRoleChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.UserRole</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserRoleFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserRole"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserRoleFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserRoleFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserRoleFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserRoleParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserRole"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserRoleParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserRoleParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserRoleParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserRoleSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserRole"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserRoleSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserRoleSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserGroupProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.UserGroupProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.UserGroupProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserGroupKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_autoId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_autoId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserGroupKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.GetByAutoId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key XPKUserGroup index.
            </summary>
            <param name="_autoId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserGroup"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.GetByAutoId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKUserGroup index.
            </summary>
            <param name="_autoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserGroup"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.GetByAutoId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKUserGroup index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_autoId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserGroup"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.GetByAutoId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKUserGroup index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_autoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserGroup"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.GetByAutoId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKUserGroup index.
            </summary>
            <param name="_autoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserGroup"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.GetByAutoId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKUserGroup index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_autoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserGroup"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.UserGroup},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;UserGroup&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.UserGroup)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.UserGroup"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.UserGroup"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.UserGroup)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.UserGroup"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.UserGroup"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserGroup,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.UserGroup"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.UserGroup Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserGroup,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.UserGroup object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.UserGroup instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.UserGroup Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.CallRolesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CallRolesKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_callRoleId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_callRoleId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CallRolesKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.GetByCallRoleId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_CallRoles index.
            </summary>
            <param name="_callRoleId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CallRoles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.GetByCallRoleId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CallRoles index.
            </summary>
            <param name="_callRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CallRoles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.GetByCallRoleId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CallRoles index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_callRoleId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CallRoles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.GetByCallRoleId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CallRoles index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_callRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CallRoles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.GetByCallRoleId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CallRoles index.
            </summary>
            <param name="_callRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CallRoles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.GetByCallRoleId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CallRoles index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_callRoleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CallRoles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.CallRoles},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;CallRoles&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.CallRoles)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.CallRoles"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.CallRoles"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.CallRoles)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.CallRoles"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.CallRoles"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CallRoles,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.CallRoles"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.CallRoles Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CallRoles,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.CallRoles object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.CallRoles instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.CallRoles Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CallRolesChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.CallRoles</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CallRolesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.CallRoles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CallRolesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CallRolesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CallRolesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CallRolesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.CallRoles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CallRolesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CallRolesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CallRolesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CallRolesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.CallRoles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CallRolesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CallRolesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.ExpressionParserBase">
            <summary>
            Provides the base functionality required to parse search terms.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ExpressionParserBase.#ctor(System.String,GE.MyLearning.DL.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the ExpressionParserBase class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:GE.MyLearning.DL.ExpressionParserBase.ParseCore(System.String)">
            <summary>
            Appends the specified search text to the current expression.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="M:GE.MyLearning.DL.ExpressionParserBase.ParseQuotes(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Parses quoted search terms.
            </summary>
            <param name="searchText"></param>
            <param name="quotedValues"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ExpressionParserBase.IsKeyWord(System.String)">
            <summary>
            Determines whether the specified word is a reserved keyword.
            </summary>
            <param name="word"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ExpressionParserBase.AppendOr">
            <summary>
            Appends an OR expression.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ExpressionParserBase.AppendAnd">
            <summary>
            Appends an AND expression.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ExpressionParserBase.AppendSpace">
            <summary>
            Appends an expression separator.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ExpressionParserBase.OpenGrouping">
            <summary>
            Appends a group opened expression.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ExpressionParserBase.CloseGrouping">
            <summary>
            Appends a group closed expression.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ExpressionParserBase.AppendSearchText(System.String)">
            <summary>
            Appends the specified search text to the expression.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="F:GE.MyLearning.DL.ExpressionParserBase.ignoreCase">
            <summary>
            The IgnoreCase member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.ExpressionParserBase.propertyName">
            <summary>
            The PropertyName member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.ExpressionParserBase.comparisonType">
            <summary>
            The ComparisonType member variable.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.ExpressionParserBase.IgnoreCase">
            <summary>
            Gets or sets the IgnoreCase property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.ExpressionParserBase.PropertyName">
            <summary>
            Gets or sets the PropertyName property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.ExpressionParserBase.ComparisonType">
            <summary>
            Gets or sets the ComparisonType property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRightsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuRightsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuRightsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuRightsKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuRightsKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_rights index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRights"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_rights index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRights"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_rights index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRights"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_rights index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRights"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_rights index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRights"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_rights index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRights"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuRights},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuRights&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuRights)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuRights"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuRights"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuRights)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuRights"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuRights"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuRights,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuRights"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuRights Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuRights,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuRights object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuRights instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuRights Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlScoreProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlScoreKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlScoreKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_score index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScore"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_score index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScore"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_score index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScore"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_score index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScore"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_score index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScore"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_score index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlScore"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlScore},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlScore&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlScore)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlScore"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlScore"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlScore)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlScore"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlScore"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlScore,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlScore"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlScore Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlScore,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlScore object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlScore instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlScore Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoreChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlScore</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoreFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlScore"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlScoreFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoreFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoreFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoreParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlScore"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlScoreParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoreParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoreParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoreSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlScore"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlScoreSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlScoreSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogaryExpertsKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogaryExpertsKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_Catogary_Experts index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_Catogary_Experts index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_Catogary_Experts index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_Catogary_Experts index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_Catogary_Experts index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_Catogary_Experts index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuCatogaryExperts},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuCatogaryExperts&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuCatogaryExperts)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuCatogaryExperts)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogaryExperts,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuCatogaryExperts Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogaryExperts,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuCatogaryExperts object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuCatogaryExperts instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuCatogaryExperts Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryExpertsChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuCatogaryExperts</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryExpertsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryExpertsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryExpertsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryExpertsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuCatogaryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogaryKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogaryKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_catogary index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogary"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_catogary index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogary"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_catogary index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogary"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_catogary index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogary"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_catogary index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogary"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_catogary index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogary"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuCatogary},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuCatogary&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuCatogary)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuCatogary"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuCatogary"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuCatogary)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuCatogary"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuCatogary"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogary,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuCatogary"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuCatogary Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogary,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuCatogary object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuCatogary instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuCatogary Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuCatogary</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogary"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogary"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogarySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogary"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogarySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuCatogarySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuGroupItemProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuGroupItemKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuGroupItemKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_GroupItem index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupItem"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_GroupItem index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupItem"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_GroupItem index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupItem"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_GroupItem index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupItem"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_GroupItem index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupItem"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_GroupItem index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupItem"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuGroupItem},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuGroupItem&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuGroupItem)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuGroupItem)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuGroupItem,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuGroupItem Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuGroupItem,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuGroupItem object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuGroupItem instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuGroupItem Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupItemChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuGroupItem</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupItemFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuGroupItemFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupItemFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupItemFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupItemParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuGroupItemParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupItemParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupItemParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupItemSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupItemSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuGroupItemSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.PermissionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.PermissionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.PermissionKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_permissionId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_permissionId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.PermissionKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.GetByPermissionId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Permission index.
            </summary>
            <param name="_permissionId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Permission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.GetByPermissionId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Permission index.
            </summary>
            <param name="_permissionId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Permission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.GetByPermissionId(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_Permission index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_permissionId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Permission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.GetByPermissionId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Permission index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_permissionId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Permission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.GetByPermissionId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Permission index.
            </summary>
            <param name="_permissionId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Permission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.GetByPermissionId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Permission index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_permissionId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Permission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Permission},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Permission&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Permission)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Permission"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Permission"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Permission)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Permission"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Permission"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Permission,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Permission"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Permission Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Permission,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Permission object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Permission instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Permission Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.PermissionChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Permission</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.PermissionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Permission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the PermissionFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PermissionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PermissionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.PermissionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Permission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the PermissionParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PermissionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PermissionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.PermissionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Permission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.PermissionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the PermissionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.StudentsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.StudentsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.StudentsKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_studentId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_studentId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.StudentsKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.GetByStudentId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key XPKStudents index.
            </summary>
            <param name="_studentId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Students"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.GetByStudentId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKStudents index.
            </summary>
            <param name="_studentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Students"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.GetByStudentId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKStudents index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_studentId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Students"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.GetByStudentId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKStudents index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_studentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Students"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.GetByStudentId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKStudents index.
            </summary>
            <param name="_studentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Students"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.GetByStudentId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKStudents index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_studentId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Students"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Students},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Students&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Students)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Students"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Students"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Students)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Students"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Students"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Students,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Students"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Students Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Students,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Students object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Students instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Students Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.UserInfoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserInfoKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_userId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserInfoKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.GetByUserId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_UserInfo index.
            </summary>
            <param name="_userId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.GetByUserId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfo index.
            </summary>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.GetByUserId(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfo index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.GetByUserId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfo index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.GetByUserId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfo index.
            </summary>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.GetByUserId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_UserInfo index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_userId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.UserInfo"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.UserInfo},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;UserInfo&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.UserInfo)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.UserInfo"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.UserInfo"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.UserInfo)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.UserInfo"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.UserInfo"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserInfo,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.UserInfo"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.UserInfo Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.UserInfo,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.UserInfo object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.UserInfo instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.UserInfo Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserInfoChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.UserInfo</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserInfoFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserInfoFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserInfoParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserInfoParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserInfoSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserInfoSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserInfoSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserGroupPermissionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwUserGroupPermissionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EntityViewProviderBase`1">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityViewProvider&lt;Entity&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
            <remarks>
            This file is generated once and will never be overwritten.
            </remarks>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1">
            <summary>
            Serves as the base class for objects that provide data access functionality.
            Provides a default implementation of the IEntityViewProvider&lt;Entity&gt; interface.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
        </member>
        <member name="T:GE.MyLearning.DL.IEntityViewProvider`1">
            <summary>
            Defines the common data access methods that can be used by the
            ReadOnlyDataSource control to interact with the underlying data store.
            </summary>
            <typeparam name="Entity">The class of the business object being accessed.</typeparam>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityViewProvider`1.Get(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityViewProvider`1.GetPaged(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityViewProvider`1.GetAll(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.IEntityViewProvider`1.Find(GE.MyLearning.DL.TransactionManager,GE.MyLearning.DL.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetAll">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks>Uses connection string object was created with.</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetAll(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks>Uses connection string object was created with.</remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetAll(GE.MyLearning.DL.TransactionManager)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetAll(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetAll(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets All rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(GE.MyLearning.DL.TransactionManager)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(GE.MyLearning.DL.TransactionManager,System.String,System.String)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Get(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of rows in the data source.</param>
            <remarks></remarks>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetPaged(System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetPaged(GE.MyLearning.DL.TransactionManager,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetPaged(System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetPaged(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetPaged(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetPaged(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets a page of rows from the DataSource.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC).</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns a VList of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetTotalItems(System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.GetTotalItems(GE.MyLearning.DL.TransactionManager,System.String,System.Int32@)">
            <summary>
            Gets the number of rows in the DataSource that match the specified whereClause.
            </summary>
            <param name="mgr">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="whereClause">Specifies the condition for the rows returned by a query (Name='John Doe', Name='John Doe' AND Id='1', Name='John Doe' OR Id='1').</param>
            <param name="count">Number of rows in the DataSource.</param>
            <returns>Returns the number of rows.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Find(GE.MyLearning.DL.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Find(GE.MyLearning.DL.IFilterParameterCollection,GE.MyLearning.DL.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:GE.MyLearning.DL.SqlSortColumn"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Find(GE.MyLearning.DL.TransactionManager,GE.MyLearning.DL.IFilterParameterCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Find(GE.MyLearning.DL.TransactionManager,GE.MyLearning.DL.IFilterParameterCollection,GE.MyLearning.DL.ISortColumnCollection)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:GE.MyLearning.DL.SqlSortColumn"/> objects.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Find(GE.MyLearning.DL.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Find(GE.MyLearning.DL.TransactionManager,GE.MyLearning.DL.IFilterParameterCollection,System.String)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Find(GE.MyLearning.DL.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Find(GE.MyLearning.DL.IFilterParameterCollection,GE.MyLearning.DL.ISortColumnCollection,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter and sort conditions.
            </summary>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.</param>
            <param name="sortColumns">A collection of <see cref="T:GE.MyLearning.DL.SqlSortColumn"/> objects.</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EntityViewProviderBaseCore`1.Find(GE.MyLearning.DL.TransactionManager,GE.MyLearning.DL.IFilterParameterCollection,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Returns rows from the DataSource that meet the parameter conditions.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="parameters">A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.</param>
            <param name="orderBy">Specifies the sort criteria for the rows in the DataSource (Name ASC; BirthDay DESC, Name ASC);</param>
            <param name="start">Row number at which to start reading.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out. The number of rows that match this query.</param>
            <returns>Returns a typed collection of Entity objects.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupPermissionProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwUserGroupPermission},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupPermissionProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwUserGroupPermission)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwUserGroupPermission"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwUserGroupPermission"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserGroupPermissionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserGroupPermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupPermissionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupPermissionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupPermissionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserGroupPermissionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserGroupPermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupPermissionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupPermissionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupPermissionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserGroupPermissionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserGroupPermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupPermissionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwTrainingUserLogProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwTrainingUserLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwTrainingUserLogProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwTrainingUserLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserLogProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwTrainingUserLog},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserLogProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwTrainingUserLog)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwTrainingUserLog"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwTrainingUserLog"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwMenuPermissionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwMenuPermissionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwMenuPermissionProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwMenuPermission},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwMenuPermissionProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwMenuPermission)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwMenuPermission"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwMenuPermission"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwMenuPermissionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwMenuPermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwMenuPermissionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwMenuPermissionFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwMenuPermissionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwMenuPermissionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwMenuPermissionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwMenuPermissionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwMenuPermissionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwMenuPermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwMenuPermissionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwMenuPermissionParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwMenuPermissionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwMenuPermissionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwMenuPermissionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwMenuPermissionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwMenuPermissionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwMenuPermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwMenuPermissionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwMenuPermissionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwEvlUserProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwEvlUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwEvlUserProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwEvlUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwEvlUserProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwEvlUser},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwEvlUserProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwEvlUser)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwEvlUser"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwEvlUser"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVScoreProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlVScoreProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVScoreProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlVScoreProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVScoreProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.EvlVScore},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVScoreProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlVScore)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlVScore"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlVScore"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.DeepLoadType">
            <summary>
            DeepLoad options for deep loading entities
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.DeepLoadType.IncludeChildren">
            <summary>
            Will Include a child property collection 1 Level Deep
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.DeepLoadType.ExcludeChildren">
            <summary>
            Will Exclude a child property collection
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.DeepLoadType.Ignore">
            <summary>
            Will ignore the request and return the entity.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.DeepSaveType">
            <summary>
            DeepSave options for deep saving entities
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.DeepSaveType.IncludeChildren">
            <summary>Will Include a child property collection</summary>
        </member>
        <member name="F:GE.MyLearning.DL.DeepSaveType.ExcludeChildren">
            <summary>Will Exclude a child property collection</summary>
        </member>
        <member name="F:GE.MyLearning.DL.DeepSaveType.Ignore">
            <summary>Will ignore the request and return the entity.</summary>
        </member>
        <member name="T:GE.MyLearning.DL.Utility">
            <summary>
            Contains some helper function for SQL.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.GetDefaultByType(System.Data.DbType)">
            <summary>
            Get a default value for a given data type
            </summary>
            <param name="dataType">Data type for which to get the default value</param>
            <returns>An object of the default value.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.GetDataValue(System.Data.IDataParameter)">
            <summary>
            Get Value or Default Value from an IDataParamater
            Based on DbType
            </summary>
            <param name="p">The IDataParameter instance type is used to determine the default value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.DefaultToDBNull(System.Object,System.Data.DbType)">
            <summary>
            Checks to see if the Default Value has been set to the parameter.
            If it's the default value, then create.
            </summary>
            <param name="val">The value we want to check.</param>
            <param name="dbtype">The DbType from wich we take the default value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.GetParameterValue``1(System.Data.IDataParameter)">
            <summary>
            Generic method to return the value of a nullable parameter
            </summary>
            <typeparam name="T">Type of value to return</typeparam>
            <param name="parameter">Parameter from which to extract the value</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.ConvertDataReaderToDataSet(System.Data.IDataReader)">
            <summary>
            Converts a IDataReader to a DataSet.  For use when a custom stored procedure returns an <see cref="T:System.Data.IDataReader"/>, it will 
            convert all result sets returned as a DataSet.
            </summary>
            <param name="reader">The reader to convert</param>
            <returns>A dataset with one table per result in the reader</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.DetectSqlInjection(System.String)">
            <summary>
            A helper method to attempt to discover known SqlInjection attacks.  
            For use when using one of the flexible non-parameterized access methods, such as GetPaged()
            </summary>
            <param name="whereClause">string of the whereClause to check</param>
            <returns>true if found, false if not found </returns>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.DetectSqlInjection(System.String,System.String)">
            <summary>
            A helper method to attempt to discover known SqlInjection attacks.  
            For use when using one of the flexible non-parameterized access methods, such as GetPaged()
            </summary>
            <param name="whereClause">string of the whereClause to check</param>
            <param name="orderBy">string of the orderBy clause to check</param>
            <returns>true if found, false if not found </returns>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.ParseSortExpression(System.Type,System.String)">
            <summary>
            Parses the supplied sort expression parameter to verify that it
            matches the specifed column name enumeration.
            </summary>
            <param name="columnEnum"></param>
            <param name="sortExpression"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.ExecuteReader(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns an <see cref="T:System.Data.IDataReader"/> through which the result can be read. 
            It is the responsibility of the caller to close the connection and reader when finished. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> object.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.ExecuteReader(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns an <see cref="T:System.Data.IDataReader"/> through which the result can be read. 
            It is the responsibility of the caller to close the connection and reader when finished. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>An <see cref="T:System.Data.IDataReader"/> object.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.ExecuteNonQuery(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the number of rows affected. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.ExecuteNonQuery(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the number of rows affected. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.ExecuteDataSet(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.ExecuteDataSet(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the results in a new <see cref="T:System.Data.DataSet"/>. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.ExecuteScalar(GE.MyLearning.DL.TransactionManager,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returns the scalar object. 
            </summary>
            <param name="transactionManager">The transaction to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>The number of rows affected.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.DataException">The <paramref name="transactionManager"/> is not open.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Utility.ExecuteScalar(Microsoft.Practices.EnterpriseLibrary.Data.Database,System.Data.Common.DbCommand)">
            <summary>
            Executes the <paramref name="dbCommand"/> and returnsthe scalar object. 
            </summary>
            <param name="database">The database to execute the command within.</param>
            <param name="dbCommand">The command that contains the query to execute.</param>
            <returns>A <see cref="T:System.Data.DataSet"/> containing the results of the command.</returns>
            <exception cref="T:System.Exception">The command could not be executed.</exception>
            <exception cref="T:System.Data.Common.DbException">The command could not be executed.</exception>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviorProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlBehaviorProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlBehaviorProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlBehaviorKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlBehaviorKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_Behavior index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehavior"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_Behavior index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehavior"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_Behavior index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehavior"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_Behavior index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehavior"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_Behavior index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehavior"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_Behavior index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehavior"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlBehavior},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlBehavior&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlBehavior)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlBehavior)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlBehavior,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlBehavior Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlBehavior,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlBehavior object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlBehavior instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlBehavior Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.LoginLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LoginLogKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.Delete(System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_loginLogId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_loginLogId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LoginLogKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.GetByLoginLogId(System.Int64)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_LoginLog index.
            </summary>
            <param name="_loginLogId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LoginLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.GetByLoginLogId(System.Int64,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_LoginLog index.
            </summary>
            <param name="_loginLogId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LoginLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.GetByLoginLogId(GE.MyLearning.DL.TransactionManager,System.Int64)">
            <summary>
            	Gets rows from the datasource based on the PK_LoginLog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_loginLogId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LoginLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.GetByLoginLogId(GE.MyLearning.DL.TransactionManager,System.Int64,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_LoginLog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_loginLogId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LoginLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.GetByLoginLogId(System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_LoginLog index.
            </summary>
            <param name="_loginLogId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LoginLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.GetByLoginLogId(GE.MyLearning.DL.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_LoginLog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_loginLogId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LoginLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.LoginLog},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;LoginLog&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.LoginLog)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.LoginLog"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.LoginLog"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.LoginLog)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.LoginLog"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.LoginLog"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LoginLog,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.LoginLog"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.LoginLog Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LoginLog,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.LoginLog object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.LoginLog instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.LoginLog Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LoginLogChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.LoginLog</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LoginLogFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LoginLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LoginLogFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoginLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoginLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LoginLogParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LoginLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LoginLogParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoginLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoginLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LoginLogSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LoginLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LoginLogSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the LoginLogSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.NoticesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.NoticesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.NoticesKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_noticeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_noticeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.NoticesKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.GetByNoticeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Notices index.
            </summary>
            <param name="_noticeId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Notices"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.GetByNoticeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Notices index.
            </summary>
            <param name="_noticeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Notices"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.GetByNoticeId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Notices index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_noticeId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Notices"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.GetByNoticeId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Notices index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_noticeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Notices"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.GetByNoticeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Notices index.
            </summary>
            <param name="_noticeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Notices"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.GetByNoticeId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Notices index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_noticeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Notices"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Notices},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Notices&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Notices)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Notices"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Notices"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Notices)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Notices"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Notices"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Notices,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Notices"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Notices Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Notices,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Notices object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Notices instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Notices Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.NoticesChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Notices</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.NoticesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Notices"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NoticesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NoticesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NoticesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.NoticesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Notices"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the NoticesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NoticesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NoticesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.NoticesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Notices"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NoticesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the NoticesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuFriendshipProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuFriendshipProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuFriendshipProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuFriendshipKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuFriendshipKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_vu_friendship index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuFriendship"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_vu_friendship index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuFriendship"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_vu_friendship index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuFriendship"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_vu_friendship index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuFriendship"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_vu_friendship index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuFriendship"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_vu_friendship index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuFriendship"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuFriendship},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuFriendship&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuFriendship)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuFriendship"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuFriendship"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuFriendship)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuFriendship"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuFriendship"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuFriendship,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuFriendship"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuFriendship Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuFriendship,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuFriendship object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuFriendship instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuFriendship Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.StudentCourseRelationKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_autoId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_autoId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.StudentCourseRelationKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.GetByAutoId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key XPKStudentCourseRelation index.
            </summary>
            <param name="_autoId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.GetByAutoId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKStudentCourseRelation index.
            </summary>
            <param name="_autoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.GetByAutoId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKStudentCourseRelation index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_autoId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.GetByAutoId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKStudentCourseRelation index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_autoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.GetByAutoId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKStudentCourseRelation index.
            </summary>
            <param name="_autoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.GetByAutoId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKStudentCourseRelation index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_autoId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.StudentCourseRelation},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;StudentCourseRelation&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.StudentCourseRelation)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.StudentCourseRelation)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.StudentCourseRelation,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.StudentCourseRelation Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.StudentCourseRelation,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.StudentCourseRelation object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.StudentCourseRelation instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.StudentCourseRelation Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.RolesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.RolesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.RolesKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_roleId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_roleId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.RolesKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.GetByRoleId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Roles index.
            </summary>
            <param name="_roleId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Roles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.GetByRoleId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Roles index.
            </summary>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Roles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.GetByRoleId(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_Roles index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_roleId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Roles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.GetByRoleId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Roles index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Roles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.GetByRoleId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Roles index.
            </summary>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Roles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.GetByRoleId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Roles index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Roles"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Roles},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Roles&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Roles)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Roles"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Roles"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Roles)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Roles"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Roles"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Roles,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Roles"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Roles Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Roles,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Roles object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Roles instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Roles Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingLogProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.TrainingLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.TrainingLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TrainingLogKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.Delete(System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_trainingLogId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_trainingLogId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TrainingLogKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.GetByTrainingLogId(System.Int64)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_TrainingLog index.
            </summary>
            <param name="_trainingLogId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.GetByTrainingLogId(System.Int64,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TrainingLog index.
            </summary>
            <param name="_trainingLogId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.GetByTrainingLogId(GE.MyLearning.DL.TransactionManager,System.Int64)">
            <summary>
            	Gets rows from the datasource based on the PK_TrainingLog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_trainingLogId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.GetByTrainingLogId(GE.MyLearning.DL.TransactionManager,System.Int64,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TrainingLog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_trainingLogId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.GetByTrainingLogId(System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TrainingLog index.
            </summary>
            <param name="_trainingLogId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.GetByTrainingLogId(GE.MyLearning.DL.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TrainingLog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_trainingLogId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.TrainingLog},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;TrainingLog&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.TrainingLog)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.TrainingLog"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.TrainingLog"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.TrainingLog)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.TrainingLog"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.TrainingLog"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TrainingLog,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.TrainingLog"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.TrainingLog Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TrainingLog,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.TrainingLog object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.TrainingLog instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.TrainingLog Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwInstituteDegreeStudents},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwInstituteDegreeStudents)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudents"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudents"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LearningRecordExcelKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LearningRecordExcelKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK__Learning__3214EC2770761189 index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK__Learning__3214EC2770761189 index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK__Learning__3214EC2770761189 index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK__Learning__3214EC2770761189 index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Learning__3214EC2770761189 index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Learning__3214EC2770761189 index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.LearningRecordExcel},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;LearningRecordExcel&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.LearningRecordExcel)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.LearningRecordExcel)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LearningRecordExcel,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.LearningRecordExcel Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LearningRecordExcel,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.LearningRecordExcel object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.LearningRecordExcel instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.LearningRecordExcel Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LearningRecordCsvKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LearningRecordCsvKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK__Learning__3214EC277446A26D index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK__Learning__3214EC277446A26D index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK__Learning__3214EC277446A26D index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK__Learning__3214EC277446A26D index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Learning__3214EC277446A26D index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK__Learning__3214EC277446A26D index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.LearningRecordCsv},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;LearningRecordCsv&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.LearningRecordCsv)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.LearningRecordCsv)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LearningRecordCsv,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.LearningRecordCsv Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.LearningRecordCsv,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.LearningRecordCsv object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.LearningRecordCsv instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.LearningRecordCsv Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordCsvChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.LearningRecordCsv</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordCsvFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordCsvFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordCsvFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordCsvFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordCsvParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordCsvParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordCsvParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordCsvParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordCsvSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordCsvSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordCsvSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviorChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlBehavior</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviorFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviorFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviorFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviorFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviorParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviorParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviorParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviorParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviorSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviorSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviorSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuReplypostProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuReplypostKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_ids">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_ids">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuReplypostKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.GetByIds(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_REPLYPOST index.
            </summary>
            <param name="_ids"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuReplypost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.GetByIds(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_REPLYPOST index.
            </summary>
            <param name="_ids"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuReplypost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.GetByIds(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_REPLYPOST index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_ids"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuReplypost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.GetByIds(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_REPLYPOST index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_ids"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuReplypost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.GetByIds(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_REPLYPOST index.
            </summary>
            <param name="_ids"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuReplypost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.GetByIds(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_REPLYPOST index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_ids"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuReplypost"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuReplypost},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuReplypost&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuReplypost)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuReplypost"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuReplypost"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuReplypost)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuReplypost"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuReplypost"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuReplypost,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuReplypost"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuReplypost Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuReplypost,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuReplypost object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuReplypost instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuReplypost Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuReplypostChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuReplypost</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuReplypostFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuReplypost"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuReplypostFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuReplypostFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuReplypostFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuReplypostParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuReplypost"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuReplypostParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuReplypostParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuReplypostParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuReplypostSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuReplypost"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuReplypostSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuReplypostSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserInfoProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.UserInfoProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwStudentCourseRelationProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwStudentCourseRelationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentCourseRelationProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwStudentCourseRelation},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentCourseRelationProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwStudentCourseRelation)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwStudentCourseRelation"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwStudentCourseRelation"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwStudentCourseRelationFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwStudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentCourseRelationFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentCourseRelationFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentCourseRelationFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwStudentCourseRelationParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwStudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentCourseRelationParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentCourseRelationParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentCourseRelationParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwStudentCourseRelationSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwStudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentCourseRelationSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwEvlUserFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwEvlUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwEvlUserFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwEvlUserFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwEvlUserFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwEvlUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwEvlUserFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwEvlUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwEvlUserParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwEvlUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwEvlUserParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwEvlUserParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwEvlUserParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwEvlUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwEvlUserParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwEvlUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwEvlUserSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwEvlUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwEvlUserSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwEvlUserSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.EvlVLearningRecordCsv},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlVLearningRecordCsv)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsv"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsv"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.SqlUtil">
            <summary>
            Provides utility methods for generating SQL expressions.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.AND">
            <summary>
            SQL AND keyword.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.OR">
            <summary>
            SQL OR keyword.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.ASC">
            <summary>
            SQL ASC keyword.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.DESC">
            <summary>
            SQL DESC keyword.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.NULL">
            <summary>
            SQL NULL keyword.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.TOKEN">
            <summary>
            Used to represent quoted search terms.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.QUOTE">
            <summary>
            Delimiter for quoted search terms.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.STAR">
            <summary>
            Used as wildcard character within search text.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.WILD">
            <summary>
            SQL wildcard character.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.LEFT">
            <summary>
            SQL grouping open character.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.RIGHT">
            <summary>
            SQL grouping close character.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.COMMA">
            <summary>
            Delimiter for optional search terms.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlUtil.PAGE_INDEX">
            <summary>
            PageIndex Temp Table
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Equals(System.String,System.String)">
            <summary>
            Creates an <see cref="F:GE.MyLearning.DL.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates an <see cref="F:GE.MyLearning.DL.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Equals(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates an <see cref="F:GE.MyLearning.DL.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Equals(System.String)">
            <summary>
            Encodes the value for a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Contains(System.String,System.String)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Contains(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Contains(System.String)">
            <summary>
            Encodes the value for a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.NotContains(System.String,System.String)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.NotContains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.NotContains(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.NotContains(System.String)">
            <summary>
            Encodes the value for a <see cref="F:GE.MyLearning.DL.SqlComparisonType.NotContains"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.StartsWith(System.String,System.String)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.StartsWith(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.StartsWith(System.String)">
            <summary>
            Encodes the value for a <see cref="F:GE.MyLearning.DL.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.EndsWith(System.String,System.String)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.EndsWith(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.EndsWith(System.String)">
            <summary>
            Encodes the value for a <see cref="F:GE.MyLearning.DL.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Like(System.String,System.String)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Like(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Like(System.String)">
            <summary>
            Encodes the value for a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.NotLike(System.String,System.String)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.NotLike(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.NotLike(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.NotLike(System.String)">
            <summary>
            Encodes the value for a <see cref="F:GE.MyLearning.DL.SqlComparisonType.NotLike"/> expression.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.IsNull(System.String)">
            <summary>
            Creates an IS NULL expression.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.IsNotNull(System.String)">
            <summary>
            Creates an IS NOT NULL expression.
            </summary>
            <param name="column"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Encode(System.String)">
            <summary>
            Encodes the specified value for use in SQL expressions.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Encode(System.String,System.Boolean)">
            <summary>
            Encodes the specified value for use in SQL expressions and
            optionally surrounds the value with single-quotes.
            </summary>
            <param name="value"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Encode(System.String[])">
            <summary>
            Encodes the specified values for use in SQL expressions.
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.Encode(System.String[],System.Boolean)">
            <summary>
            Encodes the specified values for use in SQL expressions and
            optionally surrounds the value with single-quotes.
            </summary>
            <param name="values"></param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.GetLikeFormat(System.Boolean)">
            <summary>
            Gets the like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.GetLikeFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.GetNotLikeFormat(System.Boolean)">
            <summary>
            Gets the not like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.GetNotLikeFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the not like format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.GetEqualFormat(System.Boolean)">
            <summary>
            Gets the equal format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlUtil.GetEqualFormat(System.Boolean,System.Boolean)">
            <summary>
            Gets the equal format string.
            </summary>
            <param name="ignoreCase">if set to <c>true</c> [ignore case].</param>
            <param name="surround"></param>
            <returns></returns>
        </member>
        <member name="T:GE.MyLearning.DL.SqlComparisonType">
            <summary>
            Enumeration of SQL expression comparison types.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlComparisonType.Equals">
            <summary>
            Represents = value.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlComparisonType.StartsWith">
            <summary>
            Represents LIKE value%.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlComparisonType.EndsWith">
            <summary>
            Represents LIKE %value.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlComparisonType.Contains">
            <summary>
            Represents LIKE %value%.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlComparisonType.NotContains">
            <summary>
            Represents NOT LIKE %value%.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlComparisonType.Like">
            <summary>
            Represents LIKE value.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlComparisonType.NotLike">
            <summary>
            Represents NOT LIKE value.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.SqlFilterType">
            <summary>
            Enumeration of SQL Filter Types.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlFilterType.Word">
            <summary>
            Represents an Individual Word filter
            </summary>
            <example>(if using <see cref="F:GE.MyLearning.DL.SqlComparisonType.Contains"/>) CompanyName LIKE "%Acme" AND CompanyName LIKE "Company%"</example>
        </member>
        <member name="F:GE.MyLearning.DL.SqlFilterType.Phrase">
            <summary>
            Represents a Phrase filter
            </summary>
            <example>(if using <see cref="F:GE.MyLearning.DL.SqlComparisonType.Contains"/>) CompanyName LIKE "%Acme Company%"</example>
        </member>
        <member name="T:GE.MyLearning.DL.SqlSortDirection">
            <summary>
            Enumeration of SQL expression Sort Directions
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlSortDirection.ASC">
            <summary>
            Database Ascending
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlSortDirection.DESC">
            <summary>
            Database Descending
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.NetTiersServiceSection">
            <summary>
            The class that hold the configuration section for the NetTiers Service.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersServiceSection.Providers">
            <summary>
            Gets the providers.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersServiceSection.DefaultProvider">
            <summary>
            Gets or sets the default provider.
            </summary>
            <value>The default provider.</value>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.GroupsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.GroupsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.GroupsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.GroupsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.GroupsKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_groupId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_groupId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.GroupsKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.GetByGroupId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key XPKGroups index.
            </summary>
            <param name="_groupId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Groups"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.GetByGroupId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKGroups index.
            </summary>
            <param name="_groupId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Groups"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.GetByGroupId(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the XPKGroups index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_groupId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Groups"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.GetByGroupId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKGroups index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_groupId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Groups"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.GetByGroupId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKGroups index.
            </summary>
            <param name="_groupId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Groups"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.GetByGroupId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKGroups index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_groupId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Groups"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Groups},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Groups&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Groups)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Groups"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Groups"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Groups)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Groups"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Groups"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Groups,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Groups"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Groups Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Groups,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Groups object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Groups instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Groups Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.DegreeApplyProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DegreeApplyKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_degreeApplyId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeApplyId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DegreeApplyKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.GetByDegreeApplyId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_DegreeApply index.
            </summary>
            <param name="_degreeApplyId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeApply"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.GetByDegreeApplyId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_DegreeApply index.
            </summary>
            <param name="_degreeApplyId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeApply"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.GetByDegreeApplyId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_DegreeApply index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeApplyId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeApply"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.GetByDegreeApplyId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_DegreeApply index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeApplyId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeApply"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.GetByDegreeApplyId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DegreeApply index.
            </summary>
            <param name="_degreeApplyId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeApply"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.GetByDegreeApplyId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_DegreeApply index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeApplyId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeApply"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.DegreeApply},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;DegreeApply&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.DegreeApply)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.DegreeApply"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.DegreeApply"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.DegreeApply)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.DegreeApply"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.DegreeApply"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DegreeApply,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.DegreeApply"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.DegreeApply Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DegreeApply,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.DegreeApply object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.DegreeApply instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.DegreeApply Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeApplyChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.DegreeApply</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeApplyFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.DegreeApply"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DegreeApplyFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeApplyFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeApplyFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeApplyParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.DegreeApply"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DegreeApplyParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeApplyParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplyParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeApplyParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeApplySortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.DegreeApply"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeApplySortBuilder.#ctor">
            <summary>
            Initializes a new instance of the DegreeApplySqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DepartmentChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Department</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DepartmentFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Department"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DepartmentFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DepartmentParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Department"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DepartmentParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DepartmentSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Department"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DepartmentSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the DepartmentSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.NoticesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.NoticesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogaryManagerKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogaryManagerKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_Catogary_Manager index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_Catogary_Manager index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_Catogary_Manager index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_Catogary_Manager index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_Catogary_Manager index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_Catogary_Manager index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuCatogaryManager},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuCatogaryManager&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuCatogaryManager)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuCatogaryManager)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogaryManager,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuCatogaryManager Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuCatogaryManager,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuCatogaryManager object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuCatogaryManager instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuCatogaryManager Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlScoredescriptionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.InstitutesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.InstitutesKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_instituteId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_instituteId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.InstitutesKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.GetByInstituteId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key XPKInstitutes index.
            </summary>
            <param name="_instituteId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Institutes"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.GetByInstituteId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKInstitutes index.
            </summary>
            <param name="_instituteId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Institutes"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.GetByInstituteId(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the XPKInstitutes index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_instituteId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Institutes"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.GetByInstituteId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKInstitutes index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_instituteId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Institutes"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.GetByInstituteId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKInstitutes index.
            </summary>
            <param name="_instituteId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Institutes"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.GetByInstituteId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKInstitutes index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_instituteId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Institutes"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Institutes},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Institutes&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Institutes)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Institutes"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Institutes"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Institutes)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Institutes"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Institutes"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Institutes,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Institutes"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Institutes Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Institutes,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Institutes object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Institutes instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Institutes Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.InstitutesChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Institutes</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.InstitutesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Institutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the InstitutesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the InstitutesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the InstitutesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.InstitutesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Institutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the InstitutesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the InstitutesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the InstitutesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.InstitutesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Institutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.InstitutesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the InstitutesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuCatogaryProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolePermissionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.RolePermissionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.RolePermissionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.RolePermissionKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.Delete(System.String,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_permissionId">. Primary Key.</param>
            <param name="_roleId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_permissionId">. Primary Key.</param>
            <param name="_roleId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.RolePermissionKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.GetByPermissionIdRoleId(System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key XPKRolePermission index.
            </summary>
            <param name="_permissionId"></param>
            <param name="_roleId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.RolePermission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.GetByPermissionIdRoleId(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKRolePermission index.
            </summary>
            <param name="_permissionId"></param>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.RolePermission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.GetByPermissionIdRoleId(GE.MyLearning.DL.TransactionManager,System.String,System.String)">
            <summary>
            	Gets rows from the datasource based on the XPKRolePermission index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_permissionId"></param>
            <param name="_roleId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.RolePermission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.GetByPermissionIdRoleId(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKRolePermission index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_permissionId"></param>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.RolePermission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.GetByPermissionIdRoleId(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKRolePermission index.
            </summary>
            <param name="_permissionId"></param>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.RolePermission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.GetByPermissionIdRoleId(GE.MyLearning.DL.TransactionManager,System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKRolePermission index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_permissionId"></param>
            <param name="_roleId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.RolePermission"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.RolePermission},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;RolePermission&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.RolePermission)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.RolePermission"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.RolePermission"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.RolePermission)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.RolePermission"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.RolePermission"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.RolePermission,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.RolePermission"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.RolePermission Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.RolePermission,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.RolePermission object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.RolePermission instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.RolePermission Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserGroupProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwUserGroupProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserGroupProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwUserGroupProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwUserGroup},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwUserGroup)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwUserGroup"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwUserGroup"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.EvlVLearningRecordExcel},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlVLearningRecordExcel)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcel"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcel"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.TransactionManager">
            <summary>
            TransactionManager is utility class that decorates a <see cref="T:System.Data.IDbTransaction"/> instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.ITransactionManager">
            <summary>
            TransactionManager interface
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ITransactionManager.BeginTransaction">
            <summary>
            Begins the transaction.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ITransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins the transaction.
            </summary>
            <param name="isolationLevel">The isolation level.</param>
        </member>
        <member name="M:GE.MyLearning.DL.ITransactionManager.Commit">
            <summary>
            Commits this instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ITransactionManager.Dispose">
            <summary>
            Disposes this instance.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ITransactionManager.Rollback">
            <summary>
            Rollbacks this instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.ITransactionManager.ConnectionString">
            <summary>
            Gets or sets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:GE.MyLearning.DL.ITransactionManager.Database">
            <summary>
            Gets the database.
            </summary>
            <value>The database.</value>
        </member>
        <member name="P:GE.MyLearning.DL.ITransactionManager.InvariantProviderName">
            <summary>
            Gets or sets the name of the invariant provider.
            </summary>
            <value>The name of the invariant provider.</value>
        </member>
        <member name="P:GE.MyLearning.DL.ITransactionManager.IsOpen">
            <summary>
            Gets a value indicating whether this instance is open.
            </summary>
            <value><c>true</c> if this instance is open; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:GE.MyLearning.DL.ITransactionManager.TransactionObject">
            <summary>
            Gets the transaction object.
            </summary>
            <value>The transaction object.</value>
        </member>
        <member name="M:GE.MyLearning.DL.TransactionManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.DL.TransactionManager"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.TransactionManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.DL.TransactionManager"/> class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
        </member>
        <member name="M:GE.MyLearning.DL.TransactionManager.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:GE.MyLearning.DL.TransactionManager"/> class.
            </summary>
            <param name="connectionString">The connection string to the database.</param>
            <param name="providerInvariantName">Name of the provider invariant.</param>
        </member>
        <member name="M:GE.MyLearning.DL.TransactionManager.BeginTransaction">
            <summary>
            Begins a transaction.
            </summary>
            <remarks>The default <see cref="T:System.Data.IsolationLevel"/> mode is ReadCommitted</remarks>
            <exception cref="T:System.InvalidOperationException">If a transaction is already open.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.TransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Begins a transaction.
            </summary>
            <param name="isolationLevel">The <see cref="T:System.Data.IsolationLevel"/> level of the transaction</param>
            <exception cref="T:System.InvalidOperationException">If a transaction is already open.</exception>
            <exception cref="T:System.Data.DataException"></exception>
            <exception cref="T:System.Data.Common.DbException"></exception>
        </member>
        <member name="M:GE.MyLearning.DL.TransactionManager.Commit">
            <summary>
            Commit the transaction to the datasource.
            </summary>
            <exception cref="T:System.InvalidOperationException">If a transaction is not open.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.TransactionManager.Rollback">
            <summary>
            Rollback the transaction.
            </summary>
            <exception cref="T:System.InvalidOperationException">If a transaction is not open.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.TransactionManager.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.TransactionManager.ConnectionString">
            <summary>
            Gets or sets the configuration key for database service.
            </summary>
            <remark>Do not change during a transaction.</remark>
            <exception cref="T:System.InvalidOperationException">
            If an attempt to set when the connection is currently open.
            </exception>
        </member>
        <member name="P:GE.MyLearning.DL.TransactionManager.InvariantProviderName">
            <summary>
            Gets or sets the name of the invariant provider.
            </summary>
            <value>The name of the invariant provider.</value>
        </member>
        <member name="P:GE.MyLearning.DL.TransactionManager.Database">
            <summary>
            Gets the <see cref="P:GE.MyLearning.DL.TransactionManager.Database"/> instance.
            </summary>
            <value></value>
        </member>
        <member name="P:GE.MyLearning.DL.TransactionManager.TransactionObject">
            <summary>
            Gets the underlying <see cref="T:System.Data.Common.DbTransaction"/> object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.TransactionManager.IsOpen">
            <summary>
            Gets a value that indicates if a transaction is currently open and operating. 
            </summary>
            <value>Return true if a transaction session is currently open and operating; otherwise false.</value>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlScoreProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlScoreProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.InstitutesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.InstitutesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.DegreeCoursesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DegreeCoursesKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_degreeCourseId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeCourseId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DegreeCoursesKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.GetByDegreeCourseId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key XPKInstituteCourses index.
            </summary>
            <param name="_degreeCourseId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeCourses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.GetByDegreeCourseId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKInstituteCourses index.
            </summary>
            <param name="_degreeCourseId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeCourses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.GetByDegreeCourseId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKInstituteCourses index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeCourseId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeCourses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.GetByDegreeCourseId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKInstituteCourses index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeCourseId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeCourses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.GetByDegreeCourseId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKInstituteCourses index.
            </summary>
            <param name="_degreeCourseId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeCourses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.GetByDegreeCourseId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKInstituteCourses index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeCourseId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.DegreeCourses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.DegreeCourses},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;DegreeCourses&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.DegreeCourses)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.DegreeCourses)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DegreeCourses,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.DegreeCourses Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DegreeCourses,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.DegreeCourses object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.DegreeCourses instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.DegreeCourses Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeCoursesChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.DegreeCourses</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeCoursesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DegreeCoursesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeCoursesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeCoursesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeCoursesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DegreeCoursesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeCoursesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeCoursesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeCoursesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreeCoursesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the DegreeCoursesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlBehaviordescriptionKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlBehaviordescriptionKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_behaviordescription index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_behaviordescription index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_behaviordescription index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_behaviordescription index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_behaviordescription index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_behaviordescription index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlBehaviordescription},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlBehaviordescription&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlBehaviordescription)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlBehaviordescription)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlBehaviordescription,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlBehaviordescription Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlBehaviordescription,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlBehaviordescription object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlBehaviordescription instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlBehaviordescription Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviordescriptionChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlBehaviordescription</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviordescriptionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviordescriptionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviordescriptionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlBehaviordescriptionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.MenusProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.MenusProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.MenusProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.MenusProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.MenusKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_menuId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_menuId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.MenusKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.GetByMenuId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key XPKMenus index.
            </summary>
            <param name="_menuId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Menus"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.GetByMenuId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKMenus index.
            </summary>
            <param name="_menuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Menus"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.GetByMenuId(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the XPKMenus index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_menuId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Menus"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.GetByMenuId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the XPKMenus index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_menuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Menus"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.GetByMenuId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKMenus index.
            </summary>
            <param name="_menuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Menus"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.GetByMenuId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the XPKMenus index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_menuId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Menus"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Menus},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Menus&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Menus)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Menus"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Menus"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Menus)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Menus"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Menus"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Menus,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Menus"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Menus Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Menus,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Menus object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Menus instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Menus Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserGroupChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.UserGroup</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserGroupFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserGroup"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserGroupFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserGroupFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserGroupFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserGroupParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserGroup"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserGroupParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserGroupParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserGroupParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserGroupSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserGroup"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.UserGroupSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the UserGroupSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwTrainingUserLogFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwTrainingUserLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserLogFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwTrainingUserLogFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserLogFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserLogFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwTrainingUserLogParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwTrainingUserLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserLogParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwTrainingUserLogParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserLogParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserLogParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwTrainingUserLogSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwTrainingUserLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserLogSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwTrainingUserLogSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.StringTokenizer">
            <summary>
            Implements a StringTokenizer class for splitting a string
            into substrings using a set of delimiters.
            </summary>
            <remarks>
            C# version of the java.util.StringTokenizer class.
            Basicly it's a wrapper class around the <c>String.Split</c> method.<pare/>
            It implements all of it's Java equivalent methods apart from those only needed by the Enumeration interface.
            All implemented Java-compilant methods have their C# equivalents in properties. They however differ in names
            since Java uses the (Hungarian-like) notation <c>runMe()</c> while C# uses Camel-cased <c>RunMe()</c> and thus
            Java's <c>nextToken()</c> method is just an alias of the <c>NextToken</c> property.
            </remarks>
        </member>
        <member name="F:GE.MyLearning.DL.StringTokenizer.DefaultDelimiters">
            <summary>
            String conatining the default set of delimiters which are <c>" \t\n\r\f"</c>:
            the space character, the tab character, the newline character, the carriage-return character, and the form-feed character.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.StringTokenizer.#ctor(System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the <see cref="F:DefaultDelimiters">default delimiters</see>.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:GE.MyLearning.DL.StringTokenizer.#ctor(System.String,System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:GE.MyLearning.DL.StringTokenizer.#ctor(System.String,System.Char[])">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string.</param>
        </member>
        <member name="M:GE.MyLearning.DL.StringTokenizer.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters and optionally returning them as tokens.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:GE.MyLearning.DL.StringTokenizer.#ctor(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters,
            optionally returning them as tokens. Also empty tokens may be returned using the <see cref="!:String.Empty"/> string.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <param name="returnEmpty">If set to <c>true</c> empty tokens will also be returned.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:GE.MyLearning.DL.StringTokenizer.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
            Constructs a string tokenizer for the specified string using the given delimiters,
            optionally returning them as tokens. Also empty tokens may be returned using the <paramref name="empty"/> string.
            </summary>
            <param name="str">The string to be tokenized.</param>
            <param name="delims">The delimiters used to tokenize the string (each <see cref="!:char"/> will be used as a delimiter).</param>
            <param name="returnDelims">If set to <c>true</c> the encountered delimiters will also be returned as tokens.</param>
            <param name="returnEmpty">If set to <c>true</c> empty tokens will also be returned.</param>
            <param name="empty">The string to be returned as an empty token.</param>
            <exception cref="T:System.NullReferenceException">Thrown when the passed string is <c>null</c></exception>
        </member>
        <member name="M:GE.MyLearning.DL.StringTokenizer.Reset">
            <summary>
            Resets the current position index so that the tokens can be extracted again.
            </summary>
            <remarks><see cref="!:Equivalent not available in Java!"/></remarks>
        </member>
        <member name="M:GE.MyLearning.DL.StringTokenizer.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="P:GE.MyLearning.DL.StringTokenizer.HasMoreTokens">
            <summary>
            Tests if there are more tokens available from this tokenizer's string.
            If this method returns <c>true</c>, then a subsequent
            use of the <see cref="P:NextToken"/> property will successfully return a token.
            </summary>
            <value>
            	<c>true</c> if more tokens are available; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:GE.MyLearning.DL.StringTokenizer.NextToken">
            <summary>
            Gets the next token.
            </summary>
            <value>The next token.</value>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when trying to get a token which doesn't exist.
            Usually caused by not checking if the <see cref="P:HasMoreTokens"/> property returns <c>true</c> before trying to get the next token.</exception>
        </member>
        <member name="P:GE.MyLearning.DL.StringTokenizer.CountTokens">
            <summary>
            Counts the <see cref="!:remaining"/> tokens - the number of times the
            <see cref="P:NextToken"/> property can be used before it throws an exception.
            </summary>
            <value>The number of remaining tokens.</value>
            <seealso cref="P:Count"/>
        </member>
        <member name="P:GE.MyLearning.DL.StringTokenizer.Count">
            <summary>
            Gets the total number of tokens extracted.
            </summary>
            <remarks>
            <see cref="!:Equivalent not available in Java!"/>
            This property returns the total number of extracted tokens,
            contrary to <see cref="P:CountTokens"/>.
            </remarks>
            <value>The number of tokens extracted.</value>
            <seealso cref="P:StringTokenizer.CountTokens"/>
        </member>
        <member name="P:GE.MyLearning.DL.StringTokenizer.Item(System.Int32)">
            <summary>
            Gets the token with the specified index from the tokenizer without moving the current position index.
            </summary>
            <remarks><see cref="!:Equivalent not available in Java!"/></remarks>
            <param name="index">The index of the token to get.</param>
            <value>The token with the given index</value>
            <exception cref="T:System.IndexOutOfRangeException">Thrown when trying to get a token which doesn't exist, that is when <see cref="!:index"/> is equal or greater then <see cref="!:Count"/> or <see cref="!:index"/> is negative.</exception>
        </member>
        <member name="P:GE.MyLearning.DL.StringTokenizer.EmptyString">
            <summary>
            Gets the currently set string for empty tokens.
            </summary>
            <remarks>Default is <c>System.String.Empty</c></remarks>
            <value>The empty token string.</value>
        </member>
        <member name="T:GE.MyLearning.DL.StringBuilderExpression">
            <summary>
            Represents a SQL filter builder expression enumeration.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.Append">
            <summary>
            Append
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendEquals">
            <summary>
            AppendEquals
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendNotEquals">
            <summary>
            AppendNotEquals
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendIn">
            <summary>
            AppendIn
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendNotIn">
            <summary>
            AppendNotIn
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendInQuery">
            <summary>
            AppendInQuery
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendNotInQuery">
            <summary>
            AppendNotInQuery
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendRange">
            <summary>
            AppendRange
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendNotRange">
            <summary>
            AppendNotRange
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendIsNull">
            <summary>
            AppendIsNull
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendIsNotNull">
            <summary>
            AppendIsNotNull
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendGreaterThan">
            <summary>
            AppendGreaterThan
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendGreaterThanOrEqual">
            <summary>
            AppendGreaterThanOrEqual
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendLessThan">
            <summary>
            AppendLessThan
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendLessThanOrEqual">
            <summary>
            AppendLessThanOrEqual
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendStartsWith">
            <summary>
            AppendStartsWith
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendEndsWith">
            <summary>
            AppendEndsWith
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendContains">
            <summary>
            AppendContains
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendNotContains">
            <summary>
            AppendNotContains
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendLike">
            <summary>
            AppendLike
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.StringBuilderExpression.AppendNotLike">
            <summary>
            AppendLike
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.SqlFilterParameterCollection">
            <summary>
            A collection of <see cref="T:GE.MyLearning.DL.SqlFilterParameter"/> objects.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterParameterCollection.SetCurrentColumn(System.Object)">
            <summary>
            Sets the CurrentColumn property.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterParameterCollection.GetParameter(System.String)">
            <summary>
            Gets the next parameter name for the specified value.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="F:GE.MyLearning.DL.SqlFilterParameterCollection.currentColumn">
            <summary>
            The CurrentColumn member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlFilterParameterCollection.filterExpression">
            <summary>
            The FilterExpression member variable.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterParameterCollection.GE#MyLearning#DL#IFilterParameterCollection#GetParameters">
            <summary>
            Gets a list of sql parameters for the filter 
            </summary>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.DL.SqlFilterParameterCollection.CurrentColumn">
            <summary>
            Gets the CurrentColumn property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlFilterParameterCollection.FilterExpression">
            <summary>
            Gets or sets the FilterExpression property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.SqlFilterParameter">
            <summary>
            Represents the information needed for a database command parameter.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterParameter.#ctor(System.Enum,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the SqlFilterParameter class.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="index"></param>
        </member>
        <member name="F:GE.MyLearning.DL.SqlFilterParameter.column">
            <summary>
            The Column member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlFilterParameter.parameterValue">
            <summary>
            The Value member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlFilterParameter.parameterIndex">
            <summary>
            The Index member variable.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlFilterParameter.GetValue">
            <summary>
            Gets the current value converted to the appropriate <see cref="T:System.Type"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.DL.SqlFilterParameter.Column">
            <summary>
            Gets or sets the Column property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlFilterParameter.Value">
            <summary>
            Gets or sets the Value property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlFilterParameter.Index">
            <summary>
            Gets the parameter index.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlFilterParameter.Name">
            <summary>
            Gets the parameter name.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlFilterParameter.DbType">
            <summary>
            Gets the <see cref="T:System.Data.SqlDbType"/> for
            the current entity column enumeration value.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlFilterParameter.SystemType">
            <summary>
            Gets the <see cref="T:System.Type"/> for
            the current entity column enumeration value.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.SqlSortColumnCollection">
            <summary>
            A collection of <see cref="T:GE.MyLearning.DL.SqlSortColumn"/> objects.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortColumnCollection.SetCurrentColumn(System.Object)">
            <summary>
            Sets the CurrentColumn property.
            </summary>
            <param name="column"></param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortColumnCollection.ToString">
            <summary>
            Provides the actual SQL sort string.
            </summary>
            <returns></returns>
        </member>
        <member name="F:GE.MyLearning.DL.SqlSortColumnCollection._currentColumn">
            <summary>
            The CurrentColumn member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlSortColumnCollection.sortExpression">
            <summary>
            The SortExpression member variable.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortColumnCollection.GE#MyLearning#DL#ISortColumnCollection#GetSortColumns">
            <summary>
            Gets a list of sql parameters for the filter 
            </summary>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.DL.SqlSortColumnCollection.CurrentColumn">
            <summary>
            Gets the CurrentColumn property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlSortColumnCollection.SortExpression">
            <summary>
            Gets or sets the SortExpression property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.SqlSortColumn">
            <summary>
            Represents the information of a sorted column.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlSortColumn.#ctor(System.Enum,GE.MyLearning.DL.SqlSortDirection)">
            <summary>
            Initializes a new instance of the SqlSortColumn class.
            </summary>
            <param name="column"></param>
            <param name="sortDirection"></param>
        </member>
        <member name="F:GE.MyLearning.DL.SqlSortColumn._column">
            <summary>
            The Column member variable.
            </summary>
        </member>
        <member name="F:GE.MyLearning.DL.SqlSortColumn._sortDirection">
            <summary>
            The Value member variable.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlSortColumn.Column">
            <summary>
            Gets or sets the Column property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.SqlSortColumn.SortDirection">
            <summary>
            Gets or sets the Value property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlGuestevlProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlGuestevlKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlGuestevlKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_guestevl index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_guestevl index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_guestevl index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_guestevl index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_guestevl index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_guestevl index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlGuestevl},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlGuestevl&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlGuestevl)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlGuestevl)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlGuestevl,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlGuestevl Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlGuestevl,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlGuestevl object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlGuestevl instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlGuestevl Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlGuestevlChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlGuestevl</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlGuestevlFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlGuestevlFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlGuestevlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlGuestevlFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlGuestevlParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlGuestevlParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlGuestevlParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlGuestevlParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlGuestevlSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlGuestevlSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlGuestevlSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeApplyProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.DegreeApplyProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CourseIdeaProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.CourseIdeaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.CourseIdeaProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CourseIdeaKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.Delete(System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_courseideaId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int64)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_courseideaId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CourseIdeaKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.GetByCourseideaId(System.Int64)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_CourseIdea index.
            </summary>
            <param name="_courseideaId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CourseIdea"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.GetByCourseideaId(System.Int64,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CourseIdea index.
            </summary>
            <param name="_courseideaId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CourseIdea"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.GetByCourseideaId(GE.MyLearning.DL.TransactionManager,System.Int64)">
            <summary>
            	Gets rows from the datasource based on the PK_CourseIdea index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_courseideaId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CourseIdea"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.GetByCourseideaId(GE.MyLearning.DL.TransactionManager,System.Int64,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_CourseIdea index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_courseideaId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CourseIdea"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.GetByCourseideaId(System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CourseIdea index.
            </summary>
            <param name="_courseideaId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CourseIdea"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.GetByCourseideaId(GE.MyLearning.DL.TransactionManager,System.Int64,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_CourseIdea index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_courseideaId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.CourseIdea"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.CourseIdea},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;CourseIdea&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.CourseIdea)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.CourseIdea"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.CourseIdea"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.CourseIdea)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.CourseIdea"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.CourseIdea"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CourseIdea,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.CourseIdea"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.CourseIdea Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CourseIdea,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.CourseIdea object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.CourseIdea instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.CourseIdea Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstitutesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwInstitutesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstitutesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwInstitutes},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstitutesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwInstitutes)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwInstitutes"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwInstitutes"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstitutesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstitutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstitutesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstitutesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstitutesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstitutesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstitutesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstitutesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstitutesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstitutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstitutesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstitutesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstitutesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstitutesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstitutesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstitutesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstitutesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstitutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstitutesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstitutesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstitutesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwInstitutesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.DataRepository">
            <summary>
            This class represents the Data source repository and gives access to all the underlying providers.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DataRepository.LoadProvider(GE.MyLearning.DL.Bases.NetTiersProvider)">
            <summary>
            Enables the DataRepository to programatically create and 
            pass in a <c>NetTiersProvider</c> during runtime.
            </summary>
            <param name="provider">An instatiated NetTiersProvider.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DataRepository.LoadProvider(GE.MyLearning.DL.Bases.NetTiersProvider,System.Boolean)">
            <summary>
            Enables the DataRepository to programatically create and 
            pass in a <c>NetTiersProvider</c> during runtime.
            </summary>
            <param name="provider">An instatiated NetTiersProvider.</param>
            <param name="setAsDefault">ability to set any valid provider as the default provider for the DataRepository.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DataRepository.LoadProviders">
            <summary>
             Configuration based provider loading, will load the providers on first call.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DataRepository.CreateTransaction">
            <summary>
            Creates a new <c cref="T:GE.MyLearning.DL.TransactionManager"/> instance from the current datasource.
            </summary>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.DataRepository.AddConnection(System.String,System.String)">
            <summary>
            Adds the specified connection string to the map of connection strings.
            </summary>
            <param name="connectionStringName">The connection string name.</param>
            <param name="connectionString">The provider specific connection information.</param>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.Provider">
            <summary>
            Gets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.Providers">
            <summary>
            Gets the provider collection.
            </summary>
            <value>The providers.</value>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.NetTiersSection">
            <summary>
            Gets a reference to the configured NetTiersServiceSection object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.Configuration">
            <summary>
            Gets a reference to the application configuration object.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.ConnectionStrings">
            <summary>
            Gets a reference to the ConnectionStringSettings collection.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.Connections">
            <summary>
            Gets the dictionary of connection providers.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.CallRolesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.CallRoles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.TrainingLogProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.TrainingLog"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.TrainingUserProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.TrainingUser"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.UserGroupProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.UserGroup"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.UserInfoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.UserInfo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.SysLogProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.SysLog"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.StudentsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Students"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.PermissionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Permission"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.RolePermissionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.RolePermission"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.RolesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Roles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.StudentCourseRelationProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.UserRoleProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.UserRole"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuArticleProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuArticle"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuGroupListProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuGroupList"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuNewpostProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuNewpost"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuRenyuanProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuRenyuan"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuReplypostProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuReplypost"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuGroupItemProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuGroupItem"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuFriendshipProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuFriendship"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuCatogaryProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuCatogary"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuCatogaryExpertsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuCatogaryManagerProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuClassInfoProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuClassInfo"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.NoticesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Notices"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.MenusProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Menus"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.LoginLogProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.LoginLog"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.DepartmentProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Department"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlAssessmentProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlAssessment"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlBehaviorProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlBehavior"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlBehaviordescriptionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.DegreesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Degrees"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.DegreeCoursesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.DegreeCourses"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.CourseIdeaProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.CourseIdea"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.CoursesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Courses"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.CoursewaresProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Coursewares"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.DegreeApplyProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.DegreeApply"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlCatalogProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlCatalog"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlCompetencyScoreDeptProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.GroupsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Groups"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.InstitutesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.Institutes"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.LearningRecordCsvProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.LearningRecordExcelProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlUsertypeProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlUsertype"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlUserProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlUser"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlGuestevlProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlModelProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlModel"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlScoreProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlScore"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlScoredescriptionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VuRightsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VuRights"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlVLearningRecordCsvProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsv"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlVLearningRecordExcelProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcel"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.EvlVScoreProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.EvlVScore"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwDegreeCoursesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwDegreeCourses"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwEvlUserProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwEvlUser"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwInstituteDegreeCoursesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCourses"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwInstituteDegreesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwInstituteDegrees"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwInstituteDegreeStudentsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudents"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwInstitutesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwInstitutes"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwMenuPermissionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwMenuPermission"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwRolePermissionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwRolePermission"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwRolesProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwRoles"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwStudentCourseRelationProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwStudentCourseRelation"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwStudentsProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwStudents"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwTrainingUserProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwTrainingUser"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwTrainingUserLogProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwTrainingUserLog"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwUserGroupProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwUserGroup"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwUserGroupPermissionProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwUserGroupPermission"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.VwUserRoleProvider">
            <summary>
             Gets the current instance of the Data Access Logic Component for the <see cref="T:GE.MyLearning.BL.VwUserRole"/> business entity.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.DataRepository.ConnectionProvider">
            <summary>
            Provides ability to switch connection string at runtime.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DataRepository.ConnectionProvider.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the ConnectionProvider class.
            </summary>
            <param name="connectionStringName">The connection string name.</param>
            <param name="connectionString">The provider specific connection information.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DataRepository.ConnectionProvider.LoadProviders">
            <summary>
            Instantiates the configured providers based on the supplied connection string.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.ConnectionProvider.Provider">
            <summary>
            Gets the provider.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.DataRepository.ConnectionProvider.Providers">
            <summary>
            Gets the provider collection.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.CallRolesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.CallRoles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.CallRolesFilters.#ctor">
            <summary>
            Initializes a new instance of the CallRolesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.CallRolesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CallRolesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CallRolesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CallRolesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.CallRolesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.CallRolesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.CallRoles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.CallRolesQuery.#ctor">
            <summary>
            Initializes a new instance of the CallRolesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.CallRolesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CallRolesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CallRolesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CallRolesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.TrainingLogFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.TrainingLog"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingLogFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.TrainingLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TrainingLogFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingLogFilters.#ctor">
            <summary>
            Initializes a new instance of the TrainingLogFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingLogFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingLogFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.TrainingLogQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.TrainingLogParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.TrainingLog"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingLogParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.TrainingLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TrainingLogParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingLogQuery.#ctor">
            <summary>
            Initializes a new instance of the TrainingLogQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingLogQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingLogQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.TrainingUserFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.TrainingUser"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingUserFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.TrainingUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TrainingUserFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingUserFilters.#ctor">
            <summary>
            Initializes a new instance of the TrainingUserFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingUserFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingUserFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.TrainingUserQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.TrainingUserParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.TrainingUser"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingUserParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.TrainingUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the TrainingUserParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingUserQuery.#ctor">
            <summary>
            Initializes a new instance of the TrainingUserQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingUserQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.TrainingUserQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the TrainingUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.UserGroupFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserGroup"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserGroupFilters.#ctor">
            <summary>
            Initializes a new instance of the UserGroupFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserGroupFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserGroupFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.UserGroupFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserGroupFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.UserGroupQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.UserGroupParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserGroup"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserGroupQuery.#ctor">
            <summary>
            Initializes a new instance of the UserGroupQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserGroupQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserGroupQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.UserGroupQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserGroupQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.UserInfoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserInfoFilters.#ctor">
            <summary>
            Initializes a new instance of the UserInfoFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserInfoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.UserInfoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.UserInfoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.UserInfoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserInfoQuery.#ctor">
            <summary>
            Initializes a new instance of the UserInfoQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserInfoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.UserInfoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserInfoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.SysLogFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.SysLog"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.SysLogFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.SysLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SysLogFilters.#ctor">
            <summary>
            Initializes a new instance of the SysLogFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SysLogFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SysLogFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.SysLogQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.SysLogParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.SysLog"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.SysLogParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.SysLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SysLogQuery.#ctor">
            <summary>
            Initializes a new instance of the SysLogQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SysLogQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SysLogQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the SysLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.StudentsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Students"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Students"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the StudentsFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StudentsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StudentsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.StudentsFilters.#ctor">
            <summary>
            Initializes a new instance of the StudentsFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.StudentsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StudentsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.StudentsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StudentsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.StudentsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.StudentsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Students"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Students"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the StudentsParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StudentsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StudentsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.StudentsQuery.#ctor">
            <summary>
            Initializes a new instance of the StudentsQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.StudentsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StudentsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.StudentsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StudentsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.PermissionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Permission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.PermissionFilters.#ctor">
            <summary>
            Initializes a new instance of the PermissionFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.PermissionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PermissionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.PermissionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PermissionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.PermissionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.PermissionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Permission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.PermissionQuery.#ctor">
            <summary>
            Initializes a new instance of the PermissionQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.PermissionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PermissionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.PermissionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the PermissionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.RolePermissionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.RolePermission"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolePermissionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.RolePermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the RolePermissionFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RolePermissionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RolePermissionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.RolePermissionFilters.#ctor">
            <summary>
            Initializes a new instance of the RolePermissionFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.RolePermissionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RolePermissionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.RolePermissionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RolePermissionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.RolePermissionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.RolePermissionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.RolePermission"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolePermissionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.RolePermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the RolePermissionParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RolePermissionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RolePermissionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.RolePermissionQuery.#ctor">
            <summary>
            Initializes a new instance of the RolePermissionQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.RolePermissionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RolePermissionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.RolePermissionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RolePermissionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.RolesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Roles"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Roles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the RolesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RolesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RolesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.RolesFilters.#ctor">
            <summary>
            Initializes a new instance of the RolesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.RolesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RolesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.RolesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RolesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.RolesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.RolesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Roles"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Roles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the RolesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RolesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RolesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.RolesQuery.#ctor">
            <summary>
            Initializes a new instance of the RolesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.RolesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the RolesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.RolesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the RolesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.StudentCourseRelationFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentCourseRelationFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the StudentCourseRelationFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StudentCourseRelationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StudentCourseRelationFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.StudentCourseRelationFilters.#ctor">
            <summary>
            Initializes a new instance of the StudentCourseRelationFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.StudentCourseRelationFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StudentCourseRelationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.StudentCourseRelationFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StudentCourseRelationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.StudentCourseRelationQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.StudentCourseRelationParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentCourseRelationParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the StudentCourseRelationParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StudentCourseRelationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StudentCourseRelationParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.StudentCourseRelationQuery.#ctor">
            <summary>
            Initializes a new instance of the StudentCourseRelationQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.StudentCourseRelationQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the StudentCourseRelationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.StudentCourseRelationQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the StudentCourseRelationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.UserRoleFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserRole"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserRoleFilters.#ctor">
            <summary>
            Initializes a new instance of the UserRoleFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserRoleFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserRoleFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.UserRoleFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserRoleFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.UserRoleQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.UserRoleParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.UserRole"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserRoleQuery.#ctor">
            <summary>
            Initializes a new instance of the UserRoleQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.UserRoleQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the UserRoleQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.UserRoleQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the UserRoleQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuArticleFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuArticle"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuArticleFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuArticle"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuArticleFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuArticleFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuArticleFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuArticleFilters.#ctor">
            <summary>
            Initializes a new instance of the VuArticleFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuArticleFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuArticleFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuArticleFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuArticleFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuArticleQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuArticleParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuArticle"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuArticleParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuArticle"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuArticleParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuArticleParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuArticleParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuArticleQuery.#ctor">
            <summary>
            Initializes a new instance of the VuArticleQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuArticleQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuArticleQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuArticleQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuArticleQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuGroupListFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuGroupList"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupListFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuGroupList"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuGroupListFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupListFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupListFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupListFilters.#ctor">
            <summary>
            Initializes a new instance of the VuGroupListFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupListFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupListFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupListFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupListFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuGroupListQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuGroupListParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuGroupList"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupListParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuGroupList"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuGroupListParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupListParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupListParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupListQuery.#ctor">
            <summary>
            Initializes a new instance of the VuGroupListQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupListQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupListQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupListQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupListQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuNewpostFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuNewpost"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuNewpostFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuNewpost"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuNewpostFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuNewpostFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuNewpostFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuNewpostFilters.#ctor">
            <summary>
            Initializes a new instance of the VuNewpostFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuNewpostFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuNewpostFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuNewpostFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuNewpostFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuNewpostQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuNewpostParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuNewpost"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuNewpostParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuNewpost"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuNewpostParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuNewpostParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuNewpostParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuNewpostQuery.#ctor">
            <summary>
            Initializes a new instance of the VuNewpostQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuNewpostQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuNewpostQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuNewpostQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuNewpostQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuRenyuanFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRenyuanFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuRenyuanFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuRenyuanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuRenyuanFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuRenyuanFilters.#ctor">
            <summary>
            Initializes a new instance of the VuRenyuanFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuRenyuanFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuRenyuanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuRenyuanFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuRenyuanFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuRenyuanQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuRenyuanParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRenyuanParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuRenyuanParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuRenyuanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuRenyuanParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuRenyuanQuery.#ctor">
            <summary>
            Initializes a new instance of the VuRenyuanQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuRenyuanQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuRenyuanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuRenyuanQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuRenyuanQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuReplypostFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuReplypost"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuReplypostFilters.#ctor">
            <summary>
            Initializes a new instance of the VuReplypostFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuReplypostFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuReplypostFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuReplypostFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuReplypostFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuReplypostQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuReplypostParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuReplypost"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuReplypostQuery.#ctor">
            <summary>
            Initializes a new instance of the VuReplypostQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuReplypostQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuReplypostQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuReplypostQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuReplypostQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuGroupItemFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupItemFilters.#ctor">
            <summary>
            Initializes a new instance of the VuGroupItemFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupItemFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupItemFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupItemFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupItemFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuGroupItemQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuGroupItemParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuGroupItem"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupItemQuery.#ctor">
            <summary>
            Initializes a new instance of the VuGroupItemQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupItemQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupItemQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuGroupItemQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuGroupItemQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuFriendshipFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuFriendship"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuFriendshipFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuFriendship"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuFriendshipFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuFriendshipFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuFriendshipFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuFriendshipFilters.#ctor">
            <summary>
            Initializes a new instance of the VuFriendshipFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuFriendshipFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuFriendshipFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuFriendshipFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuFriendshipFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuFriendshipQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuFriendshipParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuFriendship"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuFriendshipParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuFriendship"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuFriendshipParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuFriendshipParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuFriendshipParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuFriendshipQuery.#ctor">
            <summary>
            Initializes a new instance of the VuFriendshipQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuFriendshipQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuFriendshipQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuFriendshipQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuFriendshipQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuCatogaryFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogary"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryFilters.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuCatogaryQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuCatogaryParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogary"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryQuery.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuCatogaryExpertsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryExpertsFilters.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryExpertsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryExpertsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuCatogaryExpertsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuCatogaryExpertsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogaryExperts"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryExpertsQuery.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryExpertsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryExpertsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryExpertsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuCatogaryManagerFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryManagerFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryManagerFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryManagerFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryManagerFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryManagerFilters.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryManagerFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryManagerFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryManagerFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryManagerFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryManagerFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuCatogaryManagerQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuCatogaryManagerParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryManagerParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryManagerParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryManagerParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryManagerParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryManagerQuery.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryManagerQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryManagerQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryManagerQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuCatogaryManagerQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuCatogaryManagerQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuClassInfoFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuClassInfoFilters.#ctor">
            <summary>
            Initializes a new instance of the VuClassInfoFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuClassInfoFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuClassInfoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuClassInfoFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuClassInfoFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuClassInfoQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuClassInfoParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuClassInfo"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuClassInfoQuery.#ctor">
            <summary>
            Initializes a new instance of the VuClassInfoQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuClassInfoQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuClassInfoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuClassInfoQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuClassInfoQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.NoticesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Notices"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.NoticesFilters.#ctor">
            <summary>
            Initializes a new instance of the NoticesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.NoticesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NoticesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.NoticesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NoticesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.NoticesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.NoticesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Notices"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.NoticesQuery.#ctor">
            <summary>
            Initializes a new instance of the NoticesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.NoticesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the NoticesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.NoticesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the NoticesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.MenusFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Menus"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.MenusFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Menus"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the MenusFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MenusFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the MenusFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.MenusFilters.#ctor">
            <summary>
            Initializes a new instance of the MenusFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.MenusFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MenusFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.MenusFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the MenusFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.MenusQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.MenusParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Menus"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.MenusParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Menus"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the MenusParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MenusParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the MenusParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.MenusQuery.#ctor">
            <summary>
            Initializes a new instance of the MenusQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.MenusQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the MenusQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.MenusQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the MenusQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.LoginLogFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LoginLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.LoginLogFilters.#ctor">
            <summary>
            Initializes a new instance of the LoginLogFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.LoginLogFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoginLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.LoginLogFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoginLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.LoginLogQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.LoginLogParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LoginLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.LoginLogQuery.#ctor">
            <summary>
            Initializes a new instance of the LoginLogQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.LoginLogQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LoginLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.LoginLogQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LoginLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.DepartmentFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Department"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DepartmentFilters.#ctor">
            <summary>
            Initializes a new instance of the DepartmentFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DepartmentFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DepartmentFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.DepartmentQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.DepartmentParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Department"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DepartmentQuery.#ctor">
            <summary>
            Initializes a new instance of the DepartmentQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DepartmentQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DepartmentQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DepartmentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlAssessmentFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlAssessmentFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlAssessmentFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlAssessmentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlAssessmentFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlAssessmentFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlAssessmentFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlAssessmentFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlAssessmentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlAssessmentFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlAssessmentFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlAssessmentQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlAssessmentParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlAssessmentParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlAssessmentParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlAssessmentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlAssessmentParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlAssessmentQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlAssessmentQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlAssessmentQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlAssessmentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlAssessmentQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlAssessmentQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlBehaviorFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviorFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviorFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviorFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviorFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviorFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviorFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlBehaviorQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlBehaviorParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlBehavior"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviorQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviorQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviorQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviorQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviorQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviorQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlBehaviordescriptionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviordescriptionFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviordescriptionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviordescriptionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlBehaviordescriptionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlBehaviordescriptionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlBehaviordescription"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviordescriptionQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviordescriptionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlBehaviordescriptionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlBehaviordescriptionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.DegreesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Degrees"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Degrees"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DegreesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DegreesFilters.#ctor">
            <summary>
            Initializes a new instance of the DegreesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DegreesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DegreesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.DegreesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.DegreesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Degrees"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Degrees"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the DegreesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DegreesQuery.#ctor">
            <summary>
            Initializes a new instance of the DegreesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DegreesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DegreesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.DegreeCoursesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeCoursesFilters.#ctor">
            <summary>
            Initializes a new instance of the DegreeCoursesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeCoursesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeCoursesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeCoursesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeCoursesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.DegreeCoursesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.DegreeCoursesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.DegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeCoursesQuery.#ctor">
            <summary>
            Initializes a new instance of the DegreeCoursesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeCoursesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeCoursesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeCoursesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeCoursesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.CourseIdeaFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.CourseIdea"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CourseIdeaFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.CourseIdea"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CourseIdeaFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CourseIdeaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CourseIdeaFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CourseIdeaFilters.#ctor">
            <summary>
            Initializes a new instance of the CourseIdeaFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.CourseIdeaFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CourseIdeaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CourseIdeaFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CourseIdeaFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.CourseIdeaQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.CourseIdeaParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.CourseIdea"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CourseIdeaParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.CourseIdea"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CourseIdeaParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CourseIdeaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CourseIdeaParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CourseIdeaQuery.#ctor">
            <summary>
            Initializes a new instance of the CourseIdeaQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.CourseIdeaQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CourseIdeaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CourseIdeaQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CourseIdeaQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.CoursesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Courses"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Courses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CoursesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoursesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoursesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CoursesFilters.#ctor">
            <summary>
            Initializes a new instance of the CoursesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.CoursesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoursesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CoursesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoursesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.CoursesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.CoursesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Courses"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Courses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CoursesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoursesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoursesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CoursesQuery.#ctor">
            <summary>
            Initializes a new instance of the CoursesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.CoursesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoursesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CoursesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoursesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.CoursewaresFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Coursewares"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursewaresFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Coursewares"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CoursewaresFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoursewaresFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoursewaresFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CoursewaresFilters.#ctor">
            <summary>
            Initializes a new instance of the CoursewaresFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.CoursewaresFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoursewaresFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CoursewaresFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoursewaresFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.CoursewaresQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.CoursewaresParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Coursewares"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursewaresParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Coursewares"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the CoursewaresParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoursewaresParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoursewaresParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CoursewaresQuery.#ctor">
            <summary>
            Initializes a new instance of the CoursewaresQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.CoursewaresQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the CoursewaresQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.CoursewaresQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the CoursewaresQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.DegreeApplyFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.DegreeApply"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeApplyFilters.#ctor">
            <summary>
            Initializes a new instance of the DegreeApplyFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeApplyFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeApplyFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeApplyFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeApplyFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.DegreeApplyQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.DegreeApplyParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.DegreeApply"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeApplyQuery.#ctor">
            <summary>
            Initializes a new instance of the DegreeApplyQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeApplyQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeApplyQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.DegreeApplyQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the DegreeApplyQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlCatalogFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCatalogFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlCatalogFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCatalogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCatalogFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCatalogFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlCatalogFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCatalogFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCatalogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCatalogFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCatalogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlCatalogQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlCatalogParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCatalogParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlCatalogParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCatalogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCatalogParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCatalogQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlCatalogQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCatalogQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCatalogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCatalogQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCatalogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlCompetencyScoreDeptFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCompetencyScoreDeptFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCompetencyScoreDeptFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCompetencyScoreDeptFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlCompetencyScoreDeptQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCompetencyScoreDeptQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCompetencyScoreDeptQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlCompetencyScoreDeptQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.GroupsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Groups"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.GroupsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Groups"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the GroupsFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GroupsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GroupsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.GroupsFilters.#ctor">
            <summary>
            Initializes a new instance of the GroupsFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.GroupsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GroupsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.GroupsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GroupsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.GroupsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.GroupsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Groups"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.GroupsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Groups"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the GroupsParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GroupsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GroupsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.GroupsQuery.#ctor">
            <summary>
            Initializes a new instance of the GroupsQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.GroupsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the GroupsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.GroupsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the GroupsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.InstitutesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Institutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.InstitutesFilters.#ctor">
            <summary>
            Initializes a new instance of the InstitutesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.InstitutesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the InstitutesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.InstitutesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the InstitutesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.InstitutesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.InstitutesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Institutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.InstitutesQuery.#ctor">
            <summary>
            Initializes a new instance of the InstitutesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.InstitutesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the InstitutesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.InstitutesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the InstitutesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.LearningRecordCsvFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordCsvFilters.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordCsvFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordCsvFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordCsvFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordCsvFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordCsvFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.LearningRecordCsvQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.LearningRecordCsvParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordCsvQuery.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordCsvQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordCsvQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordCsvQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordCsvQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordCsvQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.LearningRecordExcelFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordExcelFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordExcelFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordExcelFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordExcelFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordExcelFilters.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordExcelFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordExcelFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordExcelFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordExcelFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordExcelFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.LearningRecordExcelQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.LearningRecordExcelParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordExcelParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordExcelParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordExcelParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordExcelParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordExcelQuery.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordExcelQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordExcelQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordExcelQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.LearningRecordExcelQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the LearningRecordExcelQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlUsertypeFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUsertypeFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlUsertypeFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUsertypeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUsertypeFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUsertypeFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlUsertypeFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUsertypeFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUsertypeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUsertypeFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUsertypeFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlUsertypeQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlUsertypeParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUsertypeParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlUsertypeParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUsertypeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUsertypeParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUsertypeQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlUsertypeQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUsertypeQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUsertypeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUsertypeQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUsertypeQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlUserFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlUser"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUserFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlUserFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUserFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlUserFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUserFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUserFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlUserQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlUserParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlUser"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUserParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlUserParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUserQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlUserQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUserQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlUserQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlGuestevlFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlGuestevlFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlGuestevlFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlGuestevlFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlGuestevlFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlGuestevlFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlGuestevlFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlGuestevlQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlGuestevlParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlGuestevl"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlGuestevlQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlGuestevlQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlGuestevlQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlGuestevlQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlGuestevlQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlGuestevlQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlModelFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlModel"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlModelFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlModel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlModelFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlModelFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlModelFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlModelFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlModelFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlModelFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlModelFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlModelFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlModelFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlModelQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlModelParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlModel"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlModelParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlModel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlModelParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlModelParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlModelParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlModelQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlModelQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlModelQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlModelQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlModelQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlModelQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlScoreFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlScore"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoreFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlScoreFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoreFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoreFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoreFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoreFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlScoreQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlScoreParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlScore"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoreQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlScoreQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoreQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoreQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoreQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoreQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlScoredescriptionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoredescriptionFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlScoredescriptionFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoredescriptionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoredescriptionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoredescriptionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoredescriptionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlScoredescriptionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlScoredescriptionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlScoredescription"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoredescriptionQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlScoredescriptionQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoredescriptionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoredescriptionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlScoredescriptionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlScoredescriptionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuRightsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuRights"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRightsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuRights"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuRightsFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuRightsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuRightsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuRightsFilters.#ctor">
            <summary>
            Initializes a new instance of the VuRightsFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuRightsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuRightsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuRightsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuRightsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VuRightsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VuRightsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuRights"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRightsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuRights"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuRightsParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuRightsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuRightsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuRightsQuery.#ctor">
            <summary>
            Initializes a new instance of the VuRightsQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VuRightsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VuRightsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VuRightsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VuRightsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlVLearningRecordCsvFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordCsvFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordCsvFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordCsvFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlVLearningRecordCsvQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlVLearningRecordCsvParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordCsv"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordCsvQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordCsvQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordCsvQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordCsvQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlVLearningRecordExcelFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordExcelFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordExcelFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordExcelFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlVLearningRecordExcelQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVLearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordExcelQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordExcelQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVLearningRecordExcelQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVLearningRecordExcelQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlVScoreFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVScore"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVScoreFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVScore"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVScoreFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlVScoreFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVScoreFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVScoreFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVScoreFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVScoreFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVScoreFilters.#ctor">
            <summary>
            Initializes a new instance of the EvlVScoreFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVScoreFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVScoreFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVScoreFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVScoreFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.EvlVScoreQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.EvlVScoreParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVScore"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVScoreParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVScore"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVScoreParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlVScoreParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVScoreParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVScoreParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVScoreParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVScoreParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVScoreQuery.#ctor">
            <summary>
            Initializes a new instance of the EvlVScoreQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVScoreQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVScoreQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.EvlVScoreQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the EvlVScoreQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwDegreeCoursesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwDegreeCourses"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwDegreeCoursesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwDegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwDegreeCoursesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwDegreeCoursesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwDegreeCoursesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwDegreeCoursesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwDegreeCoursesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwDegreeCoursesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwDegreeCoursesFilters.#ctor">
            <summary>
            Initializes a new instance of the VwDegreeCoursesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwDegreeCoursesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwDegreeCoursesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwDegreeCoursesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwDegreeCoursesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwDegreeCoursesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwDegreeCoursesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwDegreeCourses"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwDegreeCoursesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwDegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwDegreeCoursesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwDegreeCoursesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwDegreeCoursesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwDegreeCoursesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwDegreeCoursesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwDegreeCoursesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwDegreeCoursesQuery.#ctor">
            <summary>
            Initializes a new instance of the VwDegreeCoursesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwDegreeCoursesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwDegreeCoursesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwDegreeCoursesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwDegreeCoursesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwEvlUserFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwEvlUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwEvlUserFilters.#ctor">
            <summary>
            Initializes a new instance of the VwEvlUserFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwEvlUserFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwEvlUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwEvlUserFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwEvlUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwEvlUserQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwEvlUserParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwEvlUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwEvlUserQuery.#ctor">
            <summary>
            Initializes a new instance of the VwEvlUserQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwEvlUserQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwEvlUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwEvlUserQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwEvlUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwInstituteDegreeCoursesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCourses"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeCoursesFilters.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeCoursesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeCoursesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwInstituteDegreeCoursesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCourses"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeCoursesQuery.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeCoursesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeCoursesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwInstituteDegreesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegrees"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegrees"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreesFilters.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwInstituteDegreesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwInstituteDegreesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegrees"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegrees"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreesQuery.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwInstituteDegreeStudentsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudents"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudents"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeStudentsFilters.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeStudentsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeStudentsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwInstituteDegreeStudentsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudents"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudents"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeStudentsQuery.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeStudentsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstituteDegreeStudentsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwInstitutesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstitutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstitutesFilters.#ctor">
            <summary>
            Initializes a new instance of the VwInstitutesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstitutesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstitutesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstitutesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstitutesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwInstitutesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwInstitutesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstitutes"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstitutesQuery.#ctor">
            <summary>
            Initializes a new instance of the VwInstitutesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstitutesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstitutesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwInstitutesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwInstitutesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwMenuPermissionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwMenuPermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwMenuPermissionFilters.#ctor">
            <summary>
            Initializes a new instance of the VwMenuPermissionFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwMenuPermissionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwMenuPermissionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwMenuPermissionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwMenuPermissionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwMenuPermissionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwMenuPermissionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwMenuPermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwMenuPermissionQuery.#ctor">
            <summary>
            Initializes a new instance of the VwMenuPermissionQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwMenuPermissionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwMenuPermissionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwMenuPermissionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwMenuPermissionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwRolePermissionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwRolePermission"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwRolePermissionFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwRolePermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolePermissionFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwRolePermissionFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolePermissionFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolePermissionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolePermissionFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolePermissionFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolePermissionFilters.#ctor">
            <summary>
            Initializes a new instance of the VwRolePermissionFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolePermissionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolePermissionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolePermissionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolePermissionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwRolePermissionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwRolePermissionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwRolePermission"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwRolePermissionParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwRolePermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolePermissionParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwRolePermissionParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolePermissionParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolePermissionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolePermissionParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolePermissionParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolePermissionQuery.#ctor">
            <summary>
            Initializes a new instance of the VwRolePermissionQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolePermissionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolePermissionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolePermissionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolePermissionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwRolesFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwRoles"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwRolesFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwRoles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolesFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwRolesFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolesFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolesFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolesFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolesFilters.#ctor">
            <summary>
            Initializes a new instance of the VwRolesFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolesFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolesFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolesFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwRolesQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwRolesParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwRoles"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwRolesParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwRoles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolesParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwRolesParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolesParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolesParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolesParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolesQuery.#ctor">
            <summary>
            Initializes a new instance of the VwRolesQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolesQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwRolesQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwRolesQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwStudentCourseRelationFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwStudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentCourseRelationFilters.#ctor">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentCourseRelationFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentCourseRelationFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwStudentCourseRelationQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwStudentCourseRelationParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwStudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentCourseRelationQuery.#ctor">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentCourseRelationQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentCourseRelationQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentCourseRelationQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwStudentsFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwStudents"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwStudentsFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwStudents"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentsFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwStudentsFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentsFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentsFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentsFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentsFilters.#ctor">
            <summary>
            Initializes a new instance of the VwStudentsFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentsFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentsFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentsFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwStudentsQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwStudentsParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwStudents"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwStudentsParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwStudents"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentsParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwStudentsParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentsParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentsParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentsParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentsQuery.#ctor">
            <summary>
            Initializes a new instance of the VwStudentsQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentsQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwStudentsQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwStudentsQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwTrainingUserFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwTrainingUser"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwTrainingUserFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwTrainingUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwTrainingUserFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserFilters.#ctor">
            <summary>
            Initializes a new instance of the VwTrainingUserFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwTrainingUserQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwTrainingUserParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwTrainingUser"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwTrainingUserParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwTrainingUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwTrainingUserParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserQuery.#ctor">
            <summary>
            Initializes a new instance of the VwTrainingUserQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwTrainingUserLogFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwTrainingUserLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserLogFilters.#ctor">
            <summary>
            Initializes a new instance of the VwTrainingUserLogFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserLogFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserLogFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserLogFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwTrainingUserLogQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwTrainingUserLogParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwTrainingUserLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserLogQuery.#ctor">
            <summary>
            Initializes a new instance of the VwTrainingUserLogQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserLogQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwTrainingUserLogQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwTrainingUserLogQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwUserGroupFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserGroup"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserGroupFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserGroup"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwUserGroupFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupFilters.#ctor">
            <summary>
            Initializes a new instance of the VwUserGroupFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwUserGroupQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwUserGroupParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserGroup"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserGroupParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserGroup"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwUserGroupParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupQuery.#ctor">
            <summary>
            Initializes a new instance of the VwUserGroupQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwUserGroupPermissionFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserGroupPermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupPermissionFilters.#ctor">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupPermissionFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupPermissionFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwUserGroupPermissionQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwUserGroupPermissionParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserGroupPermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupPermissionQuery.#ctor">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupPermissionQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserGroupPermissionQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserGroupPermissionQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwUserRoleFilters">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserRole"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserRoleFilterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserRole"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserRoleFilterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwUserRoleFilterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserRoleFilterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserRoleFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserRoleFilterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserRoleFilterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserRoleFilters.#ctor">
            <summary>
            Initializes a new instance of the VwUserRoleFilters class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserRoleFilters.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserRoleFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserRoleFilters.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserRoleFilters class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.VwUserRoleQuery">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.Bases.VwUserRoleParameterBuilder"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserRole"/> object.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserRoleParameterBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.ParameterizedSqlFilterBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserRole"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserRoleParameterBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwUserRoleParameterBuilder class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserRoleParameterBuilder.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserRoleParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserRoleParameterBuilder.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserRoleParameterBuilder class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserRoleQuery.#ctor">
            <summary>
            Initializes a new instance of the VwUserRoleQuery class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserRoleQuery.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserRoleQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
        </member>
        <member name="M:GE.MyLearning.DL.VwUserRoleQuery.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the VwUserRoleQuery class.
            </summary>
            <param name="ignoreCase">Specifies whether to create case-insensitive statements.</param>
            <param name="useAnd">Specifies whether to combine statements using AND or OR.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordExcelChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.LearningRecordExcel</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordExcelSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.LearningRecordExcel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.LearningRecordExcelSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the LearningRecordExcelSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.LearningRecordCsvProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlCompetencyScoreDeptKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlCompetencyScoreDeptKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_competencyScoreDept index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_competencyScoreDept index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_competencyScoreDept index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_competencyScoreDept index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_competencyScoreDept index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_competencyScoreDept index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlCompetencyScoreDept},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlCompetencyScoreDept&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlCompetencyScoreDept)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlCompetencyScoreDept)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlCompetencyScoreDept,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlCompetencyScoreDept Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlCompetencyScoreDept,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlCompetencyScoreDept object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlCompetencyScoreDept instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlCompetencyScoreDept Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlCompetencyScoreDept</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlCompetencyScoreDept"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlCompetencyScoreDeptSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlAssessmentChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlAssessment</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlAssessmentSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlAssessment"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlAssessmentSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlAssessmentSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.MenusChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Menus</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.MenusSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Menus"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.MenusSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the MenusSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuNewpostChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuNewpost</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuNewpostSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuNewpost"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuNewpostSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuNewpostSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingUserProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.TrainingUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.TrainingUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TrainingUserKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_trainUserId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_trainUserId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TrainingUserKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.GetByTrainUserId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_TrainingUser index.
            </summary>
            <param name="_trainUserId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.GetByTrainUserId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TrainingUser index.
            </summary>
            <param name="_trainUserId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.GetByTrainUserId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TrainingUser index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_trainUserId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.GetByTrainUserId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_TrainingUser index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_trainUserId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.GetByTrainUserId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TrainingUser index.
            </summary>
            <param name="_trainUserId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.GetByTrainUserId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_TrainingUser index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_trainUserId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.TrainingUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.TrainingUser},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;TrainingUser&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.TrainingUser)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.TrainingUser"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.TrainingUser"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.TrainingUser)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.TrainingUser"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.TrainingUser"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TrainingUser,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.TrainingUser"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.TrainingUser Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.TrainingUser,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.TrainingUser object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.TrainingUser instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.TrainingUser Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwInstituteDegreesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwInstituteDegrees},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwInstituteDegrees)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwInstituteDegrees"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwInstituteDegrees"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegrees"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.SqlExpressionParser">
            <summary>
            Parses search text into an expression that can
            be used in a SQL WHERE clause.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.#ctor(System.String,GE.MyLearning.DL.SqlComparisonType)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.#ctor(System.String,GE.MyLearning.DL.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the SqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.AppendOr">
            <summary>
            Appends "OR" to the SQL statement.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.AppendAnd">
            <summary>
            Appends "AND" to the SQL statement.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.AppendSpace">
            <summary>
            Appends a space to the SQL statement.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.OpenGrouping">
            <summary>
            Appends a left parentheses to the SQL statement.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.CloseGrouping">
            <summary>
            Appends a right parentheses to the SQL statement.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.AppendSearchText(System.String)">
            <summary>
            Appends the specified search text to the SQL statement.
            </summary>
            <param name="searchText">The search text to append.</param>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.WrapWithSQL(System.String,System.String,System.Boolean)">
            <summary>
            Converts the search text into a valid search expression.
            </summary>
            <param name="propertyName"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.SqlExpressionParser.Parse(System.String)">
            <summary>
            Parses the specified value into separate search terms.
            </summary>
            <param name="value">The search text.</param>
            <returns>Returns a parsed search phrase.</returns>
        </member>
        <member name="T:GE.MyLearning.DL.ParameterizedSqlExpressionParser">
            <summary>
            Parses search text into an expression that can
            be used in a parameterized SQL WHERE clause.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlExpressionParser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlExpressionParser.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlExpressionParser.#ctor(System.String,GE.MyLearning.DL.SqlComparisonType)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlExpressionParser.#ctor(System.String,GE.MyLearning.DL.SqlComparisonType,System.Boolean)">
            <summary>
            Initializes a new instance of the ParameterizedSqlExpressionParser class.
            </summary>
            <param name="propertyName"></param>
            <param name="comparisonType"></param>
            <param name="ignoreCase"></param>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlExpressionParser.Contains(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Contains"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlExpressionParser.StartsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.StartsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlExpressionParser.EndsWith(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.EndsWith"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlExpressionParser.Like(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Like"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="M:GE.MyLearning.DL.ParameterizedSqlExpressionParser.Equals(System.String,System.String,System.Boolean)">
            <summary>
            Creates a <see cref="F:GE.MyLearning.DL.SqlComparisonType.Equals"/> expression.
            </summary>
            <param name="column"></param>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <returns></returns>
        </member>
        <member name="F:GE.MyLearning.DL.ParameterizedSqlExpressionParser.parameters">
            <summary>
            The Parameters member variable.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.ParameterizedSqlExpressionParser.Parameters">
            <summary>
            Gets or sets the Parameters property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.DegreesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DegreesKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_degreeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.DegreesKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.GetByDegreeId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Degrees index.
            </summary>
            <param name="_degreeId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Degrees"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.GetByDegreeId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Degrees index.
            </summary>
            <param name="_degreeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Degrees"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.GetByDegreeId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Degrees index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Degrees"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.GetByDegreeId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Degrees index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Degrees"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.GetByDegreeId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Degrees index.
            </summary>
            <param name="_degreeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Degrees"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.GetByDegreeId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Degrees index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_degreeId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Degrees"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Degrees},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Degrees&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Degrees)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Degrees"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Degrees"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Degrees)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Degrees"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Degrees"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Degrees,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Degrees"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Degrees Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Degrees,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Degrees object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Degrees instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Degrees Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreesChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Degrees</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Degrees"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DegreesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the DegreesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.LoginLogProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.LoginLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolePermissionChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.RolePermission</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolePermissionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.RolePermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolePermissionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the RolePermissionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.SysLogProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.SysLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.SysLogProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.SysLogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.SysLogKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_logId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_logId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.SysLogKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.GetByLogId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_SysLog index.
            </summary>
            <param name="_logId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.SysLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.GetByLogId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SysLog index.
            </summary>
            <param name="_logId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.SysLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.GetByLogId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SysLog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_logId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.SysLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.GetByLogId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_SysLog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_logId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.SysLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.GetByLogId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SysLog index.
            </summary>
            <param name="_logId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.SysLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.GetByLogId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_SysLog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_logId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.SysLog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.SysLog},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;SysLog&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.SysLog)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.SysLog"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.SysLog"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.SysLog)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.SysLog"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.SysLog"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.SysLog,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.SysLog"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.SysLog Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.SysLog,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.SysLog object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.SysLog instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.SysLog Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingUserChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.TrainingUser</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingUserSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.TrainingUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingUserSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the TrainingUserSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserRoleProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwUserRoleProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserRoleProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwUserRoleProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserRoleProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwUserRole},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserRoleProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwUserRole)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwUserRole"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwUserRole"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwStudentsProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwStudentsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentsProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwStudents},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentsProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwStudents)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwStudents"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwStudents"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwStudentsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwStudents"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwStudentsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwStudentsSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwRolesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwRolesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwRoles},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwRoles)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwRoles"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwRoles"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwRolesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwRoles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwRolesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwRolePermissionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwRolePermissionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwRolePermissionProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwRolePermissionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolePermissionProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwRolePermission},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolePermissionProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwRolePermission)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwRolePermission"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwRolePermission"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlVLearningRecordExcelProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUsertypeProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlUsertypeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlUsertypeProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlUsertypeKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlUsertypeKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_UserType index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUsertype"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_UserType index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUsertype"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_UserType index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUsertype"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_UserType index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUsertype"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_UserType index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUsertype"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_UserType index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUsertype"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlUsertype},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlUsertype&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlUsertype)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlUsertype)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlUsertype,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlUsertype Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlUsertype,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlUsertype object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlUsertype instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlUsertype Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.CoursewaresProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CoursewaresKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_coursewareId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_coursewareId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CoursewaresKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.GetByCoursewareId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Data_Library index.
            </summary>
            <param name="_coursewareId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Coursewares"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.GetByCoursewareId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Data_Library index.
            </summary>
            <param name="_coursewareId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Coursewares"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.GetByCoursewareId(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_Data_Library index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_coursewareId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Coursewares"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.GetByCoursewareId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Data_Library index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_coursewareId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Coursewares"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.GetByCoursewareId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Data_Library index.
            </summary>
            <param name="_coursewareId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Coursewares"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.GetByCoursewareId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Data_Library index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_coursewareId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Coursewares"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Coursewares},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Coursewares&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Coursewares)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Coursewares"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Coursewares"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Coursewares)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Coursewares"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Coursewares"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Coursewares,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Coursewares"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Coursewares Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Coursewares,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Coursewares object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Coursewares instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Coursewares Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursewaresChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Coursewares</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursewaresSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Coursewares"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursewaresSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CoursewaresSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.CoursesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.CoursesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CoursesKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.Delete(System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_courseId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_courseId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.CoursesKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.GetByCourseId(System.String)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_Courses index.
            </summary>
            <param name="_courseId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Courses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.GetByCourseId(System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Courses index.
            </summary>
            <param name="_courseId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Courses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.GetByCourseId(GE.MyLearning.DL.TransactionManager,System.String)">
            <summary>
            	Gets rows from the datasource based on the PK_Courses index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_courseId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Courses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.GetByCourseId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_Courses index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_courseId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Courses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.GetByCourseId(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Courses index.
            </summary>
            <param name="_courseId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Courses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.GetByCourseId(GE.MyLearning.DL.TransactionManager,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_Courses index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_courseId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.Courses"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.Courses},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;Courses&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.Courses)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Courses"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Courses"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.Courses)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.Courses"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Courses"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Courses,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.Courses"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.Courses Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.Courses,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.Courses object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.Courses instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.Courses Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryManagerChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuCatogaryManager</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryManagerSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuCatogaryManager"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuCatogaryManagerSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuCatogaryManagerSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuArticleProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuArticleProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuArticleProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuArticleKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuArticleKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_article index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuArticle"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_article index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuArticle"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_article index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuArticle"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_article index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuArticle"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_article index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuArticle"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_article index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuArticle"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuArticle},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuArticle&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuArticle)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuArticle"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuArticle"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuArticle)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuArticle"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuArticle"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuArticle,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuArticle"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuArticle Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuArticle,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuArticle object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuArticle instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuArticle Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwInstituteDegreesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwDegreeCoursesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwDegreeCoursesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwDegreeCoursesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwDegreeCourses},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwDegreeCoursesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwDegreeCourses)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwDegreeCourses"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwDegreeCourses"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwDegreeCoursesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwDegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwDegreeCoursesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwDegreeCoursesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.NetTiersProvider">
            <summary>
             The base class to implements to create a .NetTiers provider.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.CallRolesProvider">
            <summary>
             Current CallRolesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.TrainingLogProvider">
            <summary>
             Current TrainingLogProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.TrainingUserProvider">
            <summary>
             Current TrainingUserProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.UserGroupProvider">
            <summary>
             Current UserGroupProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.UserInfoProvider">
            <summary>
             Current UserInfoProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.SysLogProvider">
            <summary>
             Current SysLogProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.StudentsProvider">
            <summary>
             Current StudentsProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.PermissionProvider">
            <summary>
             Current PermissionProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.RolePermissionProvider">
            <summary>
             Current RolePermissionProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.RolesProvider">
            <summary>
             Current RolesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.StudentCourseRelationProvider">
            <summary>
             Current StudentCourseRelationProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.UserRoleProvider">
            <summary>
             Current UserRoleProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuArticleProvider">
            <summary>
             Current VuArticleProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuGroupListProvider">
            <summary>
             Current VuGroupListProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuNewpostProvider">
            <summary>
             Current VuNewpostProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuRenyuanProvider">
            <summary>
             Current VuRenyuanProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuReplypostProvider">
            <summary>
             Current VuReplypostProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuGroupItemProvider">
            <summary>
             Current VuGroupItemProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuFriendshipProvider">
            <summary>
             Current VuFriendshipProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuCatogaryProvider">
            <summary>
             Current VuCatogaryProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuCatogaryExpertsProvider">
            <summary>
             Current VuCatogaryExpertsProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuCatogaryManagerProvider">
            <summary>
             Current VuCatogaryManagerProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuClassInfoProvider">
            <summary>
             Current VuClassInfoProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.NoticesProvider">
            <summary>
             Current NoticesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.MenusProvider">
            <summary>
             Current MenusProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.LoginLogProvider">
            <summary>
             Current LoginLogProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.DepartmentProvider">
            <summary>
             Current DepartmentProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlAssessmentProvider">
            <summary>
             Current EvlAssessmentProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlBehaviorProvider">
            <summary>
             Current EvlBehaviorProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlBehaviordescriptionProvider">
            <summary>
             Current EvlBehaviordescriptionProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.DegreesProvider">
            <summary>
             Current DegreesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.DegreeCoursesProvider">
            <summary>
             Current DegreeCoursesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.CourseIdeaProvider">
            <summary>
             Current CourseIdeaProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.CoursesProvider">
            <summary>
             Current CoursesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.CoursewaresProvider">
            <summary>
             Current CoursewaresProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.DegreeApplyProvider">
            <summary>
             Current DegreeApplyProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlCatalogProvider">
            <summary>
             Current EvlCatalogProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlCompetencyScoreDeptProvider">
            <summary>
             Current EvlCompetencyScoreDeptProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.GroupsProvider">
            <summary>
             Current GroupsProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.InstitutesProvider">
            <summary>
             Current InstitutesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.LearningRecordCsvProvider">
            <summary>
             Current LearningRecordCsvProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.LearningRecordExcelProvider">
            <summary>
             Current LearningRecordExcelProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlUsertypeProvider">
            <summary>
             Current EvlUsertypeProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlUserProvider">
            <summary>
             Current EvlUserProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlGuestevlProvider">
            <summary>
             Current EvlGuestevlProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlModelProvider">
            <summary>
             Current EvlModelProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlScoreProvider">
            <summary>
             Current EvlScoreProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlScoredescriptionProvider">
            <summary>
             Current EvlScoredescriptionProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VuRightsProvider">
            <summary>
             Current VuRightsProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlVLearningRecordCsvProvider">
            <summary>
             Current EvlVLearningRecordCsvProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlVLearningRecordExcelProvider">
            <summary>
             Current EvlVLearningRecordExcelProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.EvlVScoreProvider">
            <summary>
             Current EvlVScoreProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwDegreeCoursesProvider">
            <summary>
             Current VwDegreeCoursesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwEvlUserProvider">
            <summary>
             Current VwEvlUserProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwInstituteDegreeCoursesProvider">
            <summary>
             Current VwInstituteDegreeCoursesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwInstituteDegreesProvider">
            <summary>
             Current VwInstituteDegreesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwInstituteDegreeStudentsProvider">
            <summary>
             Current VwInstituteDegreeStudentsProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwInstitutesProvider">
            <summary>
             Current VwInstitutesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwMenuPermissionProvider">
            <summary>
             Current VwMenuPermissionProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwRolePermissionProvider">
            <summary>
             Current VwRolePermissionProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwRolesProvider">
            <summary>
             Current VwRolesProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwStudentCourseRelationProvider">
            <summary>
             Current VwStudentCourseRelationProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwStudentsProvider">
            <summary>
             Current VwStudentsProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwTrainingUserProvider">
            <summary>
             Current VwTrainingUserProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwTrainingUserLogProvider">
            <summary>
             Current VwTrainingUserLogProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwUserGroupProvider">
            <summary>
             Current VwUserGroupProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwUserGroupPermissionProvider">
            <summary>
             Current VwUserGroupPermissionProviderBase instance.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProvider.VwUserRoleProvider">
            <summary>
             Current VwUserRoleProviderBase instance.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRightsChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuRights</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRightsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuRights"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRightsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuRightsSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlUserKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlUserKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_user_role index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_user_role index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_user_role index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_user_role index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_user_role index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_user_role index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlUser"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlUser},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlUser&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlUser)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlUser"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlUser"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlUser)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlUser"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlUser"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlUser,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlUser"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlUser Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlUser,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlUser object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlUser instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlUser Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUserChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlUser</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUserSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUserSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlUserSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlCompetencyScoreDeptProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCatalogProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlCatalogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlCatalogProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlCatalogKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_cId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_cId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlCatalogKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.GetByCId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_catalog index.
            </summary>
            <param name="_cId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCatalog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.GetByCId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_catalog index.
            </summary>
            <param name="_cId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCatalog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.GetByCId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_catalog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_cId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCatalog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.GetByCId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_catalog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_cId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCatalog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.GetByCId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_catalog index.
            </summary>
            <param name="_cId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCatalog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.GetByCId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_catalog index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_cId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlCatalog"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlCatalog},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlCatalog&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlCatalog)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlCatalog)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlCatalog,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlCatalog Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlCatalog,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlCatalog object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlCatalog instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlCatalog Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserGroupPermissionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwUserGroupPermissionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwStudentCourseRelationProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwStudentCourseRelationProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwInstituteDegreeCourses},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwInstituteDegreeCourses)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCourses"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCourses"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeCourses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreeCoursesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlModelProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlModelKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_modelId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_modelId">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlModelKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.GetByModelId(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_evl_model index.
            </summary>
            <param name="_modelId"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlModel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.GetByModelId(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_model index.
            </summary>
            <param name="_modelId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlModel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.GetByModelId(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_model index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_modelId"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlModel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.GetByModelId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_model index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_modelId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlModel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.GetByModelId(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_model index.
            </summary>
            <param name="_modelId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlModel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.GetByModelId(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_evl_model index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_modelId"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.EvlModel"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.EvlModel},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;EvlModel&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.EvlModel)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlModel"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlModel"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.EvlModel)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.EvlModel"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlModel"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlModel,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.EvlModel"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlModel Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.EvlModel,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.EvlModel object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.EvlModel instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.EvlModel Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlModelChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlModel</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlModelSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlModel"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlModelSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlModelSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCatalogChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlCatalog</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlCatalogSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlCatalog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlCatalogSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlCatalogSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CourseIdeaChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.CourseIdea</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CourseIdeaSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.CourseIdea"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CourseIdeaSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CourseIdeaSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuArticleChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuArticle</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuArticleSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuArticle"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuArticleSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuArticleSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.UserRoleProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.UserRoleProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingLogChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.TrainingLog</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.TrainingLogSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.TrainingLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.TrainingLogSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the TrainingLogSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DeepSessionEventArgs">
            <summary>
            Event Args used to transfer crucial information just before 
            and after a command is used in the data provider.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSessionEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSessionEventArgs"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSessionEventArgs.#ctor(GE.MyLearning.DL.Bases.DeepSession,System.String,System.Enum,GE.MyLearning.BL.IEntity,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSessionEventArgs"/> class.
            </summary>
            <param name="deepSession">The Current Deep Session.</param>
            <param name="currentTypePropertyKey">The Current Key"</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="entity">The entity.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSessionEventArgs.#ctor(GE.MyLearning.DL.Bases.DeepSession,System.String,System.Enum,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="deepSession">The deepSession.</param>
            <param name="currentTypePropertyKey">The Current Key"</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="list">The list.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSessionEventArgs.#ctor(GE.MyLearning.DL.Bases.DeepSession,System.String,System.Enum,GE.MyLearning.BL.IEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="deepSession">The deepSession.</param>
            <param name="currentTypePropertyKey">The Current Key.</param>
            <param name="deepTypeValue">The current Deep Type Value, DeepSaveType/DeepLoadType </param>
            <param name="entity">The current entity.</param>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.DeepSessionEventArgs.DeepSession">
            <summary>
            Gets or sets the current DeepSession.
            </summary>
            <value>The DeepSession.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.DeepSessionEventArgs.CurrentEntity">
            <summary>
            Gets or sets the current entity which the action is 
            being acted on.  If there is no entity, this 
            value will be null.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.DeepSessionEventArgs.CurrentEntityList">
            <summary>
            Gets or sets the current .
            </summary>
            <value>The return value.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.DeepSessionEventArgs.CurrentTypePropertyKey">
            <summary>
            Gets or Sets the name of the current type property key that 
            will be used to determine if the property will be run in the deep session.
            </summary>
            <value>A string value of the type property key.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.DeepSessionEventArgs.DeepTypeValue">
            <summary>
             The current DeepType Value, Either <c>DeepLoadType</c>, or <c>DeepSaveType</c>.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.DeepSessionEventArgs.Cancel">
            <summary>
            Gets or sets the Cancel property of the event.
            </summary>
            <value>Current Cancel Value.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.DeepSessionEventArgs.Skip">
            <summary>
            Gets or sets the current Skip value.  
            Setting this property will skip the current Deep Property.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CommandEventArgs">
            <summary>
            Event Args used to transfer crucial information just before 
            and after a command is used in the data provider.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CommandEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,GE.MyLearning.BL.IEntity,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="entity">The entity.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CommandEventArgs.#ctor(System.Data.Common.DbCommand,System.String,GE.MyLearning.BL.IEntity)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandEventArgs"/> class.
            </summary>
            <param name="command">The command.</param>
            <param name="methodName">Name of the method.</param>
            <param name="entity">The current entity.</param>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.CommandEventArgs.Command">
            <summary>
            Gets or sets the current command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.CommandEventArgs.MethodName">
            <summary>
            Gets or sets the name of the method.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.CommandEventArgs.CurrentEntity">
            <summary>
            Gets or sets the current entity which the action is 
            being acted on.  If there is no entity, this 
            value will be null.
            </summary>
            <value>The entity.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.CommandEventArgs.CurrentEntityList">
            <summary>
            Gets or sets the current .
            </summary>
            <value>The return value.</value>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DeepSession">
            <summary>
            Keeps a weak reference of the entire deep transaction for tracking purposes.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSession.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DeepSession"/> class.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSession.GetSessionObjects">
            <summary>
            Gets the set of current loaded objects.
            </summary>
            <returns>a list of already run objects</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSession.AddRun(System.Object,System.String)">
            <summary>
            Adds the specified entity property to the collection of properties.
            </summary>
            <param name="entity"></param>
            <param name="key"></param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSession.ContainsType(System.String)">
            <summary>
            Determines whether the specified obj has run for a specified property type.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSession.ContainsTypeExcluded(System.String)">
            <summary>
            Determines whether the specified obj has run for a specified property type.
            </summary>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSession.HasRun(System.Object,System.String)">
            <summary>
            Determines whether the specified obj has run.
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <returns>
            	<c>true</c> if the specified obj has run; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSession.GetReference(System.Object,System.String)">
            <summary>
            Get's the reference of the object that has run
            </summary>
            <param name="entity">The entity.</param>
            <param name="key">The key.</param>
            <returns>
            	object of the run reference
            </returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.DeepSession.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.DeepSession.DeepSessionInnerList">
            <summary>
            Gets the Deep Session nner list.
            </summary>
            <value>The inner list.</value>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.DeepSession.CancelSession">
            <summary>
            If set to true, any further requests for this deep session will be canceled.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.DeepSession.SkipChildren">
            <summary>
            If set to true, any further requests for this deep session requesting to Load a child collection will be skipped.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DeepSaveHandle`1">
            <summary>
            Handler for the deep save
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DeepSaveSingleHandle`1">
            <summary>
            Handler for the single deep save
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DeepLoadHandle`1">
            <summary>
            Handler for the deep load
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DeepLoadSingleHandle`1">
            <summary>
            Handler for the single deep load
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.ChildEntityTypeAttribute">
            <summary>
             Attribute used to decorate enumerations with underlying system type.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.ChildEntityTypeAttribute.#ctor(System.Type)">
            <summary>
             Marks the underlying type of a child entity property.
             </summary>
             <param name="entityType">Type of the property to load.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.ChildEntityTypeAttribute.GetType(System.Enum)">
            <summary>
            Gets the underlying system type for the specified enumeration value.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.ChildEntityTypeAttribute.EntityType">
            <summary>
            The underlying type for the ChildEntityTypes enumerations.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.IChildEntityProperty">
            <summary>
            Provides a common property used to access the child entity type enumeration value.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.IChildEntityProperty.ChildEntityType">
            <summary>
            Gets the value of the ChildEntityType property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.ChildEntityProperty`1">
            <summary>
            A generic wrapper for the generated ChildEntityTypes enumerations.
            </summary>
            <typeparam name="ChildEntityTypesEnum"></typeparam>
        </member>
        <member name="F:GE.MyLearning.DL.Bases.ChildEntityProperty`1.name">
            <summary>
            The Name member variable.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.ChildEntityProperty`1.Name">
            <summary>
            Gets or sets the Name property.
            </summary>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.ChildEntityProperty`1.ChildEntityType">
            <summary>
            Gets the value of the ChildEntityType property.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlGuestevlProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlGuestevlProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUserProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursesChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Courses</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Courses"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.CoursesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the CoursesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuReplypostProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuReplypostProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentsChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Students</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Students"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the StudentsSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.SysLogChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.SysLog</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.SysLogSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.SysLog"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.SysLogSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the SysLogSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserRoleSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserRole"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserRoleSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwUserRoleSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwRolesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwRolesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlVScoreSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlVScore"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlVScoreSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlVScoreSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlModelProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlModelProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.EvlBehaviordescriptionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuRenyuanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuRenyuanKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuRenyuanKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_renyuan index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRenyuan"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_renyuan index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRenyuan"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_renyuan index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRenyuan"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_renyuan index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRenyuan"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_renyuan index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRenyuan"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_renyuan index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuRenyuan"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuRenyuan},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuRenyuan&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuRenyuan)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuRenyuan)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuRenyuan,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuRenyuan Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuRenyuan,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuRenyuan object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuRenyuan instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuRenyuan Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRenyuanChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuRenyuan</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRenyuanSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuRenyuan"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuRenyuanSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuRenyuanSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuRenyuanProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuRenyuanProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupListProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuGroupListProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuGroupListProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuGroupListKey)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to delete.</param>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.Delete(System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.Delete(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Deletes a row from the DataSource.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id">. Primary Key.</param>
            <remarks>Deletes based on primary key(s).</remarks>
            <returns>Returns true if operation suceeded.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.Get(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuGroupListKey,System.Int32,System.Int32)">
            <summary>
            	Gets a row from the DataSource based on its primary key.
            </summary>
            <param name="transactionManager">A <see cref="T:GE.MyLearning.DL.TransactionManager"/> object.</param>
            <param name="key">The unique identifier of the row to retrieve.</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <returns>Returns an instance of the Entity class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.GetById(System.Int32)">
            <summary>
            	Gets rows from the datasource based on the primary key PK_VU_GroupList index.
            </summary>
            <param name="_id"></param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupList"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_GroupList index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupList"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_GroupList index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupList"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_GroupList index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupList"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.GetById(System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_GroupList index.
            </summary>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">out parameter to get total records for query</param>
            <remarks></remarks>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupList"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.GetById(GE.MyLearning.DL.TransactionManager,System.Int32,System.Int32,System.Int32,System.Int32@)">
            <summary>
            	Gets rows from the datasource based on the PK_VU_GroupList index.
            </summary>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="_id"></param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">Number of rows to return.</param>
            <param name="count">The total number of records.</param>
            <returns>Returns an instance of the <see cref="T:GE.MyLearning.BL.VuGroupList"/> class.</returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.TList{GE.MyLearning.BL.VuGroupList},System.Int32,System.Int32)">
            <summary>
            Fill a TList&lt;VuGroupList&gt; From a DataReader.
            </summary>
            <param name="reader">Datareader</param>
            <param name="rows">The collection to fill</param>
            <param name="start">Row number at which to start reading, the first row is 0.</param>
            <param name="pageLength">number of rows.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.TList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VuGroupList)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuGroupList"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuGroupList"/> object to refresh.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.RefreshEntity(System.Data.DataSet,GE.MyLearning.BL.VuGroupList)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VuGroupList"/> object from the <see cref="T:System.Data.DataSet"/>.
            </summary>
            <param name="dataSet">The <see cref="T:System.Data.DataSet"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuGroupList"/> object.</param>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.DeepLoad(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuGroupList,System.Boolean,GE.MyLearning.DL.DeepLoadType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Loads the <see cref="T:GE.MyLearning.BL.IEntity"/> object with criteria based of the child 
            property collections only N Levels Deep based on the <see cref="T:GE.MyLearning.DL.DeepLoadType"/>.
            </summary>
            <remarks>
            Use this method with caution as it is possible to DeepLoad with Recursion and traverse an entire object graph.
            </remarks>
            <param name="transactionManager"><see cref="T:GE.MyLearning.DL.TransactionManager"/> object</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VuGroupList"/> object to load.</param>
            <param name="deep">Boolean. A flag that indicates whether to recursively save all Property Collection that are descendants of this instance. If True, saves the complete object graph below this object. If False, saves this object only. </param>
            <param name="deepLoadType">DeepLoadType Enumeration to Include/Exclude object property collections from Load.</param>
            <param name="childTypes">GE.MyLearning.BL.VuGroupList Property Collection Type Array To Include or Exclude from Load</param>
            <param name="innerList">A collection of child types for easy access.</param>
            <exception cref="T:System.ArgumentNullException">entity or childTypes is null.</exception>
            <exception cref="T:System.ArgumentException">deepLoadType has invalid value.</exception>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListProviderBaseCore.DeepSave(GE.MyLearning.DL.TransactionManager,GE.MyLearning.BL.VuGroupList,GE.MyLearning.DL.DeepSaveType,System.Type[],GE.MyLearning.DL.Bases.DeepSession)">
            <summary>
            Deep Save the entire object graph of the GE.MyLearning.BL.VuGroupList object with criteria based of the child 
            Type property array and DeepSaveType.
            </summary>
            <param name="transactionManager">The transaction manager.</param>
            <param name="entity">GE.MyLearning.BL.VuGroupList instance</param>
            <param name="deepSaveType">DeepSaveType Enumeration to Include/Exclude object property collections from Save.</param>
            <param name="childTypes">GE.MyLearning.BL.VuGroupList Property Collection Type Array To Include or Exclude from Save</param>
            <param name="innerList">A Hashtable of child types for easy access.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CallRolesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.CallRolesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwUserGroupSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwUserGroup"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwUserGroupSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwUserGroupSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwRolePermissionSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwRolePermission"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwRolePermissionSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwRolePermissionSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwDegreeCoursesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwDegreeCoursesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.NetTiersProviderCollection">
            <summary>
            Reprensents the strongly typed collection of NetTiersProvider.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.NetTiersProviderCollection.Add(GE.MyLearning.DL.Bases.NetTiersProvider)">
            <summary>
            Adds the specified provider.
            </summary>
            <param name="provider">The provider.</param>
        </member>
        <member name="P:GE.MyLearning.DL.Bases.NetTiersProviderCollection.Item(System.String)">
            <summary>
            Gets the <see cref="T:NetTiersProvider"/> with the specified name.
            </summary>
            <value></value>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.CoursewaresProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.CoursewaresProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreeCoursesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.DegreeCoursesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuCatogaryExpertsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupItemProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VuGroupItemProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupListChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuGroupList</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuGroupListSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuGroupList"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuGroupListSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuGroupListSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwTrainingUserProviderBaseCore">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwTrainingUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserProviderBaseCore.Fill(System.Data.IDataReader,GE.MyLearning.BL.VList{GE.MyLearning.BL.VwTrainingUser},System.Int32,System.Int32)">
            <summary>
             Fill an <see cref="T:GE.MyLearning.BL.VList`1"/> From a DataReader.
            </summary>
             <param name="reader">Datareader</param>
             <param name="rows">The collection to fill</param>
             <param name="start">Start row</param>
             <param name="pageLength">number of row.</param>
            <returns>a <see cref="T:GE.MyLearning.BL.VList`1"/></returns>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserProviderBaseCore.RefreshEntity(System.Data.IDataReader,GE.MyLearning.BL.VwTrainingUser)">
            <summary>
            Refreshes the <see cref="T:GE.MyLearning.BL.VwTrainingUser"/> object from the <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="reader">The <see cref="T:System.Data.IDataReader"/> to read from.</param>
            <param name="entity">The <see cref="T:GE.MyLearning.BL.VwTrainingUser"/> object to refresh.</param>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwTrainingUserSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwTrainingUser"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwTrainingUserSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwTrainingUserSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwTrainingUserProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwTrainingUserProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwStudentsProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwStudentsProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwMenuPermissionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwMenuPermissionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.VwInstituteDegreeCoursesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUsertypeChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.EvlUsertype</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.EvlUsertypeSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.EvlUsertype"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.EvlUsertypeSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the EvlUsertypeSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.GroupsChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Groups</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.GroupsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Groups"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.GroupsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the GroupsSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.DegreesProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.DegreesProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuFriendshipChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.VuFriendship</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VuFriendshipSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VuFriendship"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VuFriendshipSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VuFriendshipSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentCourseRelationChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.StudentCourseRelation</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.StudentCourseRelationSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.StudentCourseRelation"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.StudentCourseRelationSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the StudentCourseRelationSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolesChildEntityTypes">
            <summary>
             Enumeration used to expose the different child entity types 
             for child properties in <c>GE.MyLearning.BL.Roles</c>
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.RolesSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.Roles"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.RolesSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the RolesSqlSortBuilder class.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.PermissionProviderBase">
            <summary>
             This class is the base class for any <see cref="T:GE.MyLearning.DL.Bases.PermissionProviderBase"/> implementation.
             It exposes CRUD methods as well as selecting on index, foreign keys and custom stored procedures.
            </summary>
        </member>
        <member name="T:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsSortBuilder">
            <summary>
            A strongly-typed instance of the <see cref="T:GE.MyLearning.DL.SqlSortBuilder`1"/> class
            that is used exclusively with a <see cref="T:GE.MyLearning.BL.VwInstituteDegreeStudents"/> object.
            </summary>
        </member>
        <member name="M:GE.MyLearning.DL.Bases.VwInstituteDegreeStudentsSortBuilder.#ctor">
            <summary>
            Initializes a new instance of the VwInstituteDegreeStudentsSqlSortBuilder class.
            </summary>
        </member>
    </members>
</doc>
